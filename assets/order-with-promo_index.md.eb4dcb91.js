import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.0e8ae64e.js";const B=JSON.parse('{"title":"Order with Promo","description":"","frontmatter":{},"headers":[],"relativePath":"order-with-promo/index.md","filePath":"order-with-promo/index.md","lastUpdated":1722608419000}'),o={name:"order-with-promo/index.md"},p=l(`<h1 id="order-with-promo" tabindex="-1">Order with Promo <a class="header-anchor" href="#order-with-promo" aria-label="Permalink to &quot;Order with Promo&quot;">​</a></h1><p>Now that you have a <code>Promo</code> component, you can add it to your <code>Order</code> component. With that in place, customers can finally enter promo codes and enjoy discounts on their orders.</p><h2 id="add-discount-type" tabindex="-1">Add <code>discount</code> type <a class="header-anchor" href="#add-discount-type" aria-label="Permalink to &quot;Add \`discount\` type&quot;">​</a></h2><p>But first, let’s see how to create a normal variant type for the <code>discount</code> derived variable inside <code>Promo</code>. We do not have to do this, because it works fine the way it is now, but the process of creating this new type should give us more insight into OCaml’s type system. Additionally, normal variants are better than polymorphic variants at “documenting” the types that will be used in your program, since they must always be explicitly defined before you can use them.</p><p>When we hover over the <code>discount</code> variable, we see this type expression:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">[</span><span style="color:#FDAEB7;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">CodeError</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">error)</span></span>
<span class="line"><span style="color:#E1E4E8;"> | </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">Discount</span><span style="color:#E1E4E8;">(float)</span></span>
<span class="line"><span style="color:#E1E4E8;"> | </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">DiscountError</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">[</span><span style="color:#FDAEB7;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">MissingSandwichTypes</span></span>
<span class="line"><span style="color:#E1E4E8;">                   | </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedMegaBurger</span></span>
<span class="line"><span style="color:#E1E4E8;">                   | </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedOneBurger</span></span>
<span class="line"><span style="color:#E1E4E8;">                   | </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedTwoBurgers</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">]</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;"> | </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NoSubmittedCode</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">[</span><span style="color:#B31D28;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">CodeError</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">error)</span></span>
<span class="line"><span style="color:#24292E;"> | </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">Discount</span><span style="color:#24292E;">(float)</span></span>
<span class="line"><span style="color:#24292E;"> | </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">DiscountError</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">[</span><span style="color:#B31D28;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">MissingSandwichTypes</span></span>
<span class="line"><span style="color:#24292E;">                   | </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedMegaBurger</span></span>
<span class="line"><span style="color:#24292E;">                   | </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedOneBurger</span></span>
<span class="line"><span style="color:#24292E;">                   | </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedTwoBurgers</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">]</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;"> | </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NoSubmittedCode</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">]</span></span></code></pre></div><p>The easiest thing to do is to create a new <code>discount</code> type and assign it to the above type expression, then delete the <code>\`</code> from the top-level variant tags to turn them into variant constructors<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">discount</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">CodeError</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#DBEDFF;">error</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Discount</span><span style="color:#E1E4E8;">(</span><span style="color:#DBEDFF;">float</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">DiscountError</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">[</span><span style="color:#FDAEB7;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">MissingSandwichTypes</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedMegaBurger</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedOneBurger</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedTwoBurgers</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">]</span><span style="color:#F97583;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    )</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NoSubmittedCode</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">type</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">discount</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">CodeError</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#032F62;">error</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Discount</span><span style="color:#24292E;">(</span><span style="color:#032F62;">float</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">DiscountError</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">[</span><span style="color:#B31D28;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">MissingSandwichTypes</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedMegaBurger</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedOneBurger</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedTwoBurgers</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">]</span><span style="color:#D73A49;">,</span></span>
<span class="line"><span style="color:#24292E;">    )</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NoSubmittedCode</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>However, this results in a compilation error:</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">Error: A type variable is unbound in this type declaration.</span></span>
<span class="line"><span style="color:#e1e4e8;">       In case</span></span>
<span class="line"><span style="color:#e1e4e8;">         DiscountError of ([&gt; \`MissingSandwichTypes</span></span>
<span class="line"><span style="color:#e1e4e8;">                            | \`NeedMegaBurger</span></span>
<span class="line"><span style="color:#e1e4e8;">                            | \`NeedOneBurger</span></span>
<span class="line"><span style="color:#e1e4e8;">                            | \`NeedTwoBurgers ]</span></span>
<span class="line"><span style="color:#e1e4e8;">                           as &#39;a) the variable &#39;a is unbound</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">Error: A type variable is unbound in this type declaration.</span></span>
<span class="line"><span style="color:#24292e;">       In case</span></span>
<span class="line"><span style="color:#24292e;">         DiscountError of ([&gt; \`MissingSandwichTypes</span></span>
<span class="line"><span style="color:#24292e;">                            | \`NeedMegaBurger</span></span>
<span class="line"><span style="color:#24292e;">                            | \`NeedOneBurger</span></span>
<span class="line"><span style="color:#24292e;">                            | \`NeedTwoBurgers ]</span></span>
<span class="line"><span style="color:#24292e;">                           as &#39;a) the variable &#39;a is unbound</span></span></code></pre></div><p>We’ll come back to this error message later. For now, observe that the error disappears if we simply delete <code>&gt;</code>:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">discount</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">CodeError</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#DBEDFF;">error</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Discount</span><span style="color:#E1E4E8;">(</span><span style="color:#DBEDFF;">float</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">DiscountError</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">[</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">MissingSandwichTypes</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedMegaBurger</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedOneBurger</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedTwoBurgers</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">]</span><span style="color:#F97583;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    )</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NoSubmittedCode</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">type</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">discount</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">CodeError</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#032F62;">error</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Discount</span><span style="color:#24292E;">(</span><span style="color:#032F62;">float</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">DiscountError</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">[</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">MissingSandwichTypes</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedMegaBurger</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedOneBurger</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedTwoBurgers</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">]</span><span style="color:#D73A49;">,</span></span>
<span class="line"><span style="color:#24292E;">    )</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NoSubmittedCode</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>This fixes the syntax error so that we now have a correctly-defined variant type.</p><h2 id="refactor-discount" tabindex="-1">Refactor <code>discount</code> <a class="header-anchor" href="#refactor-discount" aria-label="Permalink to &quot;Refactor \`discount\`&quot;">​</a></h2><p>Refactor the <code>discount</code> derived variable inside <code>Promo.make</code> to use our new variant type by deleting all occurrences of <code>\`</code>:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">discount</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (submittedCode) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NoSubmittedCode</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">code</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getDiscountFunction(code</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> date)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">error</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">CodeError</span><span style="color:#E1E4E8;">(error)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Ok</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">discountFunction</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (discountFunction(items)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">error</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">DiscountError</span><span style="color:#E1E4E8;">(error)</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Ok</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">value</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Discount</span><span style="color:#E1E4E8;">(value)</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">discount</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (submittedCode) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NoSubmittedCode</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">code</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getDiscountFunction(code</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> date)) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Error</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">error</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">CodeError</span><span style="color:#24292E;">(error)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Ok</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">discountFunction</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (discountFunction(items)) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Error</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">error</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">DiscountError</span><span style="color:#24292E;">(error)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Ok</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">value</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Discount</span><span style="color:#24292E;">(value)</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>You can likewise refactor the switch expression inside the render logic:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (discount) {</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NoSubmittedCode</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">React</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">null</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Discount</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">discount</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> discount </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Float</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">neg </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RR</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">currency</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">CodeError</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">error</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">   &lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">className</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">Style</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">codeError</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">     {</span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">errorType</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (error) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">InvalidCode</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;Invalid&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ExpiredCode</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;Expired&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FDAEB7;">{</span><span style="color:#79B8FF;">j</span><span style="color:#FDAEB7;">|</span><span style="color:#DBEDFF;">$errorType promo code</span><span style="color:#FDAEB7;">|</span><span style="color:#79B8FF;">j</span><span style="color:#FDAEB7;">}</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RR</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">s}</span></span>
<span class="line"><span style="color:#E1E4E8;">   &lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">DiscountError</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">code</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">buyWhat</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (code) {</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedOneBurger</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;at least 1 more burger&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedTwoBurgers</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;at least 2 burgers&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedMegaBurger</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;a burger with every topping&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">MissingSandwichTypes</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;every sandwich&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">     }</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   &lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">className</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">Style</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">discountError</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">     {</span><span style="color:#B392F0;">RR</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">s(</span><span style="color:#FDAEB7;">{</span><span style="color:#79B8FF;">j</span><span style="color:#FDAEB7;">|</span><span style="color:#DBEDFF;">Buy $buyWhat to enjoy this promotion</span><span style="color:#FDAEB7;">|</span><span style="color:#79B8FF;">j</span><span style="color:#FDAEB7;">}</span><span style="color:#E1E4E8;">)}</span></span>
<span class="line"><span style="color:#E1E4E8;">   &lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;"> }}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (discount) {</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NoSubmittedCode</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">React</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">null</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Discount</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">discount</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> discount </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Float</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">neg </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RR</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">currency</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">CodeError</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">error</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">   &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">className</span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;">Style</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">codeError</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">     {</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">errorType</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (error) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">InvalidCode</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Invalid&quot;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ExpiredCode</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Expired&quot;</span></span>
<span class="line"><span style="color:#24292E;">        }</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#B31D28;">{</span><span style="color:#005CC5;">j</span><span style="color:#B31D28;">|</span><span style="color:#032F62;">$errorType promo code</span><span style="color:#B31D28;">|</span><span style="color:#005CC5;">j</span><span style="color:#B31D28;">}</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RR</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">s}</span></span>
<span class="line"><span style="color:#24292E;">   &lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">DiscountError</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">code</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">buyWhat</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (code) {</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedOneBurger</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;at least 1 more burger&quot;</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedTwoBurgers</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;at least 2 burgers&quot;</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedMegaBurger</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;a burger with every topping&quot;</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">MissingSandwichTypes</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;every sandwich&quot;</span></span>
<span class="line"><span style="color:#24292E;">     }</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">   &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">className</span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;">Style</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">discountError</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">     {</span><span style="color:#6F42C1;">RR</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">s(</span><span style="color:#B31D28;">{</span><span style="color:#005CC5;">j</span><span style="color:#B31D28;">|</span><span style="color:#032F62;">Buy $buyWhat to enjoy this promotion</span><span style="color:#B31D28;">|</span><span style="color:#005CC5;">j</span><span style="color:#B31D28;">}</span><span style="color:#24292E;">)}</span></span>
<span class="line"><span style="color:#24292E;">   &lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;"> }}</span></span></code></pre></div><h2 id="type-constructor-and-type-variable" tabindex="-1">Type constructor and type variable <a class="header-anchor" href="#type-constructor-and-type-variable" aria-label="Permalink to &quot;Type constructor and type variable&quot;">​</a></h2><p>Change the <code>discount</code> type to this:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">discount</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">&#39;</span><span style="color:#79B8FF;">a</span><span style="color:#E1E4E8;">) </span><span style="color:#FDAEB7;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">  | </span><span style="color:#79B8FF;">CodeError</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">error)</span></span>
<span class="line"><span style="color:#E1E4E8;">  | </span><span style="color:#79B8FF;">Discount</span><span style="color:#E1E4E8;">(float)</span></span>
<span class="line"><span style="color:#E1E4E8;">  | </span><span style="color:#79B8FF;">DiscountError</span><span style="color:#E1E4E8;">(&#39;a)</span></span>
<span class="line"><span style="color:#E1E4E8;">  | </span><span style="color:#79B8FF;">NoSubmittedCode</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">type</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">discount</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">&#39;</span><span style="color:#005CC5;">a</span><span style="color:#24292E;">) </span><span style="color:#B31D28;">=</span></span>
<span class="line"><span style="color:#24292E;">  | </span><span style="color:#005CC5;">CodeError</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">error)</span></span>
<span class="line"><span style="color:#24292E;">  | </span><span style="color:#005CC5;">Discount</span><span style="color:#24292E;">(float)</span></span>
<span class="line"><span style="color:#24292E;">  | </span><span style="color:#005CC5;">DiscountError</span><span style="color:#24292E;">(&#39;a)</span></span>
<span class="line"><span style="color:#24292E;">  | </span><span style="color:#005CC5;">NoSubmittedCode</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>Now <code>discount</code> is a <em>type constructor</em> that takes a <em>type variable</em> named <code>&#39;a</code>. A type constructor is not a fixed type—you can think of it as a function that takes a type and outputs a new type.</p><p>The advantage of doing this is that the variant tags inside <code>DiscountError</code> are no longer constrained by our <code>discount</code> type. This makes sense because they are used primarily in the <code>Discount</code> module, and if any variant tags are renamed, added, or deleted, those changes will and should happen in <code>Discount</code>.</p><p>Using a type variable does not sacrifice type safety, if you hover over the <code>discount</code> variable, you see that its type is:</p><div class="language-reason vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">reason</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">discount(</span><span style="color:#79B8FF;">[</span><span style="color:#FDAEB7;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">MissingSandwichTypes</span></span>
<span class="line"><span style="color:#E1E4E8;">          | </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedMegaBurger</span></span>
<span class="line"><span style="color:#E1E4E8;">          | </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedOneBurger</span></span>
<span class="line"><span style="color:#E1E4E8;">          | </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedTwoBurgers</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">]</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">discount(</span><span style="color:#005CC5;">[</span><span style="color:#B31D28;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">MissingSandwichTypes</span></span>
<span class="line"><span style="color:#24292E;">          | </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedMegaBurger</span></span>
<span class="line"><span style="color:#24292E;">          | </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedOneBurger</span></span>
<span class="line"><span style="color:#24292E;">          | </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedTwoBurgers</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">]</span><span style="color:#24292E;">)</span></span></code></pre></div><p>Based on its usage, OCaml can figure out the exact type of the <code>discount</code> variable and automatically fill in the value of the type variable.</p><h2 id="allow-more-than" tabindex="-1"><code>&gt;</code> = “allow more than” <a class="header-anchor" href="#allow-more-than" aria-label="Permalink to &quot;\`&gt;\` = &quot;allow more than&quot;&quot;">​</a></h2><p>In the type expression above, we once again see <code>&gt;</code>, so let’s see what it means. In polymorphic variant type expressions, it means “allow more than”. In this case, it means that tags other than the four that are listed are allowed. For example, this type would be allowed:</p><div class="language-reason vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">reason</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">discount(</span><span style="color:#79B8FF;">[|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">MissingSandwichTypes</span></span>
<span class="line"><span style="color:#E1E4E8;">          | </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedMegaBurger</span></span>
<span class="line"><span style="color:#E1E4E8;">          | </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedOneBurger</span></span>
<span class="line"><span style="color:#E1E4E8;">          | </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedTwoBurgers</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">          | </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">HoneyButter</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">          | </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">KewpieMayo</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">]</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#24292E;">discount(</span><span style="color:#005CC5;">[|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">MissingSandwichTypes</span></span>
<span class="line"><span style="color:#24292E;">          | </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedMegaBurger</span></span>
<span class="line"><span style="color:#24292E;">          | </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedOneBurger</span></span>
<span class="line"><span style="color:#24292E;">          | </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedTwoBurgers</span></span>
<span class="line highlighted"><span style="color:#24292E;">          | </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">HoneyButter</span></span>
<span class="line highlighted"><span style="color:#24292E;">          | </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">KewpieMayo</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">]</span><span style="color:#24292E;">)</span></span></code></pre></div><p>When defining your own types, you will most often used <em>fixed</em> polymormorphic variants, i.e. those that don’t have <code>&gt;</code> in their type expressions. But it is still useful to know what <code>&gt;</code> does, since it appears when the compiler infers the type of a variable or function that uses polymorphic variants.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Fixed polymorphic variants and normal variants are roughly equivalent and can be used interchangeably.</p></div><h2 id="implicit-type-variable" tabindex="-1">Implicit type variable <a class="header-anchor" href="#implicit-type-variable" aria-label="Permalink to &quot;Implicit type variable&quot;">​</a></h2><p>Let’s come back to the question of why the original attempt at a variant type definition was syntactically invalid:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">discount</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">CodeError</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#DBEDFF;">error</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Discount</span><span style="color:#E1E4E8;">(</span><span style="color:#DBEDFF;">float</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">DiscountError</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">[</span><span style="color:#FDAEB7;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">MissingSandwichTypes</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedMegaBurger</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedOneBurger</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedTwoBurgers</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">]</span><span style="color:#F97583;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    )</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NoSubmittedCode</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">type</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">discount</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">CodeError</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#032F62;">error</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Discount</span><span style="color:#24292E;">(</span><span style="color:#032F62;">float</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">DiscountError</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">[</span><span style="color:#B31D28;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">MissingSandwichTypes</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedMegaBurger</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedOneBurger</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedTwoBurgers</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">]</span><span style="color:#D73A49;">,</span></span>
<span class="line"><span style="color:#24292E;">    )</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NoSubmittedCode</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>The reason is that there’s an implicit type variable around the <code>&gt;</code>. The above type expression is equivalent to:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">discount</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">CodeError</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#DBEDFF;">error</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Discount</span><span style="color:#E1E4E8;">(</span><span style="color:#DBEDFF;">float</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">DiscountError</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">[</span><span style="color:#FDAEB7;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">MissingSandwichTypes</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedMegaBurger</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedOneBurger</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedTwoBurgers</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">]</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">as</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">&#39;</span><span style="color:#79B8FF;">a</span><span style="color:#F97583;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    )</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NoSubmittedCode</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">type</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">discount</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">CodeError</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#032F62;">error</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Discount</span><span style="color:#24292E;">(</span><span style="color:#032F62;">float</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">DiscountError</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">[</span><span style="color:#B31D28;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">MissingSandwichTypes</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedMegaBurger</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedOneBurger</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedTwoBurgers</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">]</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">as</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">&#39;</span><span style="color:#005CC5;">a</span><span style="color:#D73A49;">,</span></span>
<span class="line"><span style="color:#24292E;">    )</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NoSubmittedCode</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>Now the error message makes a bit more sense:</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">Error: A type variable is unbound in this type declaration.</span></span>
<span class="line"><span style="color:#e1e4e8;">       In case</span></span>
<span class="line"><span style="color:#e1e4e8;">         DiscountError of ([&gt; \`MissingSandwichTypes</span></span>
<span class="line"><span style="color:#e1e4e8;">                            | \`NeedMegaBurger</span></span>
<span class="line"><span style="color:#e1e4e8;">                            | \`NeedOneBurger</span></span>
<span class="line"><span style="color:#e1e4e8;">                            | \`NeedTwoBurgers ]</span></span>
<span class="line highlighted"><span style="color:#e1e4e8;">                           as &#39;a) the variable &#39;a is unbound</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#24292e;">Error: A type variable is unbound in this type declaration.</span></span>
<span class="line"><span style="color:#24292e;">       In case</span></span>
<span class="line"><span style="color:#24292e;">         DiscountError of ([&gt; \`MissingSandwichTypes</span></span>
<span class="line"><span style="color:#24292e;">                            | \`NeedMegaBurger</span></span>
<span class="line"><span style="color:#24292e;">                            | \`NeedOneBurger</span></span>
<span class="line"><span style="color:#24292e;">                            | \`NeedTwoBurgers ]</span></span>
<span class="line highlighted"><span style="color:#24292e;">                           as &#39;a) the variable &#39;a is unbound</span></span></code></pre></div><p>The type variable exists, but it’s pointless unless it appears as an argument of the <code>discount</code> type constructor. Once it’s added, it compiles:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line highlighted"><span style="color:#F97583;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">discount</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">&#39;</span><span style="color:#79B8FF;">a</span><span style="color:#E1E4E8;">) </span><span style="color:#FDAEB7;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">  | </span><span style="color:#79B8FF;">CodeError</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">error)</span></span>
<span class="line"><span style="color:#E1E4E8;">  | </span><span style="color:#79B8FF;">Discount</span><span style="color:#E1E4E8;">(float)</span></span>
<span class="line"><span style="color:#E1E4E8;">  | </span><span style="color:#79B8FF;">DiscountError</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">[</span><span style="color:#FDAEB7;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        | </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">MissingSandwichTypes</span></span>
<span class="line"><span style="color:#E1E4E8;">        | </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedMegaBurger</span></span>
<span class="line"><span style="color:#E1E4E8;">        | </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedOneBurger</span></span>
<span class="line"><span style="color:#E1E4E8;">        | </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedTwoBurgers</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">]</span><span style="color:#E1E4E8;"> as &#39;a</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    )</span></span>
<span class="line"><span style="color:#E1E4E8;">  | </span><span style="color:#79B8FF;">NoSubmittedCode</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line highlighted"><span style="color:#D73A49;">type</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">discount</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">&#39;</span><span style="color:#005CC5;">a</span><span style="color:#24292E;">) </span><span style="color:#B31D28;">=</span></span>
<span class="line"><span style="color:#24292E;">  | </span><span style="color:#005CC5;">CodeError</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">error)</span></span>
<span class="line"><span style="color:#24292E;">  | </span><span style="color:#005CC5;">Discount</span><span style="color:#24292E;">(float)</span></span>
<span class="line"><span style="color:#24292E;">  | </span><span style="color:#005CC5;">DiscountError</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">[</span><span style="color:#B31D28;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        | </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">MissingSandwichTypes</span></span>
<span class="line"><span style="color:#24292E;">        | </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedMegaBurger</span></span>
<span class="line"><span style="color:#24292E;">        | </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedOneBurger</span></span>
<span class="line"><span style="color:#24292E;">        | </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedTwoBurgers</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">]</span><span style="color:#24292E;"> as &#39;a</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    )</span></span>
<span class="line"><span style="color:#24292E;">  | </span><span style="color:#005CC5;">NoSubmittedCode</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>This is somewhat like accidentally using a variable in a function but forgetting to add that variable to the function’s argument list.</p><h2 id="force-discounterror-argument-to-be-polymorphic-variant" tabindex="-1">Force <code>DiscountError</code> argument to be polymorphic variant <a class="header-anchor" href="#force-discounterror-argument-to-be-polymorphic-variant" aria-label="Permalink to &quot;Force \`DiscountError\` argument to be polymorphic variant&quot;">​</a></h2><p>Right now the argument of the <code>DiscountError</code> constructor can be any type at all, but to be explicit, we can force it to be a polymorphic variant:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">discount</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">&#39;</span><span style="color:#79B8FF;">a</span><span style="color:#E1E4E8;">) </span><span style="color:#FDAEB7;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">  | </span><span style="color:#79B8FF;">CodeError</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">error)</span></span>
<span class="line"><span style="color:#E1E4E8;">  | </span><span style="color:#79B8FF;">Discount</span><span style="color:#E1E4E8;">(float)</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  | </span><span style="color:#79B8FF;">DiscountError</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">[</span><span style="color:#FDAEB7;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">]</span><span style="color:#E1E4E8;"> as &#39;a)</span></span>
<span class="line"><span style="color:#E1E4E8;">  | </span><span style="color:#79B8FF;">NoSubmittedCode</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">type</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">discount</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">&#39;</span><span style="color:#005CC5;">a</span><span style="color:#24292E;">) </span><span style="color:#B31D28;">=</span></span>
<span class="line"><span style="color:#24292E;">  | </span><span style="color:#005CC5;">CodeError</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">error)</span></span>
<span class="line"><span style="color:#24292E;">  | </span><span style="color:#005CC5;">Discount</span><span style="color:#24292E;">(float)</span></span>
<span class="line highlighted"><span style="color:#24292E;">  | </span><span style="color:#005CC5;">DiscountError</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">[</span><span style="color:#B31D28;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">]</span><span style="color:#24292E;"> as &#39;a)</span></span>
<span class="line"><span style="color:#24292E;">  | </span><span style="color:#005CC5;">NoSubmittedCode</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>The <code>[&gt; ]</code> type expression means a polymorphic variant that has no tags, but allows more tags, which basically means any polymorphic variant. Note that adding this small restriction to the type doesn’t make a real difference in this program—it’s just a way to make it clear that <code>DiscountError</code>’s argument should be a polymorphic variant. It’s an optional embellishment that you can feel free to leave out.</p><h2 id="quick-summary" tabindex="-1">Quick summary <a class="header-anchor" href="#quick-summary" aria-label="Permalink to &quot;Quick summary&quot;">​</a></h2><p>You refactored the <code>discount</code> reactive variable to use a normal variant instead of a polymorphic variant. The code changes were fairly minimal, but to understand what was happening, it was necessary to learn the basics of type constructors and type variables. In the next sections, we’ll set types and other theoretical considerations aside and get into the nitty-gritty of the UI changes you must make to add promo support to the <code>Order</code> component.</p><h2 id="add-dateinput-component" tabindex="-1">Add <code>DateInput</code> component <a class="header-anchor" href="#add-dateinput-component" aria-label="Permalink to &quot;Add \`DateInput\` component&quot;">​</a></h2><p>To see different promotions in action, we want to be able to easily change the date in our demo, so add a new file <code>DateInput.re</code>:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">stringToDate</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> s </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#6A737D;">  // add &quot;T00:00&quot; to make sure the date is in local time</span></span>
<span class="line"><span style="color:#E1E4E8;">  s </span><span style="color:#FDAEB7;">++</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;T00:00&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Date</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">fromString</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">dateToString</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> d </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">Printf</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">sprintf(</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">    </span><span style="color:#DBEDFF;">&quot;</span><span style="color:#79B8FF;">%</span><span style="color:#DBEDFF;">4.0f-</span><span style="color:#79B8FF;">%</span><span style="color:#DBEDFF;">02.0f-</span><span style="color:#79B8FF;">%</span><span style="color:#DBEDFF;">02.0f&quot;</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Date</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getFullYear(d)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Date</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getMonth(d) </span><span style="color:#FDAEB7;">+.</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#FDAEB7;">.,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Date</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getDate(d)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  )</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#F97583;">@</span><span style="color:#B392F0;">react</span><span style="color:#F97583;">.</span><span style="color:#79B8FF;">component</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (~date</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Date</span><span style="color:#FDAEB7;">.</span><span style="color:#DBEDFF;">t</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> ~onChange</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Date</span><span style="color:#FDAEB7;">.</span><span style="color:#DBEDFF;">t</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">unit</span><span style="color:#E1E4E8;">) </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">input</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">type_</span><span style="color:#F97583;">=</span><span style="color:#DBEDFF;">&quot;date&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">required</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">value</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{dateToString(date)}</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">onChange</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{evt </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> evt </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RR</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getValueFromEvent </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> stringToDate </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> onChange}</span></span>
<span class="line"><span style="color:#E1E4E8;">  /&gt;</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">stringToDate</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> s </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#6A737D;">  // add &quot;T00:00&quot; to make sure the date is in local time</span></span>
<span class="line"><span style="color:#24292E;">  s </span><span style="color:#B31D28;">++</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;T00:00&quot;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Date</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">fromString</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">dateToString</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> d </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">Printf</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">sprintf(</span></span>
<span class="line highlighted"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">%</span><span style="color:#032F62;">4.0f-</span><span style="color:#005CC5;">%</span><span style="color:#032F62;">02.0f-</span><span style="color:#005CC5;">%</span><span style="color:#032F62;">02.0f&quot;</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Date</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getFullYear(d)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Date</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getMonth(d) </span><span style="color:#B31D28;">+.</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#B31D28;">.,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Date</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getDate(d)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">  )</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">[</span><span style="color:#D73A49;">@</span><span style="color:#6F42C1;">react</span><span style="color:#D73A49;">.</span><span style="color:#005CC5;">component</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">make</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (~date</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Date</span><span style="color:#B31D28;">.</span><span style="color:#032F62;">t</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> ~onChange</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Date</span><span style="color:#B31D28;">.</span><span style="color:#032F62;">t</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">unit</span><span style="color:#24292E;">) </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">input</span></span>
<span class="line highlighted"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">type_</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;date&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">required</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">value</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{dateToString(date)}</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">onChange</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{evt </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> evt </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RR</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getValueFromEvent </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> stringToDate </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> onChange}</span></span>
<span class="line"><span style="color:#24292E;">  /&gt;</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>A few notes:</p><ul><li>We use <code>Printf.sprintf</code> to give us more control over how the <code>float</code> components of a Date<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup> are converted to strings: <ul><li>The <a href="https://melange.re/v4.0.0/api/re/melange/Stdlib/Printf/index.html#val-fprintf" target="_blank" rel="noreferrer">float conversion specification</a><code>%4.0f</code> sets a minimum width of 4 and 0 numbers after the decimal</li><li>The float conversion specification <code>%02.0f</code> sets a minimum width of 2 (left padded with 0) and 0 numbers after the decimal</li></ul></li><li>The <code>type</code> prop of <code>input</code> has been renamed to <code>type_</code>, because in OCaml, <code>type</code> is a reserved keyword and can’t be used as an argument name. But don’t worry, it will still say <code>type</code> in the generated JS output.</li></ul><h2 id="add-demo-component" tabindex="-1">Add <code>Demo</code> component <a class="header-anchor" href="#add-demo-component" aria-label="Permalink to &quot;Add \`Demo\` component&quot;">​</a></h2><p>Move the contents of <code>Index.App</code> into a new file called <code>Demo.re</code>. In the process, add our newly-created <code>DateInput</code> component:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">items</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Order</span><span style="color:#FDAEB7;">.</span><span style="color:#DBEDFF;">t</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">[</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Portabello</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Unicorn</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Ham</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Turducken</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">Hotdog</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">lettuce</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">tomatoes</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">onions</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">cheese</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">bacon</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">6</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  })</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">lettuce</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#FDAEB7;">,</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">tomatoes</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#FDAEB7;">,</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">onions</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">cheese</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">bacon</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  })</span><span style="color:#FDAEB7;">,</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">lettuce</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">tomatoes</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">onions</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">cheese</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">bacon</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  })</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">lettuce</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">tomatoes</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">onions</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">cheese</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">bacon</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  })</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">lettuce</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">tomatoes</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">onions</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">cheese</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">bacon</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  })</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#79B8FF;">]</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#F97583;">@</span><span style="color:#B392F0;">react</span><span style="color:#F97583;">.</span><span style="color:#79B8FF;">component</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">()</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">date</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">setDate</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">RR</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">useStateValue(</span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Date</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">fromString(</span><span style="color:#DBEDFF;">&quot;2024-05-28T00:00&quot;</span><span style="color:#E1E4E8;">))</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">h1</span><span style="color:#E1E4E8;">&gt; {</span><span style="color:#B392F0;">RR</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">s(</span><span style="color:#DBEDFF;">&quot;Order confirmation&quot;</span><span style="color:#E1E4E8;">)} &lt;/</span><span style="color:#85E89D;">h1</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#B392F0;">DateInput</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">date</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onChange</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">setDate /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">h2</span><span style="color:#E1E4E8;">&gt; {</span><span style="color:#B392F0;">RR</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">s(</span><span style="color:#DBEDFF;">&quot;Order&quot;</span><span style="color:#E1E4E8;">)} &lt;/</span><span style="color:#85E89D;">h2</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#B392F0;">Order</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">items</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">date</span><span style="color:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">items</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Order</span><span style="color:#B31D28;">.</span><span style="color:#032F62;">t</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">[</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Portabello</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Unicorn</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Ham</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Turducken</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">Hotdog</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">lettuce</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">tomatoes</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">onions</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">cheese</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">bacon</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">6</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">  })</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">lettuce</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#B31D28;">,</span></span>
<span class="line highlighted"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">tomatoes</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#B31D28;">,</span></span>
<span class="line highlighted"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">onions</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">cheese</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">bacon</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">  })</span><span style="color:#B31D28;">,</span></span>
<span class="line highlighted"><span style="color:#24292E;">  </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">lettuce</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">tomatoes</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">onions</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">cheese</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">bacon</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">  })</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">lettuce</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">tomatoes</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">onions</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">cheese</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">bacon</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">  })</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">lettuce</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">tomatoes</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">onions</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">cheese</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">bacon</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">  })</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#005CC5;">]</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">[</span><span style="color:#D73A49;">@</span><span style="color:#6F42C1;">react</span><span style="color:#D73A49;">.</span><span style="color:#005CC5;">component</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">make</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">()</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">date</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">setDate</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">RR</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">useStateValue(</span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Date</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">fromString(</span><span style="color:#032F62;">&quot;2024-05-28T00:00&quot;</span><span style="color:#24292E;">))</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">h1</span><span style="color:#24292E;">&gt; {</span><span style="color:#6F42C1;">RR</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">s(</span><span style="color:#032F62;">&quot;Order confirmation&quot;</span><span style="color:#24292E;">)} &lt;/</span><span style="color:#22863A;">h1</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#6F42C1;">DateInput</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">date</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onChange</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">setDate /&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">h2</span><span style="color:#24292E;">&gt; {</span><span style="color:#6F42C1;">RR</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">s(</span><span style="color:#032F62;">&quot;Order&quot;</span><span style="color:#24292E;">)} &lt;/</span><span style="color:#22863A;">h2</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#6F42C1;">Order</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">items</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">date</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>Change <code>Index</code> to use the new <code>Demo</code> component:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">node</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ReactDOM</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">querySelector(</span><span style="color:#DBEDFF;">&quot;#root&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (node) {</span></span>
<span class="line"><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Console</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">error(</span><span style="color:#DBEDFF;">&quot;Failed to start React: couldn&#39;t find the #root element&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">root</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">root</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ReactDOM</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Client</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">createRoot(root)</span><span style="color:#FDAEB7;">;</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">ReactDOM</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Client</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">render(root</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> &lt;</span><span style="color:#B392F0;">Demo</span><span style="color:#E1E4E8;"> /&gt;)</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">node</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ReactDOM</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">querySelector(</span><span style="color:#032F62;">&quot;#root&quot;</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (node) {</span></span>
<span class="line"><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Console</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">error(</span><span style="color:#032F62;">&quot;Failed to start React: couldn&#39;t find the #root element&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">root</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">root</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ReactDOM</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Client</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">createRoot(root)</span><span style="color:#B31D28;">;</span></span>
<span class="line highlighted"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">ReactDOM</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Client</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">render(root</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> &lt;</span><span style="color:#6F42C1;">Demo</span><span style="color:#24292E;"> /&gt;)</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#B31D28;">;</span></span></code></pre></div><h2 id="add-promo-to-order" tabindex="-1">Add <code>Promo</code> to <code>Order</code> <a class="header-anchor" href="#add-promo-to-order" aria-label="Permalink to &quot;Add \`Promo\` to \`Order\`&quot;">​</a></h2><p>Add the <code>Promo</code> component to the <code>Order</code> component:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#F97583;">@</span><span style="color:#B392F0;">react</span><span style="color:#F97583;">.</span><span style="color:#79B8FF;">component</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (~items</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">t</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> ~date</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Date</span><span style="color:#FDAEB7;">.</span><span style="color:#DBEDFF;">t</span><span style="color:#E1E4E8;">) </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">discount</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">setDiscount</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RR</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">useStateValue(</span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">subtotal</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    items</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ListLabels</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">fold_left(~init</span><span style="color:#FDAEB7;">=</span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">.,</span><span style="color:#E1E4E8;"> ~f</span><span style="color:#FDAEB7;">=</span><span style="color:#E1E4E8;">(acc</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> order) </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">         acc </span><span style="color:#FDAEB7;">+.</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toPrice(order</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> ~date)</span></span>
<span class="line"><span style="color:#E1E4E8;">       )</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">table</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">className</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">Style</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">order</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">tbody</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      {items</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">List</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">mapi((index</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> item) </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;</span><span style="color:#B392F0;">OrderItem</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">key</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{</span><span style="color:#DBEDFF;">&quot;item-&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">++</span><span style="color:#E1E4E8;"> string_of_int(index)} </span><span style="color:#B392F0;">item</span><span style="color:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">          )</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RR</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">list}</span></span>
<span class="line"><span style="color:#E1E4E8;">      &lt;</span><span style="color:#85E89D;">tr</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">className</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">Style</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">total</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">td</span><span style="color:#E1E4E8;">&gt; {</span><span style="color:#B392F0;">RR</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">s(</span><span style="color:#DBEDFF;">&quot;Subtotal&quot;</span><span style="color:#E1E4E8;">)} &lt;/</span><span style="color:#85E89D;">td</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">td</span><span style="color:#E1E4E8;">&gt; {subtotal </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RR</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">currency} &lt;/</span><span style="color:#85E89D;">td</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      &lt;/</span><span style="color:#85E89D;">tr</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">      &lt;</span><span style="color:#85E89D;">tr</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">td</span><span style="color:#E1E4E8;">&gt; {</span><span style="color:#B392F0;">RR</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">s(</span><span style="color:#DBEDFF;">&quot;Promo code&quot;</span><span style="color:#E1E4E8;">)} &lt;/</span><span style="color:#85E89D;">td</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">td</span><span style="color:#E1E4E8;">&gt; &lt;</span><span style="color:#B392F0;">Promo</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">items</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">date</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onApply</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">setDiscount /&gt; &lt;/</span><span style="color:#85E89D;">td</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">      &lt;/</span><span style="color:#85E89D;">tr</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      &lt;</span><span style="color:#85E89D;">tr</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">className</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">Style</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">total</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">td</span><span style="color:#E1E4E8;">&gt; {</span><span style="color:#B392F0;">RR</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">s(</span><span style="color:#DBEDFF;">&quot;Total&quot;</span><span style="color:#E1E4E8;">)} &lt;/</span><span style="color:#85E89D;">td</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">td</span><span style="color:#E1E4E8;">&gt; {subtotal </span><span style="color:#FDAEB7;">-.</span><span style="color:#E1E4E8;"> discount </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RR</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">currency} &lt;/</span><span style="color:#85E89D;">td</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      &lt;/</span><span style="color:#85E89D;">tr</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">tbody</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;/</span><span style="color:#85E89D;">table</span><span style="color:#E1E4E8;">&gt;</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#24292E;">[</span><span style="color:#D73A49;">@</span><span style="color:#6F42C1;">react</span><span style="color:#D73A49;">.</span><span style="color:#005CC5;">component</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">make</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (~items</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">t</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> ~date</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Date</span><span style="color:#B31D28;">.</span><span style="color:#032F62;">t</span><span style="color:#24292E;">) </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line highlighted"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">discount</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">setDiscount</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RR</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">useStateValue(</span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">subtotal</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    items</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ListLabels</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">fold_left(~init</span><span style="color:#B31D28;">=</span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">.,</span><span style="color:#24292E;"> ~f</span><span style="color:#B31D28;">=</span><span style="color:#24292E;">(acc</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> order) </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">         acc </span><span style="color:#B31D28;">+.</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toPrice(order</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> ~date)</span></span>
<span class="line"><span style="color:#24292E;">       )</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">table</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">className</span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;">Style</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">order</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">tbody</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      {items</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">List</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">mapi((index</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> item) </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;</span><span style="color:#6F42C1;">OrderItem</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">key</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;item-&quot;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">++</span><span style="color:#24292E;"> string_of_int(index)} </span><span style="color:#6F42C1;">item</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">          )</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RR</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">list}</span></span>
<span class="line"><span style="color:#24292E;">      &lt;</span><span style="color:#22863A;">tr</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">className</span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;">Style</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">total</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">td</span><span style="color:#24292E;">&gt; {</span><span style="color:#6F42C1;">RR</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">s(</span><span style="color:#032F62;">&quot;Subtotal&quot;</span><span style="color:#24292E;">)} &lt;/</span><span style="color:#22863A;">td</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">td</span><span style="color:#24292E;">&gt; {subtotal </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RR</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">currency} &lt;/</span><span style="color:#22863A;">td</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      &lt;/</span><span style="color:#22863A;">tr</span><span style="color:#24292E;">&gt;</span></span>
<span class="line highlighted"><span style="color:#24292E;">      &lt;</span><span style="color:#22863A;">tr</span><span style="color:#24292E;">&gt;</span></span>
<span class="line highlighted"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">td</span><span style="color:#24292E;">&gt; {</span><span style="color:#6F42C1;">RR</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">s(</span><span style="color:#032F62;">&quot;Promo code&quot;</span><span style="color:#24292E;">)} &lt;/</span><span style="color:#22863A;">td</span><span style="color:#24292E;">&gt;</span></span>
<span class="line highlighted"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">td</span><span style="color:#24292E;">&gt; &lt;</span><span style="color:#6F42C1;">Promo</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">items</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">date</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onApply</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">setDiscount /&gt; &lt;/</span><span style="color:#22863A;">td</span><span style="color:#24292E;">&gt;</span></span>
<span class="line highlighted"><span style="color:#24292E;">      &lt;/</span><span style="color:#22863A;">tr</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      &lt;</span><span style="color:#22863A;">tr</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">className</span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;">Style</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">total</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">td</span><span style="color:#24292E;">&gt; {</span><span style="color:#6F42C1;">RR</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">s(</span><span style="color:#032F62;">&quot;Total&quot;</span><span style="color:#24292E;">)} &lt;/</span><span style="color:#22863A;">td</span><span style="color:#24292E;">&gt;</span></span>
<span class="line highlighted"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">td</span><span style="color:#24292E;">&gt; {subtotal </span><span style="color:#B31D28;">-.</span><span style="color:#24292E;"> discount </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RR</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">currency} &lt;/</span><span style="color:#22863A;">td</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      &lt;/</span><span style="color:#22863A;">tr</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">tbody</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">table</span><span style="color:#24292E;">&gt;</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>A breakdown:</p><ul><li>Create a new state variable called <code>discount</code> (along with its attendant <code>setDiscount</code> function)</li><li>Set the value of <code>discount</code> through <code>Promo</code>’s <code>onApply</code> callback prop (we’ll add this prop in the next step)</li><li>Subtract <code>discount</code> from <code>subtotal</code> when rendering the total price of the order</li></ul><h2 id="add-onapply-prop-to-promo" tabindex="-1">Add <code>onApply</code> prop to <code>Promo</code> <a class="header-anchor" href="#add-onapply-prop-to-promo" aria-label="Permalink to &quot;Add \`onApply\` prop to \`Promo\`&quot;">​</a></h2><p>Add an <code>onApply</code> prop to <code>Promo</code>, which will be invoked when a promo code is successfully submitted and results in a discount:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#F97583;">@</span><span style="color:#B392F0;">react</span><span style="color:#F97583;">.</span><span style="color:#79B8FF;">component</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">    (~items</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">list</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#DBEDFF;">t</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> ~date</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Date</span><span style="color:#FDAEB7;">.</span><span style="color:#DBEDFF;">t</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> ~onApply</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">unit</span><span style="color:#E1E4E8;">) </span><span style="color:#FDAEB7;">=&gt;</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#24292E;">[</span><span style="color:#D73A49;">@</span><span style="color:#6F42C1;">react</span><span style="color:#D73A49;">.</span><span style="color:#005CC5;">component</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">make</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line highlighted"><span style="color:#24292E;">    (~items</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">list</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#032F62;">t</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> ~date</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Date</span><span style="color:#B31D28;">.</span><span style="color:#032F62;">t</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> ~onApply</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">float</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">unit</span><span style="color:#24292E;">) </span><span style="color:#B31D28;">=&gt;</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You don’t have to type annotate your component props, but it’s a good idea to at least type annotate your component’s callback props as a form of documentation.</p></div><p>To invoke <code>onApply</code>, we can add a <code>useEffect</code> hook that invokes <code>onApply</code> when <code>discount</code> has a value of the form <code>\`Discount(value)</code>:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">React</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">useEffect1(</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">()</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (discount) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NoSubmittedCode</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">CodeError</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">DiscountError</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Discount</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">value</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> onApply(value)</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">None</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">[|</span><span style="color:#E1E4E8;">discount</span><span style="color:#79B8FF;">|]</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">React</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">useEffect1(</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">()</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (discount) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NoSubmittedCode</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">CodeError</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">DiscountError</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">()</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Discount</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">value</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> onApply(value)</span></span>
<span class="line"><span style="color:#24292E;">    }</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">None</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">[|</span><span style="color:#24292E;">discount</span><span style="color:#005CC5;">|]</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">)</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>Note that when <code>discount</code> has an error value, we return <a href="https://ocaml.org/docs/basic-data-types#unit" target="_blank" rel="noreferrer"><code>()</code></a> from the switch expression, which essentially means “do nothing”.</p><h2 id="react-useeffect-functions" tabindex="-1"><code>React.useEffect*</code> functions <a class="header-anchor" href="#react-useeffect-functions" aria-label="Permalink to &quot;\`React.useEffect*\` functions&quot;">​</a></h2><p><code>React.useEffect1</code> is one of the binding functions for React’s <a href="https://react.dev/reference/react/useEffect" target="_blank" rel="noreferrer">useEffect hook</a>. The number <code>1</code> at the end of the function indicates how many dependencies this function is supposed to take. Accordingly, we also have <code>React.useEffect0</code>, <code>React.useEffect2</code>, etc, all the way up to <code>React.useEffect7</code><sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup>.</p><p>All <code>React.useEffect*</code> functions accept a <a href="https://react.dev/reference/react/useEffect#reference" target="_blank" rel="noreferrer">setup callback</a> as their first argument, the type of which is:</p><div class="language-reason vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">reason</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">unit </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> option(unit </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> unit)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">unit </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> option(unit </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> unit)</span></span></code></pre></div><p>The setup callback’s return type is <code>option(unit =&gt; unit)</code>, which allows you to return a cleanup function encased in <code>Some</code>. When the effect doesn’t need a cleanup function, just return <code>None</code>.</p><p>The second argument for all <code>React.useEffect*</code> functions (except <code>React.useEffect0</code>) is for the dependencies. For example, the type of <code>React.useEffect2</code> is:</p><div class="language-reason vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">reason</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">(unit </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> option(unit </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> unit)</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> (&#39;a</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> &#39;b)) </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> unit</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">(unit </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> option(unit </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> unit)</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> (&#39;a</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> &#39;b)) </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> unit</span></span></code></pre></div><p>And the type of <code>React.useEffect3</code> is:</p><div class="language-reason vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">reason</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">(unit </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> option(unit </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> unit)</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> (&#39;a</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> &#39;b</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> &#39;c)) </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> unit</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">(unit </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> option(unit </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> unit)</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> (&#39;a</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> &#39;b</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> &#39;c)) </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> unit</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Every time you add or remove a dependency from your <code>useEffect</code> hook, you’ll need to use a different <code>React.useEffect*</code> function (the one that corresponds to how many dependencies you now have).</p></div><h2 id="why-does-react-useeffect2-accept-a-tuple" tabindex="-1">Why does <code>React.useEffect2</code> accept a tuple? <a class="header-anchor" href="#why-does-react-useeffect2-accept-a-tuple" aria-label="Permalink to &quot;Why does \`React.useEffect2\` accept a tuple?&quot;">​</a></h2><p><code>React.useEffect2</code> takes its dependencies as a tuple instead of an array. To understand why, we need to understand the type properties of tuples and arrays:</p><ul><li>The elements of tuples can have different types, e.g. <code>(1, &quot;a&quot;, 23.5)</code></li><li>The elements of arrays must all be of the same type, e.g. <code>[|1, 2, 3|]</code>, <code>[|&quot;a&quot;, &quot;b&quot;, &quot;c&quot;|]</code></li></ul><p>Therefore, we must use tuples to express the dependencies of <code>useEffect</code> hooks, otherwise our dependencies would all have to be of the same type. This applies to all <code>React.useEffect*</code> functions which take 2 or more dependencies.</p><p>Even though we use tuples for dependencies in our OCaml code, they are turned into JS arrays in the runtime. So the generated code will run the same as in any ReactJS app.</p><p>However, you might have noticed that <code>React.useEffect1</code> is the odd man out, because it accepts an array for its single dependency. The reason is that one-element OCaml tuples don’t become arrays in the JS runtime, they instead take on the value of their single element. So in this case, <code>React.useEffect1</code><a href="https://reasonml.github.io/reason-react/docs/en/components#hooks" target="_blank" rel="noreferrer">must take an array</a> so that it respects the API of the underlying <code>useEffect</code> function.</p><h2 id="rr-useeffect1-helper-function" tabindex="-1"><code>RR.useEffect1</code> helper function <a class="header-anchor" href="#rr-useeffect1-helper-function" aria-label="Permalink to &quot;\`RR.useEffect1\` helper function&quot;">​</a></h2><p><code>React.useEffect1</code> taking an array means that you could accidentally pass in an empty array as the dependency for <code>React.useEffect1</code>. You can sidestep this possibility by adding a helper function to your <code>RR</code> module:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/** Helper for [React.useEffect1] */</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">useEffect1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (func</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> dep) </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">React</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">useEffect1(func</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">[|</span><span style="color:#E1E4E8;">dep</span><span style="color:#79B8FF;">|]</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/** Helper for [React.useEffect1] */</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">useEffect1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (func</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> dep) </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">React</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">useEffect1(func</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">[|</span><span style="color:#24292E;">dep</span><span style="color:#005CC5;">|]</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>Refactor <code>Promo</code> to use your new helper function:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line highlighted"><span style="color:#B392F0;">RR</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">useEffect1(</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">()</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (discount) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NoSubmittedCode</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">CodeError</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">DiscountError</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Discount</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">value</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> onApply(value)</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">None</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span><span style="color:#FDAEB7;">,</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  discount</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line highlighted"><span style="color:#6F42C1;">RR</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">useEffect1(</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">()</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (discount) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NoSubmittedCode</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">CodeError</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">DiscountError</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">()</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Discount</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">value</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> onApply(value)</span></span>
<span class="line"><span style="color:#24292E;">    }</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">None</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span><span style="color:#B31D28;">,</span></span>
<span class="line highlighted"><span style="color:#24292E;">  discount</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">)</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>You may be wondering why ReasonReact doesn’t provide this helper function for you. The reason is that its bindings to React functions are supposed to be zero-cost, without any additional abstractions on top. This is the same reason that something like our <code>RR.useStateValue</code> helper function is also not included with ReasonReact.</p><h2 id="add-styling-for-promo-code-row" tabindex="-1">Add styling for promo code row <a class="header-anchor" href="#add-styling-for-promo-code-row" aria-label="Permalink to &quot;Add styling for promo code row&quot;">​</a></h2><p>Execute <code>npm run serve</code> to see your app in action. Verify that it behaves as expected:</p><ul><li>Type <code>FREE</code> into the input and press Enter. It should deduct the price of every other burger (ordered by price descending).</li><li>Type <code>HALF</code> into the input and press Enter. It should deduct half off the entire order.</li><li>Change the date to something other than May 28. It should show an error saying “Expired promo code”</li></ul><p>However, the styling is a little bit off. Add the following value to <code>Order.Style</code>:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">promo</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#F97583;">%</span><span style="color:#79B8FF;">cx</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">{|</span></span>
<span class="line"><span style="color:#DBEDFF;">  border-top: 1px solid gray;</span></span>
<span class="line"><span style="color:#DBEDFF;">  text-align: right;</span></span>
<span class="line"><span style="color:#DBEDFF;">  vertical-align: top;</span></span>
<span class="line"><span style="color:#DBEDFF;">  </span><span style="color:#FDAEB7;">|}</span></span>
<span class="line"><span style="color:#E1E4E8;">]</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">promo</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#D73A49;">%</span><span style="color:#005CC5;">cx</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">{|</span></span>
<span class="line"><span style="color:#032F62;">  border-top: 1px solid gray;</span></span>
<span class="line"><span style="color:#032F62;">  text-align: right;</span></span>
<span class="line"><span style="color:#032F62;">  vertical-align: top;</span></span>
<span class="line"><span style="color:#032F62;">  </span><span style="color:#B31D28;">|}</span></span>
<span class="line"><span style="color:#24292E;">]</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>Then set the <code>className</code> of the promo code row to <code>Style.promo</code>:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line highlighted"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">tr</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">className</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">Style</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">promo</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">td</span><span style="color:#E1E4E8;">&gt; {</span><span style="color:#B392F0;">RR</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">s(</span><span style="color:#DBEDFF;">&quot;Promo code&quot;</span><span style="color:#E1E4E8;">)} &lt;/</span><span style="color:#85E89D;">td</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">td</span><span style="color:#E1E4E8;">&gt; &lt;</span><span style="color:#B392F0;">Promo</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">items</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">date</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onApply</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">setDiscount /&gt; &lt;/</span><span style="color:#85E89D;">td</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">tr</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line highlighted"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">tr</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">className</span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;">Style</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">promo</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">td</span><span style="color:#24292E;">&gt; {</span><span style="color:#6F42C1;">RR</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">s(</span><span style="color:#032F62;">&quot;Promo code&quot;</span><span style="color:#24292E;">)} &lt;/</span><span style="color:#22863A;">td</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">td</span><span style="color:#24292E;">&gt; &lt;</span><span style="color:#6F42C1;">Promo</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">items</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">date</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onApply</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">setDiscount /&gt; &lt;/</span><span style="color:#22863A;">td</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">tr</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><h2 id="how-often-does-the-effect-run" tabindex="-1">How often does the Effect run? <a class="header-anchor" href="#how-often-does-the-effect-run" aria-label="Permalink to &quot;How often does the Effect run?&quot;">​</a></h2><p>Everything seems to be working correctly, but let’s see how often our <code>useEffect</code> hook fires by adding a little logging:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#B392F0;">RR</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">useEffect1(</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">()</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (discount) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NoSubmittedCode</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">CodeError</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">DiscountError</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Discount</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">value</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">log2(</span><span style="color:#DBEDFF;">&quot;useEffect1 depending on discount&quot;</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> value)</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      onApply(value)</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">None</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  discount</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#6F42C1;">RR</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">useEffect1(</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">()</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (discount) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NoSubmittedCode</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">CodeError</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">DiscountError</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">()</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Discount</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">value</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line highlighted"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">log2(</span><span style="color:#032F62;">&quot;useEffect1 depending on discount&quot;</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> value)</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">      onApply(value)</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">    }</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">None</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">  discount</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">)</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>You see that every time a promo code is successfully applied, it logs twice to the console. That doesn’t seem right, because the value of <code>discount</code> only changes once when you submit a new promo code.</p><p>The reason lies in the runtime representation of <code>discount</code>—recall that variant constructors with arguments are turned into objects in the JS runtime. Because <code>discount</code> is a derived variable, it gets recreated on every render, and even if its contents didn’t change, the <a href="https://react.dev/reference/react/useEffect#removing-unnecessary-object-dependencies" target="_blank" rel="noreferrer">hook will always treat it as having changed because the object is no longer the same one as before</a>.</p><p>The easiest fix is to simply change the dependency to <code>submittedCode</code> instead of <code>discount</code>:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#B392F0;">RR</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">useEffect1(</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">()</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (discount) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NoSubmittedCode</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">CodeError</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">DiscountError</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Discount</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">value</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">log2(</span><span style="color:#DBEDFF;">&quot;useEffect1 depending on discount&quot;</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> value)</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      onApply(value)</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">None</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span><span style="color:#FDAEB7;">,</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  submittedCode</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#6F42C1;">RR</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">useEffect1(</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">()</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (discount) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NoSubmittedCode</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">CodeError</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">DiscountError</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">()</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Discount</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">value</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">log2(</span><span style="color:#032F62;">&quot;useEffect1 depending on discount&quot;</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> value)</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">      onApply(value)</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">    }</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">None</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span><span style="color:#B31D28;">,</span></span>
<span class="line highlighted"><span style="color:#24292E;">  submittedCode</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">)</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>This does the trick—the Effect only runs once every time you submit a new promo code. But wait! Why does it behave differently when <code>submittedCode</code> is an <code>option</code>, and <code>option</code> is just another variant type?<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></p><p>Although <code>option</code> is a variant type, its <a href="./../burger-discounts/#runtime-representation-of-option">runtime representation is a special case</a>:</p><ul><li><code>None</code> becomes <code>undefined</code></li><li><code>Some(value)</code> becomes <code>value</code></li></ul><p>Therefore, an <code>option</code> value that wraps a primitive value doesn’t ever turn into an object in the JS runtime, and therefore can be used as a dependency for React hooks.</p><h2 id="you-don-t-need-an-effect" tabindex="-1">You don’t need an Effect <a class="header-anchor" href="#you-don-t-need-an-effect" aria-label="Permalink to &quot;You don&#39;t need an Effect&quot;">​</a></h2><p>The above discussion about Effects was somewhat academic, because we <a href="https://react.dev/learn/you-might-not-need-an-effect#how-to-remove-unnecessary-effects" target="_blank" rel="noreferrer">don’t actually need Effects to handle user events</a>. Let’s delete the call to <code>RR.useEffect1</code> and start over.</p><p>A better place to call <code>onApply</code> is from within the <code>form</code>’s <code>onSubmit</code> callback. Replace the <code>discount</code> derived variable with a <code>getDiscount</code> function:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getDiscount</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">fun</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NoSubmittedCode</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">code</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getDiscountFunction(code</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> date)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">error</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">CodeError</span><span style="color:#E1E4E8;">(error)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Ok</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">discountFunc</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (discountFunc(items)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">error</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">DiscountError</span><span style="color:#E1E4E8;">(error)</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Ok</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">value</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Discount</span><span style="color:#E1E4E8;">(value)</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getDiscount</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">fun</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NoSubmittedCode</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">code</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getDiscountFunction(code</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> date)) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Error</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">error</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">CodeError</span><span style="color:#24292E;">(error)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Ok</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">discountFunc</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (discountFunc(items)) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Error</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">error</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">DiscountError</span><span style="color:#24292E;">(error)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Ok</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">value</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Discount</span><span style="color:#24292E;">(value)</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    }</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>Call <code>getDiscount</code> within the <code>onSubmit</code> callback function:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">onSubmit</span><span style="color:#FDAEB7;">=</span><span style="color:#E1E4E8;">{evt </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  evt </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">React</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Event</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Form</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">preventDefault</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">newSubmittedCode</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(code)</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  setSubmittedCode(newSubmittedCode)</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (getDiscount(newSubmittedCode)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NoSubmittedCode</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">CodeError</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">DiscountError</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Discount</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">value</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> onApply(value)</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">onSubmit</span><span style="color:#B31D28;">=</span><span style="color:#24292E;">{evt </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  evt </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">React</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Event</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Form</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">preventDefault</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">newSubmittedCode</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(code)</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">  setSubmittedCode(newSubmittedCode)</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (getDiscount(newSubmittedCode)) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NoSubmittedCode</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">CodeError</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">DiscountError</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">()</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Discount</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">value</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> onApply(value)</span></span>
<span class="line"><span style="color:#24292E;">  }</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">}}</span></span></code></pre></div><p>Inside the render logic, change the input of the switch expression from <code>discount</code> to <code>getDiscount(submittedCode)</code>:</p><div class="language-reason vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">reason</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line diff remove"><span style="color:#E1E4E8;">{</span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (discount) { </span></span>
<span class="line diff add"><span style="color:#E1E4E8;">{switch (getDiscount(submittedCode)) { </span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line diff remove"><span style="color:#24292E;">{</span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (discount) { </span></span>
<span class="line diff add"><span style="color:#24292E;">{switch (getDiscount(submittedCode)) { </span></span></code></pre></div><h2 id="add-datasets-to-demo" tabindex="-1">Add <code>datasets</code> to <code>Demo</code> <a class="header-anchor" href="#add-datasets-to-demo" aria-label="Permalink to &quot;Add \`datasets\` to \`Demo\`&quot;">​</a></h2><p>To make it easier to see the different promo-related error messages, you can create different collections of items. Add a <code>datasets</code> variable to <code>Demo</code>:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">burger</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Burger</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">lettuce</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">tomatoes</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">onions</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">cheese</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">bacon</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">datasets</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">[</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#DBEDFF;">&quot;No burgers&quot;</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">[</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Unicorn</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">Hotdog</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Ham</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Turducken</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">Hotdog</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">]</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    )</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#DBEDFF;">&quot;5 burgers&quot;</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">[</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">burger</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">tomatoes</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          })</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">burger</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">lettuce</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          })</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">burger</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">bacon</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          })</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">burger</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">cheese</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">onions</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">9</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">tomatoes</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          })</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">burger</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">onions</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          })</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">]</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    )</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#DBEDFF;">&quot;1 burger with at least one of every topping&quot;</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">[</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">Hotdog</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">lettuce</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">tomatoes</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">onions</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">cheese</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">bacon</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        })</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Turducken</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">]</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    )</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#DBEDFF;">&quot;All sandwiches&quot;</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">[</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Ham</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">Hotdog</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Portabello</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Unicorn</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">Hotdog</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Turducken</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">]</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    )</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">]</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">burger</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Burger</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">lettuce</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">tomatoes</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">onions</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">cheese</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">bacon</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">  }</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">datasets</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">[</span></span>
<span class="line"><span style="color:#24292E;">    (</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;No burgers&quot;</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">[</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Unicorn</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">Hotdog</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Ham</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Turducken</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">Hotdog</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">]</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    )</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    (</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;5 burgers&quot;</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">[</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">...</span><span style="color:#24292E;">burger</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">tomatoes</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">          })</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">...</span><span style="color:#24292E;">burger</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">lettuce</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">          })</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">...</span><span style="color:#24292E;">burger</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">bacon</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">          })</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">...</span><span style="color:#24292E;">burger</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">cheese</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">onions</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">9</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">tomatoes</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">          })</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">...</span><span style="color:#24292E;">burger</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">onions</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">          })</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">]</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">      }</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    )</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    (</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;1 burger with at least one of every topping&quot;</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">[</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">Hotdog</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">lettuce</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">tomatoes</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">onions</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">cheese</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">bacon</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">        })</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Turducken</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">]</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    )</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    (</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;All sandwiches&quot;</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">[</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Ham</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">Hotdog</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Portabello</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Unicorn</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">Hotdog</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Turducken</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">]</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    )</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">]</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>Since the <code>burgers</code> value is only used in a single expression, we can move it inside that expression:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">burger</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Burger</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">{</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">lettuce</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#FDAEB7;">,</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">tomatoes</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#FDAEB7;">,</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">onions</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">,</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">cheese</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">,</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">bacon</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">,</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">    }</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  (</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#DBEDFF;">&quot;5 burgers&quot;</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">[</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">({</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">burger</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">tomatoes</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">})</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">({</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">burger</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">lettuce</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">})</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">({</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">burger</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">bacon</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">})</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">({</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">burger</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">cheese</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onions</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">9</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">tomatoes</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">})</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">({</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">burger</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onions</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">})</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">]</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  )</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">},</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line highlighted"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">burger</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line highlighted"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Burger</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">{</span></span>
<span class="line highlighted"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">lettuce</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#B31D28;">,</span></span>
<span class="line highlighted"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">tomatoes</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#B31D28;">,</span></span>
<span class="line highlighted"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">onions</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">,</span></span>
<span class="line highlighted"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">cheese</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">,</span></span>
<span class="line highlighted"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">bacon</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">,</span></span>
<span class="line highlighted"><span style="color:#24292E;">    }</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">  (</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;5 burgers&quot;</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">[</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">({</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">burger</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">tomatoes</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">})</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">({</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">burger</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">lettuce</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">})</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">({</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">burger</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">bacon</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">})</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">({</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">burger</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">cheese</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onions</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">9</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">tomatoes</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">})</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">({</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">burger</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onions</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">})</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">]</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">    }</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">  )</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">},</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>OCaml makes it easy to move variable definitions closer to where they are actually used. Unlike in JavaScript, you can use <code>let</code> anywhere, even inside an expression.</p></div><p>Now we can refactor <code>Demo</code> to render a different <code>Order</code> for each collection of items:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#F97583;">@</span><span style="color:#B392F0;">react</span><span style="color:#F97583;">.</span><span style="color:#79B8FF;">component</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">()</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">date</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">setDate</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">RR</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">useStateValue(</span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Date</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">fromString(</span><span style="color:#DBEDFF;">&quot;2024-05-28T00:00&quot;</span><span style="color:#E1E4E8;">))</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">h1</span><span style="color:#E1E4E8;">&gt; {</span><span style="color:#B392F0;">RR</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">s(</span><span style="color:#DBEDFF;">&quot;Order Confirmation&quot;</span><span style="color:#E1E4E8;">)} &lt;/</span><span style="color:#85E89D;">h1</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#B392F0;">DateInput</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">date</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onChange</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">setDate /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">h2</span><span style="color:#E1E4E8;">&gt; {</span><span style="color:#B392F0;">RR</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">s(</span><span style="color:#DBEDFF;">&quot;Order&quot;</span><span style="color:#E1E4E8;">)} &lt;/</span><span style="color:#85E89D;">h2</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    {datasets</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">List</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">map(((label</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> items)) </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">          &lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">key</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">label&gt; &lt;</span><span style="color:#85E89D;">h3</span><span style="color:#E1E4E8;">&gt; {</span><span style="color:#B392F0;">RR</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">s(label)} &lt;/</span><span style="color:#85E89D;">h3</span><span style="color:#E1E4E8;">&gt; &lt;</span><span style="color:#B392F0;">Order</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">items</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">date</span><span style="color:#E1E4E8;"> /&gt; &lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        })</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RR</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">list}</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[</span><span style="color:#D73A49;">@</span><span style="color:#6F42C1;">react</span><span style="color:#D73A49;">.</span><span style="color:#005CC5;">component</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">make</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">()</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">date</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">setDate</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">RR</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">useStateValue(</span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Date</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">fromString(</span><span style="color:#032F62;">&quot;2024-05-28T00:00&quot;</span><span style="color:#24292E;">))</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">h1</span><span style="color:#24292E;">&gt; {</span><span style="color:#6F42C1;">RR</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">s(</span><span style="color:#032F62;">&quot;Order Confirmation&quot;</span><span style="color:#24292E;">)} &lt;/</span><span style="color:#22863A;">h1</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#6F42C1;">DateInput</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">date</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onChange</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">setDate /&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">h2</span><span style="color:#24292E;">&gt; {</span><span style="color:#6F42C1;">RR</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">s(</span><span style="color:#032F62;">&quot;Order&quot;</span><span style="color:#24292E;">)} &lt;/</span><span style="color:#22863A;">h2</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    {datasets</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">List</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">map(((label</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> items)) </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">          &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">key</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">label&gt; &lt;</span><span style="color:#22863A;">h3</span><span style="color:#24292E;">&gt; {</span><span style="color:#6F42C1;">RR</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">s(label)} &lt;/</span><span style="color:#22863A;">h3</span><span style="color:#24292E;">&gt; &lt;</span><span style="color:#6F42C1;">Order</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">items</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">date</span><span style="color:#24292E;"> /&gt; &lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        })</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RR</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">list}</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>Remember to delete the now-unused <code>Demo.items</code> variable.</p><hr><p>Hot diggity! You’ve added the promo codes to your order confirmation widget, just in time for Madame Jellobutter’s International Burger Day promotions. In the next chapter, we’ll further polish the sandwich promotion logic.</p><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><ul><li>A type constructor takes a type and outputs another type</li><li>A type variable is a variable that stands in a for a type and often appears in type constructors or type signatures</li><li>In polymorphic variant type expressions, <code>&gt;</code> means that the polymorphic variant can accept more than the variant tags that are listed <ul><li>You rarely need to use <code>&gt;</code> in your own type definitions, but it often appears in inferred type definitions (that appear when you hover over variables and functions)</li><li>Inferred type definitions that contain <code>&gt;</code> also have an implicit type variable</li></ul></li><li>Some component props have names that aren’t legal as function arguments in OCaml, and we must add an underscore after them. A common example is <code>type</code>, which must be rewritten as <code>type_</code><sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup>.</li><li>ReasonReact has several binding functions for React’s <code>useEffect</code> hook, e.g. <code>React.useEffect0</code>, <code>React.useEffect1</code>, …, <code>React.useEffect7</code><ul><li>The number at the end indicates how many dependencies the function takes</li><li><code>React.useEffect1</code> takes an array for its one dependency</li><li><code>React.useEffect2</code> and above take tuples for their dependencies</li></ul></li><li>The elements of a tuple can be different types</li><li>Tuples become arrays in the JavaScript runtime</li><li>The elements of an array must all be the same type</li><li>Be careful about using variants as hook dependencies, because they often get turned into objects in the runtime and cause Effects to run more often than you want</li><li>It’s often safe to use <code>option</code> as a hook dependency, because even though it’s a variant, it’s a special case and does not become an object in the JavaScript runtime</li><li>You can use <code>let</code> inside expressions, which allows you to define variables closer to where they’re used</li></ul><h2 id="exercises" tabindex="-1">Exercises <a class="header-anchor" href="#exercises" aria-label="Permalink to &quot;Exercises&quot;">​</a></h2><p><b>1.</b> The following code (<a href="https://melange.re/v4.0.0/playground/?language=Reason&amp;code=bGV0IGdldE5hbWUgPSAoYW5pbWFsOiBbfCBgQ2F0IHwgYERvZyhpbnQpIHwgYFVuaWNvcm4oc3RyaW5nKV0pID0%2BCiAgc3dpdGNoIChhbmltYWwpIHsKICB8IGBDYXQgPT4gIk1yIFdoaXNrZXJzIgogIHwgYERvZyhuKSA9PiAiQmFuZGl0ICIgKysgc3RyaW5nX29mX2ludChuKQogIHwgYFVuaWNvcm4obmFtZSkgPT4gIlNpciAiICsrIG5hbWUKICB9Ow%3D%3D&amp;live=off" target="_blank" rel="noreferrer">playground</a>) doesn’t compile. Fix it by adding a single character.</p><div class="language-reason vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">reason</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getName</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (animal</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">[</span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">Cat</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">Dog</span><span style="color:#E1E4E8;">(</span><span style="color:#DBEDFF;">int</span><span style="color:#E1E4E8;">) </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">Unicorn</span><span style="color:#E1E4E8;">(</span><span style="color:#DBEDFF;">string</span><span style="color:#E1E4E8;">)</span><span style="color:#B392F0;">]</span><span style="color:#E1E4E8;">) </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (animal) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">Cat</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;Mr Whiskers&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">Dog</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">n</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;Bandit &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">++</span><span style="color:#E1E4E8;"> string_of_int(n)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">Unicorn</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">name</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;Sir &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">++</span><span style="color:#E1E4E8;"> name</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getName</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (animal</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">[</span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">Cat</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">Dog</span><span style="color:#24292E;">(</span><span style="color:#032F62;">int</span><span style="color:#24292E;">) </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">Unicorn</span><span style="color:#24292E;">(</span><span style="color:#032F62;">string</span><span style="color:#24292E;">)</span><span style="color:#6F42C1;">]</span><span style="color:#24292E;">) </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (animal) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">Cat</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Mr Whiskers&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">Dog</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">n</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Bandit &quot;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">++</span><span style="color:#24292E;"> string_of_int(n)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">Unicorn</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">name</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Sir &quot;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">++</span><span style="color:#24292E;"> name</span></span>
<span class="line"><span style="color:#24292E;">  }</span><span style="color:#B31D28;">;</span></span></code></pre></div><details class="details custom-block"><summary>Hint</summary><p>Find a place where you can insert a space.</p></details><details class="details custom-block"><summary>Solution</summary><div class="language-reason vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">reason</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line highlighted"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getName</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (animal</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">[</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">Cat</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">Dog</span><span style="color:#E1E4E8;">(</span><span style="color:#DBEDFF;">int</span><span style="color:#E1E4E8;">) </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">Unicorn</span><span style="color:#E1E4E8;">(</span><span style="color:#DBEDFF;">string</span><span style="color:#E1E4E8;">)</span><span style="color:#B392F0;">]</span><span style="color:#E1E4E8;">) </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (animal) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">Cat</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;Mr Whiskers&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">Dog</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">n</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;Bandit &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">++</span><span style="color:#E1E4E8;"> string_of_int(n)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">Unicorn</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">name</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;Sir &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">++</span><span style="color:#E1E4E8;"> name</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line highlighted"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getName</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (animal</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">[</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">Cat</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">Dog</span><span style="color:#24292E;">(</span><span style="color:#032F62;">int</span><span style="color:#24292E;">) </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">Unicorn</span><span style="color:#24292E;">(</span><span style="color:#032F62;">string</span><span style="color:#24292E;">)</span><span style="color:#6F42C1;">]</span><span style="color:#24292E;">) </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (animal) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">Cat</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Mr Whiskers&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">Dog</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">n</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Bandit &quot;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">++</span><span style="color:#24292E;"> string_of_int(n)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">Unicorn</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">name</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Sir &quot;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">++</span><span style="color:#24292E;"> name</span></span>
<span class="line"><span style="color:#24292E;">  }</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>A common mistake when writing polymorphic variant type definitions is forgetting to put a space between the <code>[</code> and the <code>|</code> characters. Note that you don’t need to add the implicit type variable in type annotations.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>In the next version of Melange, polymorphic variant definitions no longer require a space between <code>[</code> and <code>|</code>.</p></div></details><p><b>2.</b> The following code (<a href="https://melange.re/v4.0.0/playground/?language=Reason&amp;code=bGV0IGdldE5hbWUgPSAoYW5pbWFsOiBbIHwgYENhdCB8IGBEb2coaW50KSB8IGBVbmljb3JuKHN0cmluZyldKSA9PgogIHN3aXRjaCAoYW5pbWFsKSB7CiAgfCBgQ2F0ID0%2BICJNciBXaGlza2VycyIKICB8IGBEb2cobikgPT4gIkJhbmRpdCAiICsrIHN0cmluZ19vZl9pbnQobikKICB8IGBVbmljb3JuKG5hbWUpID0%2BICJTaXIgIiArKyBuYW1lCiAgfCBgRHJhZ29uID0%2BICJQdWZmIHRoZSBNYWdpYyIKICB9Ow%3D%3D&amp;live=off" target="_blank" rel="noreferrer">playground</a>) doesn’t compile. Fix it by adding a single character.</p><div class="language-reason vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">reason</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getName</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (animal</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">[</span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">Cat</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">Dog</span><span style="color:#E1E4E8;">(</span><span style="color:#DBEDFF;">int</span><span style="color:#E1E4E8;">) </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">Unicorn</span><span style="color:#E1E4E8;">(</span><span style="color:#DBEDFF;">string</span><span style="color:#E1E4E8;">)</span><span style="color:#B392F0;">]</span><span style="color:#E1E4E8;">) </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (animal) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">Cat</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;Mr Whiskers&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">Dog</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">n</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;Bandit &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">++</span><span style="color:#E1E4E8;"> string_of_int(n)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">Unicorn</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">name</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;Sir &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">++</span><span style="color:#E1E4E8;"> name</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">Dragon</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;Puff the Magic&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getName</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (animal</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">[</span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">Cat</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">Dog</span><span style="color:#24292E;">(</span><span style="color:#032F62;">int</span><span style="color:#24292E;">) </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">Unicorn</span><span style="color:#24292E;">(</span><span style="color:#032F62;">string</span><span style="color:#24292E;">)</span><span style="color:#6F42C1;">]</span><span style="color:#24292E;">) </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (animal) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">Cat</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Mr Whiskers&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">Dog</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">n</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Bandit &quot;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">++</span><span style="color:#24292E;"> string_of_int(n)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">Unicorn</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">name</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Sir &quot;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">++</span><span style="color:#24292E;"> name</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">Dragon</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Puff the Magic&quot;</span></span>
<span class="line"><span style="color:#24292E;">  }</span><span style="color:#B31D28;">;</span></span></code></pre></div><details class="details custom-block"><summary>Solution</summary><div class="language-reason vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">reason</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line highlighted"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getName</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (animal</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">[</span><span style="color:#FDAEB7;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">Cat</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">Dog</span><span style="color:#E1E4E8;">(</span><span style="color:#DBEDFF;">int</span><span style="color:#E1E4E8;">) </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">Unicorn</span><span style="color:#E1E4E8;">(</span><span style="color:#DBEDFF;">string</span><span style="color:#E1E4E8;">)</span><span style="color:#B392F0;">]</span><span style="color:#E1E4E8;">) </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (animal) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">Cat</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;Mr Whiskers&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">Dog</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">n</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;Bandit &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">++</span><span style="color:#E1E4E8;"> string_of_int(n)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">Unicorn</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">name</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;Sir &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">++</span><span style="color:#E1E4E8;"> name</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">Dragon</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;Puff the Magic&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line highlighted"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getName</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (animal</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">[</span><span style="color:#B31D28;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">Cat</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">Dog</span><span style="color:#24292E;">(</span><span style="color:#032F62;">int</span><span style="color:#24292E;">) </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">Unicorn</span><span style="color:#24292E;">(</span><span style="color:#032F62;">string</span><span style="color:#24292E;">)</span><span style="color:#6F42C1;">]</span><span style="color:#24292E;">) </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (animal) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">Cat</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Mr Whiskers&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">Dog</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">n</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Bandit &quot;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">++</span><span style="color:#24292E;"> string_of_int(n)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">Unicorn</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">name</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Sir &quot;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">++</span><span style="color:#24292E;"> name</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">Dragon</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Puff the Magic&quot;</span></span>
<span class="line"><span style="color:#24292E;">  }</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>Adding a <code>&gt;</code> to the polymorphic variant type definition allows it to accept more than the listed variant tags.</p></details><p><b>3.</b> Fix the following code (<a href="https://melange.re/v4.0.0/playground/?language=Reason&amp;code=LyoqIE9ubHkgaW52b2tlIFtmXSB3aGVuIFtvMV0gYW5kIFtvMl0gYXJlIFtTb21lXSAqLwpsZXQgbWFwMjogKG9wdGlvbignYSksIG9wdGlvbignYSksICgnYSwgJ2EpID0%2BICdhKSA9PiBvcHRpb24oJ2EpID0KICAobzEsIG8yLCBmKSA9PgogICAgc3dpdGNoIChvMSwgbzIpIHsKICAgIHwgKE5vbmUsIE5vbmUpCiAgICB8IChOb25lLCBTb21lKF8pKQogICAgfCAoU29tZShfKSwgTm9uZSkgPT4gTm9uZQogICAgfCAoU29tZSh2MSksIFNvbWUodjIpKSA9PiBTb21lKGYodjEsIHYyKSkKICAgIH07CgpKcy5sb2cobWFwMihTb21lKDExKSwgU29tZSgzMyksICgrKSkpOwpKcy5sb2cobWFwMihTb21lKCJBQkMiKSwgU29tZSgxMjMpLCAoYSwgYikgPT4gKGEsIGIpKSk7&amp;live=off" target="_blank" rel="noreferrer">playground</a>) which fails to compile:</p><div class="language-reason vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">reason</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/** Only invoke [f] when [o1] and [o2] are [Some] */</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">map2</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> (</span><span style="color:#DBEDFF;">option</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">&#39;</span><span style="color:#79B8FF;">a</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">option</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">&#39;</span><span style="color:#79B8FF;">a</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">,</span><span style="color:#E1E4E8;"> (</span><span style="color:#6A737D;">&#39;</span><span style="color:#79B8FF;">a</span><span style="color:#F97583;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">&#39;</span><span style="color:#79B8FF;">a</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">&#39;</span><span style="color:#79B8FF;">a</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">option</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">&#39;</span><span style="color:#79B8FF;">a</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">  (o1</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> o2</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> f) </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (o1</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> o2) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">None</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">None</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">v1</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">v2</span><span style="color:#E1E4E8;">)) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(f(v1</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> v2))</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">log(map2(</span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">11</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">33</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> (</span><span style="color:#FDAEB7;">+</span><span style="color:#E1E4E8;">)))</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">log(map2(</span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#DBEDFF;">&quot;ABC&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">123</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> (a</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> b) </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> (a</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> b)))</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/** Only invoke [f] when [o1] and [o2] are [Some] */</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">map2</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">option</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">&#39;</span><span style="color:#005CC5;">a</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">option</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">&#39;</span><span style="color:#005CC5;">a</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">,</span><span style="color:#24292E;"> (</span><span style="color:#6A737D;">&#39;</span><span style="color:#005CC5;">a</span><span style="color:#D73A49;">,</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">&#39;</span><span style="color:#005CC5;">a</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">&#39;</span><span style="color:#005CC5;">a</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">option</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">&#39;</span><span style="color:#005CC5;">a</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">  (o1</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> o2</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> f) </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (o1</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> o2) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">None</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">None</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">v1</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">v2</span><span style="color:#24292E;">)) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(f(v1</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> v2))</span></span>
<span class="line"><span style="color:#24292E;">    }</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">log(map2(</span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">11</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">33</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> (</span><span style="color:#B31D28;">+</span><span style="color:#24292E;">)))</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">log(map2(</span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;ABC&quot;</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">123</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> (a</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> b) </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> (a</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> b)))</span><span style="color:#B31D28;">;</span></span></code></pre></div><details class="details custom-block"><summary>Hint 1</summary><p>Fix the type annotation.</p></details><details class="details custom-block"><summary>Hint 2</summary><p>Delete the type annotation.</p></details><details class="details custom-block"><summary>Solution</summary><div class="language-reason vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">reason</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/** Only invoke [f] when [o1] and [o2] are [Some] */</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">map2</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> (</span><span style="color:#DBEDFF;">option</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">&#39;</span><span style="color:#79B8FF;">a</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">option</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">&#39;</span><span style="color:#79B8FF;">b</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">,</span><span style="color:#E1E4E8;"> (</span><span style="color:#6A737D;">&#39;</span><span style="color:#79B8FF;">a</span><span style="color:#F97583;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">&#39;</span><span style="color:#79B8FF;">b</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">&#39;</span><span style="color:#79B8FF;">c</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">option</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">&#39;</span><span style="color:#79B8FF;">c</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">  (o1</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> o2</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> f) </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (o1</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> o2) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">None</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">None</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">v1</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">v2</span><span style="color:#E1E4E8;">)) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(f(v1</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> v2))</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">log(map2(</span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">11</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">33</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> (</span><span style="color:#FDAEB7;">+</span><span style="color:#E1E4E8;">)))</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">log(map2(</span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#DBEDFF;">&quot;ABC&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">123</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> (a</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> b) </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> (a</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> b)))</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/** Only invoke [f] when [o1] and [o2] are [Some] */</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">map2</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">option</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">&#39;</span><span style="color:#005CC5;">a</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">option</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">&#39;</span><span style="color:#005CC5;">b</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">,</span><span style="color:#24292E;"> (</span><span style="color:#6A737D;">&#39;</span><span style="color:#005CC5;">a</span><span style="color:#D73A49;">,</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">&#39;</span><span style="color:#005CC5;">b</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">&#39;</span><span style="color:#005CC5;">c</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">option</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">&#39;</span><span style="color:#005CC5;">c</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">  (o1</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> o2</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> f) </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (o1</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> o2) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">None</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">None</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">v1</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">v2</span><span style="color:#24292E;">)) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(f(v1</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> v2))</span></span>
<span class="line"><span style="color:#24292E;">    }</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">log(map2(</span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">11</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">33</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> (</span><span style="color:#B31D28;">+</span><span style="color:#24292E;">)))</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">log(map2(</span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;ABC&quot;</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">123</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> (a</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> b) </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> (a</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> b)))</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>We have to use different type variables if we expect that the types might be different. Note that we could have deleted the type annotation and then OCaml’s inferred type would be the same as the type annotation above.</p></details><p><b>4.</b> Change the render logic so that a <code>DateInput</code> is rendered above each <code>Order</code>. Changing the date on a <code>DateInput</code> changes the date for the <code>Order</code> below it.</p><details class="details custom-block"><summary>Hint</summary><p>Define a <code>DateAndOrder</code> helper component.</p></details><details class="details custom-block"><summary>Solution</summary><p>Add <code>Demo.DateAndOrder</code> subcomponent:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#FDAEB7;">module</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DateAndOrder</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  [</span><span style="color:#F97583;">@</span><span style="color:#B392F0;">react</span><span style="color:#F97583;">.</span><span style="color:#79B8FF;">component</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (~label</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">string</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> ~items</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">list</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#DBEDFF;">t</span><span style="color:#E1E4E8;">)) </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">date</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">setDate</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">RR</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">useStateValue(</span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Date</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">fromString(</span><span style="color:#DBEDFF;">&quot;2024-05-28T00:00&quot;</span><span style="color:#E1E4E8;">))</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      &lt;</span><span style="color:#85E89D;">h2</span><span style="color:#E1E4E8;">&gt; {</span><span style="color:#B392F0;">RR</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">s(label)} &lt;/</span><span style="color:#85E89D;">h2</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      &lt;</span><span style="color:#B392F0;">DateInput</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">date</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onChange</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">setDate /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      &lt;</span><span style="color:#B392F0;">Order</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">items</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">date</span><span style="color:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#B31D28;">module</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">DateAndOrder</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  [</span><span style="color:#D73A49;">@</span><span style="color:#6F42C1;">react</span><span style="color:#D73A49;">.</span><span style="color:#005CC5;">component</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">make</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (~label</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">string</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> ~items</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">list</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#032F62;">t</span><span style="color:#24292E;">)) </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">date</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">setDate</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">RR</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">useStateValue(</span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Date</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">fromString(</span><span style="color:#032F62;">&quot;2024-05-28T00:00&quot;</span><span style="color:#24292E;">))</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      &lt;</span><span style="color:#22863A;">h2</span><span style="color:#24292E;">&gt; {</span><span style="color:#6F42C1;">RR</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">s(label)} &lt;/</span><span style="color:#22863A;">h2</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      &lt;</span><span style="color:#6F42C1;">DateInput</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">date</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onChange</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">setDate /&gt;</span></span>
<span class="line"><span style="color:#24292E;">      &lt;</span><span style="color:#6F42C1;">Order</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">items</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">date</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>Then refactor <code>Demo.make</code> to use the new component:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#F97583;">@</span><span style="color:#B392F0;">react</span><span style="color:#F97583;">.</span><span style="color:#79B8FF;">component</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">()</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">h1</span><span style="color:#E1E4E8;">&gt; {</span><span style="color:#B392F0;">RR</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">s(</span><span style="color:#DBEDFF;">&quot;Order Confirmation&quot;</span><span style="color:#E1E4E8;">)} &lt;/</span><span style="color:#85E89D;">h1</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    {datasets</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">List</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">map(((label</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> items)) </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> &lt;</span><span style="color:#B392F0;">DateAndOrder</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">key</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">label </span><span style="color:#B392F0;">label</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">items</span><span style="color:#E1E4E8;"> /&gt;)</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RR</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">list}</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[</span><span style="color:#D73A49;">@</span><span style="color:#6F42C1;">react</span><span style="color:#D73A49;">.</span><span style="color:#005CC5;">component</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">make</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">()</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">h1</span><span style="color:#24292E;">&gt; {</span><span style="color:#6F42C1;">RR</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">s(</span><span style="color:#032F62;">&quot;Order Confirmation&quot;</span><span style="color:#24292E;">)} &lt;/</span><span style="color:#22863A;">h1</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    {datasets</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">List</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">map(((label</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> items)) </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> &lt;</span><span style="color:#6F42C1;">DateAndOrder</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">key</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">label </span><span style="color:#6F42C1;">label</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">items</span><span style="color:#24292E;"> /&gt;)</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RR</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">list}</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#B31D28;">;</span></span></code></pre></div></details><p><b>5.</b> Make the message for <code>Discount.getSandwichHalfOff</code>’s <code> \`MissingSandwichTypes</code> error more friendly by listing the sandwiches you still need to buy to fulfill the conditions of the promotion. As a start, change the “Not all sandwiches, return Error” test in <code>DiscountTests.SandwichHalfOff</code>:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">test(</span><span style="color:#DBEDFF;">&quot;Not all sandwiches, return Error&quot;</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">()</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  expect</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> deepEqual(</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getSandwichHalfOff(</span></span>
<span class="line"><span style="color:#E1E4E8;">         ~date</span><span style="color:#FDAEB7;">=</span><span style="color:#E1E4E8;">june3</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">[</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Unicorn</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#79B8FF;">Hotdog</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Portabello</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Ham</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">]</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">       )</span><span style="color:#FDAEB7;">,</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">       </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">MissingSandwichTypes</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">[</span><span style="color:#DBEDFF;">&quot;turducken&quot;</span><span style="color:#79B8FF;">]</span><span style="color:#E1E4E8;">))</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">     )</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#24292E;">test(</span><span style="color:#032F62;">&quot;Not all sandwiches, return Error&quot;</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">()</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">  expect</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> deepEqual(</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getSandwichHalfOff(</span></span>
<span class="line"><span style="color:#24292E;">         ~date</span><span style="color:#B31D28;">=</span><span style="color:#24292E;">june3</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">[</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Unicorn</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#005CC5;">Hotdog</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Portabello</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Ham</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">]</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">       )</span><span style="color:#B31D28;">,</span></span>
<span class="line highlighted"><span style="color:#24292E;">       </span><span style="color:#005CC5;">Error</span><span style="color:#24292E;">(</span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">MissingSandwichTypes</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">[</span><span style="color:#032F62;">&quot;turducken&quot;</span><span style="color:#005CC5;">]</span><span style="color:#24292E;">))</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">     )</span></span>
<span class="line"><span style="color:#24292E;">)</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>Note that the <code> \`MissingSandwichTypes</code> variant tag now has an argument which is a list of strings.</p><details class="details custom-block"><summary>Hint 1</summary><p>Inside <code>Discount.getSandwichHalfOff</code>, use <a href="https://melange.re/v4.0.0/api/re/melange/Stdlib/List/#val-filter" target="_blank" rel="noreferrer">List.filter</a> to filter out sandwich types that don’t appear in <code>items</code>.</p></details><details class="details custom-block"><summary>Hint 2</summary><p>In <code>Promo.make</code>, use <a href="https://melange.re/v4.0.0/api/re/melange/Stdlib/Array/#val-of_list" target="_blank" rel="noreferrer">Stdlib.Array.of_list</a> and <a href="https://melange.re/v4.0.0/api/re/melange/Js/Array/index.html#val-join" target="_blank" rel="noreferrer">Js.Array.join</a> to create a comma-delimited string.</p></details><details class="details custom-block"><summary>Solution</summary><p>Change the switch expression inside <code>Discount.getSandwichHalfOff</code> so that when there are missing sandwich types, they are collected in a list and returned as the argument of <code> \`MissingSandwichTypes</code> error tag:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (tracker) {</span></span>
<span class="line"><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> {</span><span style="color:#B392F0;">portabello</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ham</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">unicorn</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">turducken</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">} </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">total</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    items</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ListLabels</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">fold_left(~init</span><span style="color:#FDAEB7;">=</span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> ~f</span><span style="color:#FDAEB7;">=</span><span style="color:#E1E4E8;">(total</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> item) </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">         total </span><span style="color:#FDAEB7;">+.</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toPrice(item</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> ~date)</span></span>
<span class="line"><span style="color:#E1E4E8;">       )</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">Ok</span><span style="color:#E1E4E8;">(total </span><span style="color:#FDAEB7;">/.</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">;</span></span>
<span class="line highlighted"><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">tracker</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">missing</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">[</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">      tracker</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">portabello</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;portabello&quot;</span><span style="color:#FDAEB7;">,</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">      tracker</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">ham</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;ham&quot;</span><span style="color:#FDAEB7;">,</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">      tracker</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">unicorn</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;unicorn&quot;</span><span style="color:#FDAEB7;">,</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">      tracker</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">turducken</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;turducken&quot;</span><span style="color:#FDAEB7;">,</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">]</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">List</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">filter((</span><span style="color:#FDAEB7;">!=</span><span style="color:#E1E4E8;">)(</span><span style="color:#DBEDFF;">&quot;&quot;</span><span style="color:#E1E4E8;">))</span><span style="color:#FDAEB7;">;</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">MissingSandwichTypes</span><span style="color:#E1E4E8;">(missing))</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (tracker) {</span></span>
<span class="line"><span style="color:#B31D28;">|</span><span style="color:#24292E;"> {</span><span style="color:#6F42C1;">portabello</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ham</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">unicorn</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">turducken</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">} </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">total</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    items</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ListLabels</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">fold_left(~init</span><span style="color:#B31D28;">=</span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> ~f</span><span style="color:#B31D28;">=</span><span style="color:#24292E;">(total</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> item) </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">         total </span><span style="color:#B31D28;">+.</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toPrice(item</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> ~date)</span></span>
<span class="line"><span style="color:#24292E;">       )</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">Ok</span><span style="color:#24292E;">(total </span><span style="color:#B31D28;">/.</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">;</span></span>
<span class="line highlighted"><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">tracker</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line highlighted"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">missing</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line highlighted"><span style="color:#24292E;">    </span><span style="color:#005CC5;">[</span></span>
<span class="line highlighted"><span style="color:#24292E;">      tracker</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">portabello</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">?</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;portabello&quot;</span><span style="color:#B31D28;">,</span></span>
<span class="line highlighted"><span style="color:#24292E;">      tracker</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">ham</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">?</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;ham&quot;</span><span style="color:#B31D28;">,</span></span>
<span class="line highlighted"><span style="color:#24292E;">      tracker</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">unicorn</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">?</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;unicorn&quot;</span><span style="color:#B31D28;">,</span></span>
<span class="line highlighted"><span style="color:#24292E;">      tracker</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">turducken</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">?</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;turducken&quot;</span><span style="color:#B31D28;">,</span></span>
<span class="line highlighted"><span style="color:#24292E;">    </span><span style="color:#005CC5;">]</span></span>
<span class="line highlighted"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">List</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">filter((</span><span style="color:#B31D28;">!=</span><span style="color:#24292E;">)(</span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">))</span><span style="color:#B31D28;">;</span></span>
<span class="line highlighted"><span style="color:#24292E;">  </span><span style="color:#005CC5;">Error</span><span style="color:#24292E;">(</span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">MissingSandwichTypes</span><span style="color:#24292E;">(missing))</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>Note that instead of using partial application in</p><div class="language-reason vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">reason</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">List</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">filter((</span><span style="color:#FDAEB7;">!=</span><span style="color:#E1E4E8;">)(</span><span style="color:#DBEDFF;">&quot;&quot;</span><span style="color:#E1E4E8;">))</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">List</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">filter((</span><span style="color:#B31D28;">!=</span><span style="color:#24292E;">)(</span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">))</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>We could have instead written</p><div class="language-reason vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">reason</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">List</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">filter(s </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> s </span><span style="color:#FDAEB7;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;&quot;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">List</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">filter(s </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> s </span><span style="color:#B31D28;">!=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">)</span></span></code></pre></div><p>which is a little more verbose and arguably easier to understand.</p><p>Then change the render logic inside <code>Promo.make</code>’s <code> \`MissingSandwichTypes</code> branch to convert the list of missing sandwich types to a comma-delimited string:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">| </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">DiscountError</span><span style="color:#E1E4E8;">(code) </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">buyWhat</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (code) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedOneBurger</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;at least 1 more burger&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedTwoBurgers</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;at least 2 burgers&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedMegaBurger</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;a burger with every topping&quot;</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">MissingSandwichTypes</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">missing</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">      (missing </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Stdlib</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Array</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">of_list </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Array</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">join(~sep</span><span style="color:#FDAEB7;">=</span><span style="color:#DBEDFF;">&quot;, &quot;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">      </span><span style="color:#FDAEB7;">++</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot; sandwiches&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">className</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">Style</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">discountError</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#B392F0;">RR</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">s(</span><span style="color:#FDAEB7;">{</span><span style="color:#79B8FF;">j</span><span style="color:#FDAEB7;">|</span><span style="color:#DBEDFF;">Buy $buyWhat to enjoy this promotion</span><span style="color:#FDAEB7;">|</span><span style="color:#79B8FF;">j</span><span style="color:#FDAEB7;">}</span><span style="color:#E1E4E8;">)}</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#24292E;">| </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">DiscountError</span><span style="color:#24292E;">(code) </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">buyWhat</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (code) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedOneBurger</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;at least 1 more burger&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedTwoBurgers</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;at least 2 burgers&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedMegaBurger</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;a burger with every topping&quot;</span></span>
<span class="line highlighted"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">MissingSandwichTypes</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">missing</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line highlighted"><span style="color:#24292E;">      (missing </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Stdlib</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Array</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">of_list </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Array</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">join(~sep</span><span style="color:#B31D28;">=</span><span style="color:#032F62;">&quot;, &quot;</span><span style="color:#24292E;">))</span></span>
<span class="line highlighted"><span style="color:#24292E;">      </span><span style="color:#B31D28;">++</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot; sandwiches&quot;</span></span>
<span class="line"><span style="color:#24292E;">    }</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">className</span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;">Style</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">discountError</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#6F42C1;">RR</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">s(</span><span style="color:#B31D28;">{</span><span style="color:#005CC5;">j</span><span style="color:#B31D28;">|</span><span style="color:#032F62;">Buy $buyWhat to enjoy this promotion</span><span style="color:#B31D28;">|</span><span style="color:#005CC5;">j</span><span style="color:#B31D28;">}</span><span style="color:#24292E;">)}</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>Recall that we have to use <code>Stdlib.Array.of_list</code> instead of <code>Array.of_list</code> because our custom <code>Array</code> module takes precedence.</p></details><hr><p>View <a href="https://github.com/melange-re/melange-for-react-devs/blob/main/src/order-with-promo/" target="_blank" rel="noreferrer">source code</a> and <a href="https://react-book.melange.re/demo/src/order-with-promo/" target="_blank" rel="noreferrer">demo</a> for this chapter.</p><hr><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>In OCaml terminology, variant tags start with <code>\`</code> and correspond to polymorphic variant types, while variant constructors correspond to normal variant types. <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p>It might be a little confusing that <code>Js.Date.get*</code> functions all return <code>float</code> instead of <code>int</code>. The reason is that these functions <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getFullYear#return_value" target="_blank" rel="noreferrer">must return <code>NaN</code> if the input Date is invalid</a>, and in OCaml, only <code>float</code> is capable of representing <a href="https://melange.re/v4.0.0/api/re/melange/Js/Float/#val-_NaN" target="_blank" rel="noreferrer"><code>NaN</code></a>. <a href="#fnref2" class="footnote-backref">↩︎</a></p></li><li id="fn3" class="footnote-item"><p>If you happen to need more than 7 dependencies, you can define your own binding function based on the <a href="https://github.com/reasonml/reason-react/blob/713ab6cdb1644fb44e2c0c8fdcbef31007b37b8d/src/React.rei#L248-L255" target="_blank" rel="noreferrer">current binding functions</a>. We’ll cover bindings in more detail <a href="/todo.html">later</a>. <a href="#fnref3" class="footnote-backref">↩︎</a></p></li><li id="fn4" class="footnote-item"><p>Recall that variant constructors with arguments also get turned into objects in the JS runtime. <a href="#fnref4" class="footnote-backref">↩︎</a></p></li><li id="fn5" class="footnote-item"><p>Some other prop names which cannot be used in their original form are: <code>as_</code>, <code>open_</code>, <code>begin_</code>, <code>end_</code>, <code>in_</code>, and <code>to_</code>. <a href="#fnref5" class="footnote-backref">↩︎</a></p></li></ol></section>`,157),e=[p];function t(c,r,y,E,i,F){return n(),a("div",null,e)}const D=s(o,[["render",t]]);export{B as __pageData,D as default};
