import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.0e8ae64e.js";const D=JSON.parse('{"title":"Burger Discounts","description":"","frontmatter":{},"headers":[],"relativePath":"burger-discounts/index.md","filePath":"burger-discounts/index.md","lastUpdated":1718989630000}'),p={name:"burger-discounts/index.md"},o=l(`<h1 id="burger-discounts" tabindex="-1">Burger Discounts <a class="header-anchor" href="#burger-discounts" aria-label="Permalink to &quot;Burger Discounts&quot;">​</a></h1><p>International Burger Day falls on Tuesday of next week, so Madame Jellobutter decides to celebrate it by running the classic “buy 2 burgers get 1 free” promotion. She clearly lays out the rules of this promotion:</p><blockquote><p>Given an order comprising multiple items, find the price of the second most expensive burger. Subtract this number from the pre-tax total of the order.</p></blockquote><p>Add a new file <code>src/order-confirmation/Discount.re</code>:</p><div class="language-reason vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">reason</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Buy 2 burgers, get 1 free</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getFreeBurger</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (items</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">array</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#DBEDFF;">t</span><span style="color:#E1E4E8;">)) </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">burgers</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    items</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Array</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">sortInPlaceWith(~f</span><span style="color:#FDAEB7;">=</span><span style="color:#E1E4E8;">(item1</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> item2) </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;">-</span><span style="color:#E1E4E8;"> compare(</span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toPrice(item1)</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toPrice(item2))</span></span>
<span class="line"><span style="color:#E1E4E8;">      )</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Array</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">filter(~f</span><span style="color:#FDAEB7;">=</span><span style="color:#E1E4E8;">item </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (item) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Hotdog</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">      )</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (burgers) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">[|Burger</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">cheaperBurger</span><span style="color:#E1E4E8;">)</span><span style="color:#79B8FF;">|]</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Burger</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toPrice(cheaperBurger))</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Buy 2 burgers, get 1 free</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getFreeBurger</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (items</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">array</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#032F62;">t</span><span style="color:#24292E;">)) </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">burgers</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    items</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Array</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">sortInPlaceWith(~f</span><span style="color:#B31D28;">=</span><span style="color:#24292E;">(item1</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> item2) </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;">-</span><span style="color:#24292E;"> compare(</span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toPrice(item1)</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toPrice(item2))</span></span>
<span class="line"><span style="color:#24292E;">      )</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Array</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">filter(~f</span><span style="color:#B31D28;">=</span><span style="color:#24292E;">item </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (item) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Hotdog</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">      )</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (burgers) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">[|Burger</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">cheaperBurger</span><span style="color:#24292E;">)</span><span style="color:#005CC5;">|]</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Burger</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toPrice(cheaperBurger))</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">_</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"><span style="color:#24292E;">  }</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#B31D28;">;</span></span></code></pre></div><h2 id="discount-getfreeburger-function" tabindex="-1"><code>Discount.getFreeBurger</code> function <a class="header-anchor" href="#discount-getfreeburger-function" aria-label="Permalink to &quot;\`Discount.getFreeBurger\` function&quot;">​</a></h2><p>The new function <code>Discount.getFreeBurger</code> takes an array of items, finds the second-most-expensive burger, and returns its price encased in <code>Some</code>. If there is no second burger, it returns <code>None</code>.</p><p>The functions used in <code>Discount.getFreeBurger</code> are:</p><ul><li><a href="https://melange.re/v4.0.0/api/re/melange/Js/Array/index.html#val-sortInPlaceWith" target="_blank" rel="noreferrer">Js.Array.sortInPlaceWith</a> takes a callback function <code>~f</code> with type signature <code>(&#39;a, &#39;a) =&gt; int</code> (accept two arguments of the same type and return <code>int</code>). It’s used to sort the items by price (highest to lowest).</li><li><a href="https://melange.re/v4.0.0/api/re/melange/Stdlib/#val-compare" target="_blank" rel="noreferrer">Stdlib.compare</a> has type signature <code>(&#39;a, &#39;a) =&gt; int</code>. It’s a polymorphic function capable of comparing many types, including <code>bool</code>, <code>int</code>, <code>string</code>, etc. Note that you can always just write <code>compare</code> instead of <code>Stdlib.compare</code>, because the <a href="https://melange.re/v4.0.0/api/re/melange/Stdlib/" target="_blank" rel="noreferrer"><code>Stdlib</code> module is always opened by default</a>.</li><li><a href="https://melange.re/v4.0.0/api/re/melange/Js/Array/#val-filter" target="_blank" rel="noreferrer">Js.Array.filter</a> takes a callback function <code>~f</code> with type signature <code>&#39;a =&gt; bool</code>. It’s used to make sure all items in the <code>burgers</code> array are all burgers.</li></ul><p>At the moment, this code doesn’t compile, and that’s not the only thing wrong with it, but we’ll address each issue in due course.</p><h2 id="limitation-of-type-inference" tabindex="-1">Limitation of type inference <a class="header-anchor" href="#limitation-of-type-inference" aria-label="Permalink to &quot;Limitation of type inference&quot;">​</a></h2><p>You should see this compilation error:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">File &quot;src/order-confirmation/Discount.re&quot;, line 9, characters 11-17:</span></span>
<span class="line"><span style="color:#e1e4e8;">9 |          | Burger(_) =&gt; true</span></span>
<span class="line"><span style="color:#e1e4e8;">               ^^^^^^</span></span>
<span class="line"><span style="color:#e1e4e8;">Error: Unbound constructor Burger</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">File &quot;src/order-confirmation/Discount.re&quot;, line 9, characters 11-17:</span></span>
<span class="line"><span style="color:#24292e;">9 |          | Burger(_) =&gt; true</span></span>
<span class="line"><span style="color:#24292e;">               ^^^^^^</span></span>
<span class="line"><span style="color:#24292e;">Error: Unbound constructor Burger</span></span></code></pre></div><p>OCaml’s type inference isn’t able to figure out that the callback function passed to <code>Js.Array.filter</code> receives an argument of <code>Item.t</code>, so it doesn’t know where the <code>Burger</code> constructor is coming from. But why does type inference work in the callback to <code>Js.Array.sortInPlaceWith</code>?</p><div class="language-reason vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">reason</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Array</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">sortInPlaceWith(~f</span><span style="color:#FDAEB7;">=</span><span style="color:#E1E4E8;">(item1</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> item2) </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">-</span><span style="color:#E1E4E8;"> compare(</span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toPrice(item1)</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toPrice(item2))</span></span>
<span class="line"><span style="color:#E1E4E8;">  )</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Array</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">sortInPlaceWith(~f</span><span style="color:#B31D28;">=</span><span style="color:#24292E;">(item1</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> item2) </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">-</span><span style="color:#24292E;"> compare(</span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toPrice(item1)</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toPrice(item2))</span></span>
<span class="line"><span style="color:#24292E;">  )</span></span></code></pre></div><p>The reason is that <code>Item.toPrice</code> is invoked inside this callback, and its type signature is already known to be <code>Item.t =&gt; float</code>. So type inference can figure out that <code>item1</code> and <code>item2</code> must both be of type <code>Item.t</code>, because <code>Item.toPrice</code> can only accept an argument of type <code>Item.t</code>.</p><h2 id="type-annotate-callback-argument" tabindex="-1">Type annotate callback argument <a class="header-anchor" href="#type-annotate-callback-argument" aria-label="Permalink to &quot;Type annotate callback argument&quot;">​</a></h2><p>There aren’t any function invocations inside the callback to <code>Js.Array.filter</code>, so we can help the compiler out by type annotating the <code>item</code> argument:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line highlighted"><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Array</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">filter(~f</span><span style="color:#FDAEB7;">=</span><span style="color:#E1E4E8;">(item</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#DBEDFF;">t</span><span style="color:#E1E4E8;">) </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (item) {</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Hotdog</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">     }</span></span>
<span class="line"><span style="color:#E1E4E8;">   )</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line highlighted"><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Array</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">filter(~f</span><span style="color:#B31D28;">=</span><span style="color:#24292E;">(item</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#032F62;">t</span><span style="color:#24292E;">) </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (item) {</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Hotdog</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">     }</span></span>
<span class="line"><span style="color:#24292E;">   )</span><span style="color:#B31D28;">;</span></span></code></pre></div><h2 id="use-full-name" tabindex="-1">Use full name <a class="header-anchor" href="#use-full-name" aria-label="Permalink to &quot;Use full name&quot;">​</a></h2><p>Explicit type annotation always works, but sometimes it’s enough to just give the compiler a hint. For example, we can use full names<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> for the constructors inside the switch expression:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Array</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">filter(~f</span><span style="color:#FDAEB7;">=</span><span style="color:#E1E4E8;">item </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (item) {</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">     </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">     </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">)</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">     </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">Hotdog</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">     }</span></span>
<span class="line"><span style="color:#E1E4E8;">   )</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Array</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">filter(~f</span><span style="color:#B31D28;">=</span><span style="color:#24292E;">item </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (item) {</span></span>
<span class="line highlighted"><span style="color:#24292E;">     </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line highlighted"><span style="color:#24292E;">     </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">)</span></span>
<span class="line highlighted"><span style="color:#24292E;">     </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">Hotdog</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">     }</span></span>
<span class="line"><span style="color:#24292E;">   )</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>Because <code>Item.Burger</code> is a constructor of the <code>Item.t</code> variant type, <code>item</code> must have type <code>Item.t</code>. For the sake of convenience, you don’t need to use full names in the second branch of the switch expression—OCaml is smart enough to infer which module the <code>Sandwich</code> and <code>Hotdog</code> constructors belong to.</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Array</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">filter(~f</span><span style="color:#FDAEB7;">=</span><span style="color:#E1E4E8;">item </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (item) {</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">     </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">)</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">     </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Hotdog</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">     }</span></span>
<span class="line"><span style="color:#E1E4E8;">   )</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Array</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">filter(~f</span><span style="color:#B31D28;">=</span><span style="color:#24292E;">item </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (item) {</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line highlighted"><span style="color:#24292E;">     </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">)</span></span>
<span class="line highlighted"><span style="color:#24292E;">     </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Hotdog</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">     }</span></span>
<span class="line"><span style="color:#24292E;">   )</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>By using the full name of the <code>Burger</code> constructor, we can now easily refactor the callback function to use the <code>fun</code> syntax:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Array</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">filter(</span></span>
<span class="line"><span style="color:#E1E4E8;">     ~f</span><span style="color:#FDAEB7;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;">fun</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Hotdog</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">   )</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Array</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">filter(</span></span>
<span class="line"><span style="color:#24292E;">     ~f</span><span style="color:#B31D28;">=</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#D73A49;">fun</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Hotdog</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">   )</span><span style="color:#B31D28;">;</span></span></code></pre></div><h2 id="add-new-tests" tabindex="-1">Add new tests <a class="header-anchor" href="#add-new-tests" aria-label="Permalink to &quot;Add new tests&quot;">​</a></h2><p>Add some tests in new file <code>src/order-confirmation/DiscountTests.re</code>:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">open</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Fest</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">test(</span><span style="color:#DBEDFF;">&quot;0 burgers, no discount&quot;</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">()</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  expect</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> equal(</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getFreeBurger(</span><span style="color:#79B8FF;">[|</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">Hotdog</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Ham</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Turducken</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#79B8FF;">|]</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#79B8FF;">None</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">     )</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">test(</span><span style="color:#DBEDFF;">&quot;1 burger, no discount&quot;</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">()</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  expect</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> equal(</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getFreeBurger(</span><span style="color:#79B8FF;">[|</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">Hotdog</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Ham</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">lettuce</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">onions</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">cheese</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">tomatoes</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">bacon</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">         })</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#79B8FF;">|]</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#79B8FF;">None</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">     )</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">test(</span><span style="color:#DBEDFF;">&quot;2 burgers of same price, discount&quot;</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">()</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  expect</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> equal(</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getFreeBurger(</span><span style="color:#79B8FF;">[|</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">Hotdog</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">lettuce</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">onions</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">cheese</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">tomatoes</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">bacon</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">         })</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Ham</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">lettuce</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">onions</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">cheese</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">tomatoes</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">bacon</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">         })</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#79B8FF;">|]</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">15</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">     )</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">open</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Fest</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">test(</span><span style="color:#032F62;">&quot;0 burgers, no discount&quot;</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">()</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">  expect</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> equal(</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getFreeBurger(</span><span style="color:#005CC5;">[|</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">Hotdog</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Ham</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Turducken</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#005CC5;">|]</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#005CC5;">None</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">     )</span></span>
<span class="line"><span style="color:#24292E;">)</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">test(</span><span style="color:#032F62;">&quot;1 burger, no discount&quot;</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">()</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">  expect</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> equal(</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getFreeBurger(</span><span style="color:#005CC5;">[|</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">Hotdog</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Ham</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">lettuce</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">onions</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">cheese</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">tomatoes</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">bacon</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">         })</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#005CC5;">|]</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#005CC5;">None</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">     )</span></span>
<span class="line"><span style="color:#24292E;">)</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">test(</span><span style="color:#032F62;">&quot;2 burgers of same price, discount&quot;</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">()</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">  expect</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> equal(</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getFreeBurger(</span><span style="color:#005CC5;">[|</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">Hotdog</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">lettuce</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">onions</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">cheese</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">tomatoes</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">bacon</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">         })</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Ham</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">lettuce</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">onions</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">cheese</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">tomatoes</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">bacon</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">         })</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#005CC5;">|]</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">15</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">     )</span></span>
<span class="line"><span style="color:#24292E;">)</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>To run these tests, add a new cram test to <code>src/order-confirmation/tests.t</code>:</p><div class="language-cram vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cram</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">Discount tests</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">$</span><span style="color:#E1E4E8;"> node ./output/src/order-confirmation/DiscountTests.mjs | sed </span><span style="color:#9ECBFF;">&#39;/duration_ms/d&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">Discount tests</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">$</span><span style="color:#24292E;"> node ./output/src/order-confirmation/DiscountTests.mjs | sed </span><span style="color:#032F62;">&#39;/duration_ms/d&#39;</span></span></code></pre></div><p>Run <code>npm run test:watch</code> to see that the unit tests pass, then run <code>npm promote</code> to make the cram test pass.</p><h2 id="records-are-immutable" tabindex="-1">Records are immutable <a class="header-anchor" href="#records-are-immutable" aria-label="Permalink to &quot;Records are immutable&quot;">​</a></h2><p>It’s unnecessary to fully write out every burger record in the tests. Define a <code>burger</code> record at the very top of <code>DiscountTests</code>:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">burger</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Burger</span><span style="color:#FDAEB7;">.</span><span style="color:#DBEDFF;">t</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">lettuce</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">onions</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">cheese</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">tomatoes</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">bacon</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">burger</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Burger</span><span style="color:#B31D28;">.</span><span style="color:#032F62;">t</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">lettuce</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">onions</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">cheese</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">tomatoes</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">bacon</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>Then refactor the second and third tests to use this record:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">test(</span><span style="color:#DBEDFF;">&quot;1 burger, no discount&quot;</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">()</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  expect</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> equal(</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">       </span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getFreeBurger(</span><span style="color:#79B8FF;">[|Hotdog</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Ham</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">(burger)</span><span style="color:#79B8FF;">|]</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#79B8FF;">None</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">     )</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">test(</span><span style="color:#DBEDFF;">&quot;2 burgers of same price, discount&quot;</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">()</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  expect</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> equal(</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getFreeBurger(</span><span style="color:#79B8FF;">[|</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">Hotdog</span><span style="color:#FDAEB7;">,</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">(burger)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Ham</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">(burger)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#79B8FF;">|]</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">15</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">     )</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#24292E;">test(</span><span style="color:#032F62;">&quot;1 burger, no discount&quot;</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">()</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">  expect</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> equal(</span></span>
<span class="line highlighted"><span style="color:#24292E;">       </span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getFreeBurger(</span><span style="color:#005CC5;">[|Hotdog</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Ham</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">(burger)</span><span style="color:#005CC5;">|]</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#005CC5;">None</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">     )</span></span>
<span class="line"><span style="color:#24292E;">)</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">test(</span><span style="color:#032F62;">&quot;2 burgers of same price, discount&quot;</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">()</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">  expect</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> equal(</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getFreeBurger(</span><span style="color:#005CC5;">[|</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">Hotdog</span><span style="color:#B31D28;">,</span></span>
<span class="line highlighted"><span style="color:#24292E;">         </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">(burger)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Ham</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line highlighted"><span style="color:#24292E;">         </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">(burger)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#005CC5;">|]</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">15</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">     )</span></span>
<span class="line"><span style="color:#24292E;">)</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>It’s safe to reuse a single record this way because records are immutable. You can pass a record to any function and never worry that its fields might be changed by that function.</p><h2 id="record-spread-syntax" tabindex="-1">Record spread syntax <a class="header-anchor" href="#record-spread-syntax" aria-label="Permalink to &quot;Record spread syntax&quot;">​</a></h2><p>Add a new test to <code>DiscountTests</code>:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">test(</span><span style="color:#DBEDFF;">&quot;2 burgers of different price, discount of cheaper one&quot;</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">()</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  expect</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> equal(</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getFreeBurger(</span><span style="color:#79B8FF;">[|</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">Hotdog</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">burger</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">tomatoes</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">         })</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 15.05</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Ham</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">burger</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">bacon</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">         }) </span><span style="color:#6A737D;">// 16.00</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#79B8FF;">|]</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">15</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">05</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">     )</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#24292E;">test(</span><span style="color:#032F62;">&quot;2 burgers of different price, discount of cheaper one&quot;</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">()</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">  expect</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> equal(</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getFreeBurger(</span><span style="color:#005CC5;">[|</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">Hotdog</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#D73A49;">...</span><span style="color:#24292E;">burger</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">tomatoes</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">         })</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 15.05</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Ham</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#D73A49;">...</span><span style="color:#24292E;">burger</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">bacon</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">         }) </span><span style="color:#6A737D;">// 16.00</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#005CC5;">|]</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">15</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">05</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">     )</span></span>
<span class="line"><span style="color:#24292E;">)</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>Again, we’re reusing the <code>burger</code> record, but this time, we use <a href="https://reasonml.github.io/docs/en/record#updating-records-spreading" target="_blank" rel="noreferrer">record spread syntax</a> to make copies of the <code>burger</code> record that have slightly different field values. For example,</p><div class="language-reason vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">reason</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">burger</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">tomatoes</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">burger</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">tomatoes</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">}</span></span></code></pre></div><p>means to make a copy of <code>burger</code> but with <code>tomatoes</code> set to <code>true</code>. It’s just a shorter and more convenient way to write this:</p><div class="language-reason vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">reason</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">lettuce</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> burger</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">lettuce</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">onions</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> burger</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">onions</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">cheese</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> burger</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">cheese</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">bacon</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> burger</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">bacon</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">tomatoes</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">lettuce</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> burger</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">lettuce</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">onions</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> burger</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">onions</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">cheese</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> burger</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">cheese</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">bacon</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> burger</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">bacon</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">tomatoes</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="ignoring-function-return-values" tabindex="-1">Ignoring function return values <a class="header-anchor" href="#ignoring-function-return-values" aria-label="Permalink to &quot;Ignoring function return values&quot;">​</a></h2><p>Add another test to <code>DiscountTests</code> that checks whether <code>Discount.getFreeBurger</code> modifies the array passed to it:</p><div class="language-reason vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">reason</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">test(</span><span style="color:#DBEDFF;">&quot;Input array isn&#39;t changed&quot;</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">()</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">items</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">[|</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">Hotdog</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">({</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">burger</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">tomatoes</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">})</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Ham</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">({</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">burger</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">bacon</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">})</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">|]</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getFreeBurger(items)</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  expect</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> deepEqual(</span></span>
<span class="line"><span style="color:#E1E4E8;">       items</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#79B8FF;">[|</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">Hotdog</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">({</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">burger</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">tomatoes</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">})</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Ham</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">({</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">burger</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">bacon</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">})</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#79B8FF;">|]</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">     )</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">test(</span><span style="color:#032F62;">&quot;Input array isn&#39;t changed&quot;</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">()</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">items</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">[|</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">Hotdog</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">({</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">burger</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">tomatoes</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">})</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Ham</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">({</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">burger</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">bacon</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">})</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">|]</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getFreeBurger(items)</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  expect</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> deepEqual(</span></span>
<span class="line"><span style="color:#24292E;">       items</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#005CC5;">[|</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">Hotdog</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">({</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">burger</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">tomatoes</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">})</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Ham</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">({</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">burger</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">bacon</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">})</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#005CC5;">|]</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">     )</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">})</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>You’ll get this compilation error:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">File &quot;src/order-confirmation/DiscountTests.re&quot;, line 65, characters 2-31:</span></span>
<span class="line"><span style="color:#e1e4e8;">65 |   Discount.getFreeBurger(items);</span></span>
<span class="line"><span style="color:#e1e4e8;">       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span></span>
<span class="line"><span style="color:#e1e4e8;">Error: This expression has type float option</span></span>
<span class="line"><span style="color:#e1e4e8;">       but an expression was expected of type unit</span></span>
<span class="line"><span style="color:#e1e4e8;">       because it is in the left-hand side of a sequence</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">File &quot;src/order-confirmation/DiscountTests.re&quot;, line 65, characters 2-31:</span></span>
<span class="line"><span style="color:#24292e;">65 |   Discount.getFreeBurger(items);</span></span>
<span class="line"><span style="color:#24292e;">       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span></span>
<span class="line"><span style="color:#24292e;">Error: This expression has type float option</span></span>
<span class="line"><span style="color:#24292e;">       but an expression was expected of type unit</span></span>
<span class="line"><span style="color:#24292e;">       because it is in the left-hand side of a sequence</span></span></code></pre></div><p>When you call a function in OCaml, you must use its return value, unless the return value is <code>()</code> (the <a href="https://reasonml.github.io/docs/en/overview#unit" target="_blank" rel="noreferrer">unit value</a>). However, inside this test, we are calling <code>Discount.getFreeBurger</code> to test its side effects, so the return value isn’t needed; as such, we can explicitly discard it by using <a href="https://melange.re/v4.0.0/api/re/melange/Stdlib/#val-ignore" target="_blank" rel="noreferrer">Stdlib.ignore</a><sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>:</p><div class="language-reason vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">reason</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getFreeBurger(items) </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">ignore;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getFreeBurger(items) </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">ignore;</span></span></code></pre></div><h2 id="runtime-representation-of-variant" tabindex="-1">Runtime representation of variant <a class="header-anchor" href="#runtime-representation-of-variant" aria-label="Permalink to &quot;Runtime representation of variant&quot;">​</a></h2><p>After compilation succeeds, we find that the “Input array isn’t changed” unit test fails. Part of the output (cleaned up for readability) looks like this:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">TAG</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">_0</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FDAEB7;font-style:italic;">bacon</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FDAEB7;font-style:italic;">cheese</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FDAEB7;font-style:italic;">lettuce</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FDAEB7;font-style:italic;">onions</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FDAEB7;font-style:italic;">tomatoes</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">TAG</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">_0</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">TAG</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">_0</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FDAEB7;font-style:italic;">bacon</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FDAEB7;font-style:italic;">cheese</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FDAEB7;font-style:italic;">lettuce</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FDAEB7;font-style:italic;">onions</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FDAEB7;font-style:italic;">tomatoes</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">TAG</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">_0</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#B31D28;font-style:italic;">bacon</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#B31D28;font-style:italic;">cheese</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#B31D28;font-style:italic;">lettuce</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#B31D28;font-style:italic;">onions</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#B31D28;font-style:italic;">tomatoes</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">TAG</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">_0</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">TAG</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">_0</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#B31D28;font-style:italic;">bacon</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#B31D28;font-style:italic;">cheese</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#B31D28;font-style:italic;">lettuce</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#B31D28;font-style:italic;">onions</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#B31D28;font-style:italic;">tomatoes</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">]</span></span></code></pre></div><p>This is how Melange maps the original OCaml values to their JavaScript runtime values:</p><table><thead><tr><th>OCaml source</th><th>JavaScript runtime</th></tr></thead><tbody><tr><td><code>Item.Hotdog</code></td><td><code>0</code></td></tr><tr><td><code>Sandwich(Ham)</code></td><td><code>{TAG: 0, _0: 1}</code></td></tr><tr><td><code>Burger({...burger, tomatoes: true})</code></td><td><code>{TAG: 1, _0: {bacon: 0, cheese: 0, lettuce: false, onions: 0, tomatoes: true}}</code></td></tr></tbody></table><p>A variant constructor without arguments, like <code>Hotdog</code>, gets turned into an integer. If the constructor has an argument, like <code>Sandwich(Ham)</code>, then it’s turned into a record where the <code>TAG</code> field is an integer and the <code>_0</code> field contains the argument. Records, like the one encased in the <code>Burger</code> constructor, are turned into JS objects. OCaml arrays, like the one that contains all the items, are turned into JS arrays.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Variant constructors in the runtime don’t always have the <code>TAG</code> field. That field only appears when there’s more than one variant constructor with an argument. See <a href="https://melange.re/v4.0.0/communicate-with-javascript.html#data-types-and-runtime-representation" target="_blank" rel="noreferrer">Data types and runtime representation</a> for more details.</p></div><h2 id="arrays-are-mutable" tabindex="-1">Arrays are mutable <a class="header-anchor" href="#arrays-are-mutable" aria-label="Permalink to &quot;Arrays are mutable&quot;">​</a></h2><p>The “Input array isn’t changed” unit test fails because arrays in OCaml are mutable (just as in JavaScript) and the <code>Discount.getFreeBurger</code> function mutates its array argument. The easiest way to fix this is to swap the order of <code>Js.Array.sortInPlaceWith</code> and <code>Js.Array.filter</code> invocations:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">items</span></span>
<span class="line"><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Array</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">filter(~f</span><span style="color:#FDAEB7;">=</span><span style="color:#E1E4E8;">item </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (item) {</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Hotdog</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">     }</span></span>
<span class="line"><span style="color:#E1E4E8;">   )</span></span>
<span class="line"><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Array</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">sortInPlaceWith(~f</span><span style="color:#FDAEB7;">=</span><span style="color:#E1E4E8;">(item1</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> item2) </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#FDAEB7;">-</span><span style="color:#E1E4E8;"> compare(</span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toPrice(item1)</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toPrice(item2))</span></span>
<span class="line"><span style="color:#E1E4E8;">   )</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">items</span></span>
<span class="line"><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Array</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">filter(~f</span><span style="color:#B31D28;">=</span><span style="color:#24292E;">item </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (item) {</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Hotdog</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">     }</span></span>
<span class="line"><span style="color:#24292E;">   )</span></span>
<span class="line"><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Array</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">sortInPlaceWith(~f</span><span style="color:#B31D28;">=</span><span style="color:#24292E;">(item1</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> item2) </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#B31D28;">-</span><span style="color:#24292E;"> compare(</span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toPrice(item1)</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toPrice(item2))</span></span>
<span class="line"><span style="color:#24292E;">   )</span></span></code></pre></div><p>Although sorting still happens in-place, the array being sorted is a new one created by <code>Js.Array.filter</code> (the array containing only burgers), not the original input array.</p><h2 id="runtime-representation-of-option" tabindex="-1">Runtime representation of <code>option</code> <a class="header-anchor" href="#runtime-representation-of-option" aria-label="Permalink to &quot;Runtime representation of \`option\`&quot;">​</a></h2><p>We need to add one more test to check that <code>Discount.getFreeBurger</code> works when there are more than two burgers:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">test(</span><span style="color:#DBEDFF;">&quot;3 burgers of different price, return Some(15.15)&quot;</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">()</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  expect</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> equal(</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getFreeBurger(</span><span style="color:#79B8FF;">[|</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">(burger)</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 15</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">Hotdog</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">burger</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">tomatoes</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">cheese</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">         })</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 15.15</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Ham</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">burger</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">bacon</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">         }) </span><span style="color:#6A737D;">// 16.00</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#79B8FF;">|]</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">15</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">15</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">     )</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#24292E;">test(</span><span style="color:#032F62;">&quot;3 burgers of different price, return Some(15.15)&quot;</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">()</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">  expect</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> equal(</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getFreeBurger(</span><span style="color:#005CC5;">[|</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">(burger)</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 15</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">Hotdog</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#D73A49;">...</span><span style="color:#24292E;">burger</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">tomatoes</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">cheese</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">         })</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 15.15</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Ham</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#D73A49;">...</span><span style="color:#24292E;">burger</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">bacon</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">         }) </span><span style="color:#6A737D;">// 16.00</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#005CC5;">|]</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">15</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">15</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">     )</span></span>
<span class="line"><span style="color:#24292E;">)</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>This test fails, with the key part of the output being:</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">+      Expected values to be strictly equal:</span></span>
<span class="line"><span style="color:#85E89D;">+      + actual - expected</span></span>
<span class="line"><span style="color:#85E89D;">+</span></span>
<span class="line"><span style="color:#85E89D;">+      + undefined</span></span>
<span class="line"><span style="color:#85E89D;">+      - 15.15</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">+      Expected values to be strictly equal:</span></span>
<span class="line"><span style="color:#22863A;">+      + actual - expected</span></span>
<span class="line"><span style="color:#22863A;">+</span></span>
<span class="line"><span style="color:#22863A;">+      + undefined</span></span>
<span class="line"><span style="color:#22863A;">+      - 15.15</span></span></code></pre></div><p>Recall that <code>Discount.getFreeBurger</code> has the return type <code>option(float)</code>. This is how Melange maps <code>option(float)</code> values to the JavaScript runtime<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup>:</p><table><thead><tr><th>OCaml source</th><th>JavaScript runtime</th></tr></thead><tbody><tr><td><code>None</code></td><td><code>undefined</code></td></tr><tr><td><code>Some(15.15)</code></td><td><code>15.15</code></td></tr></tbody></table><p>So Node test runner is basically telling you that <code>None</code> was returned, but <code>Some(15.15)</code> was expected.</p><h2 id="pattern-matching-on-arrays" tabindex="-1">Pattern matching on arrays <a class="header-anchor" href="#pattern-matching-on-arrays" aria-label="Permalink to &quot;Pattern matching on arrays&quot;">​</a></h2><p>The test is failing because the current “success” pattern match only accounts for a two-element array:</p><div class="language-reason vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">reason</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (burgers) {</span></span>
<span class="line highlighted"><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">[|Burger</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">cheaperBurger</span><span style="color:#E1E4E8;">)</span><span style="color:#79B8FF;">|]</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Burger</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toPrice(cheaperBurger))</span></span>
<span class="line"><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (burgers) {</span></span>
<span class="line highlighted"><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">[|Burger</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">cheaperBurger</span><span style="color:#24292E;">)</span><span style="color:#005CC5;">|]</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Burger</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toPrice(cheaperBurger))</span></span>
<span class="line"><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">_</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span></code></pre></div><p>OCaml <a href="https://ocaml.org/manual/5.2/patterns.html#sss:pat-array" target="_blank" rel="noreferrer">only allows you to pattern match on arrays of fixed length</a>, so to fix this, we must instead match on a tuple of the first and second elements of the array:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (burgers</span><span style="color:#79B8FF;">[0]</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> burgers</span><span style="color:#79B8FF;">[1]</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">cheaperBurger</span><span style="color:#E1E4E8;">)) </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Burger</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toPrice(cheaperBurger))</span></span>
<span class="line"><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (burgers</span><span style="color:#005CC5;">[0]</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> burgers</span><span style="color:#005CC5;">[1]</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#B31D28;">|</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">cheaperBurger</span><span style="color:#24292E;">)) </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Burger</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toPrice(cheaperBurger))</span></span>
<span class="line"><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">_</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#B31D28;">;</span></span></code></pre></div><h2 id="array-access-is-unsafe" tabindex="-1">Array access is unsafe <a class="header-anchor" href="#array-access-is-unsafe" aria-label="Permalink to &quot;Array access is unsafe&quot;">​</a></h2><p>The first and second tests now fail due to <code>index out of bounds</code> errors (since they work on arrays of length 0 and 1, respectively). Array access in OCaml is unsafe by default, so the simplest fix is to check the length of the array before using the switch expression:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line highlighted"><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Array</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">length(burgers) </span><span style="color:#FDAEB7;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (burgers</span><span style="color:#79B8FF;">[0]</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> burgers</span><span style="color:#79B8FF;">[1]</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">cheaperBurger</span><span style="color:#E1E4E8;">)) </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Burger</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toPrice(cheaperBurger))</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  )</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line highlighted"><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Array</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">length(burgers) </span><span style="color:#B31D28;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span></span>
<span class="line highlighted"><span style="color:#24292E;">  </span><span style="color:#B31D28;">?</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (burgers</span><span style="color:#005CC5;">[0]</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> burgers</span><span style="color:#005CC5;">[1]</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">cheaperBurger</span><span style="color:#24292E;">)) </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Burger</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toPrice(cheaperBurger))</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">_</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  )</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>An alternative approach is to catch the exception that gets raised using an <code>exception</code> branch inside the switch expression:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (burgers</span><span style="color:#79B8FF;">[0]</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> burgers</span><span style="color:#79B8FF;">[1]</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line highlighted"><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">exception</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span></span>
<span class="line"><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">cheaperBurger</span><span style="color:#E1E4E8;">)) </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Burger</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toPrice(cheaperBurger))</span></span>
<span class="line"><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (burgers</span><span style="color:#005CC5;">[0]</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> burgers</span><span style="color:#005CC5;">[1]</span><span style="color:#24292E;">) {</span></span>
<span class="line highlighted"><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">exception</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">_</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"><span style="color:#B31D28;">|</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">cheaperBurger</span><span style="color:#24292E;">)) </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Burger</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toPrice(cheaperBurger))</span></span>
<span class="line"><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">_</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#B31D28;">;</span></span></code></pre></div><h2 id="array-get-array-access-function" tabindex="-1"><code>Array.get</code> array access function <a class="header-anchor" href="#array-get-array-access-function" aria-label="Permalink to &quot;\`Array.get\` array access function&quot;">​</a></h2><p>In OCaml, the array access operator <code>[]</code> is just a function call. That is, <code>burger[0]</code> is completely equivalent to <code>Array.get(burger, 0)</code>.</p><p>Since the <a href="https://melange.re/v4.0.0/api/re/melange/Stdlib/" target="_blank" rel="noreferrer"><code>Stdlib</code> module is opened by default</a>, the <a href="https://melange.re/v4.0.0/api/re/melange/Stdlib/Array/#val-get" target="_blank" rel="noreferrer">Stdlib.Array.get</a> function is used for <code>Array.get</code>, but it’s possible to override this by defining our own <code>Array</code> module. Add a new file <code>src/order-confirmation/Array.re</code>:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Safe array access function</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">get</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> (</span><span style="color:#DBEDFF;">array</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">&#39;</span><span style="color:#79B8FF;">a</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">int</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">option</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">&#39;</span><span style="color:#79B8FF;">a</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">  (array</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> index) </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (index) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">index</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">when</span><span style="color:#E1E4E8;"> index </span><span style="color:#FDAEB7;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">||</span><span style="color:#E1E4E8;"> index </span><span style="color:#FDAEB7;">&gt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Array</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">length(array) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">index</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Stdlib</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Array</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">get(array</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> index))</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Safe array access function</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">get</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">array</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">&#39;</span><span style="color:#005CC5;">a</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">int</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">option</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">&#39;</span><span style="color:#005CC5;">a</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">  (array</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> index) </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (index) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">index</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">when</span><span style="color:#24292E;"> index </span><span style="color:#B31D28;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">||</span><span style="color:#24292E;"> index </span><span style="color:#B31D28;">&gt;=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Array</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">length(array) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">index</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Stdlib</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Array</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">get(array</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> index))</span></span>
<span class="line"><span style="color:#24292E;">    }</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>This function returns <code>None</code> if the <code>index</code> is out of bounds; otherwise it returns <code>Some(Stdlib.Array.get(array, index))</code>, i.e. the element at <code>index</code> encased by <code>Some</code>.</p><p>Introducing our own <code>Array</code> module triggers a new compilation error:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">File &quot;src/order-confirmation/Discount.re&quot;, line 18, characters 5-11:</span></span>
<span class="line"><span style="color:#e1e4e8;">18 |   | (Burger(_), Burger(cheaperBurger)) =&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">          ^^^^^^</span></span>
<span class="line"><span style="color:#e1e4e8;">Error: This variant pattern is expected to have type Item.t option</span></span>
<span class="line"><span style="color:#e1e4e8;">       There is no constructor Burger within type option</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">File &quot;src/order-confirmation/Discount.re&quot;, line 18, characters 5-11:</span></span>
<span class="line"><span style="color:#24292e;">18 |   | (Burger(_), Burger(cheaperBurger)) =&gt;</span></span>
<span class="line"><span style="color:#24292e;">          ^^^^^^</span></span>
<span class="line"><span style="color:#24292e;">Error: This variant pattern is expected to have type Item.t option</span></span>
<span class="line"><span style="color:#24292e;">       There is no constructor Burger within type option</span></span></code></pre></div><p>The “success” branch must now include <code>Some</code> in the pattern match:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (burgers</span><span style="color:#79B8FF;">[0]</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> burgers</span><span style="color:#79B8FF;">[1]</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line highlighted"><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">))</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">cheaperBurger</span><span style="color:#E1E4E8;">))) </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Burger</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toPrice(cheaperBurger))</span></span>
<span class="line"><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (burgers</span><span style="color:#005CC5;">[0]</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> burgers</span><span style="color:#005CC5;">[1]</span><span style="color:#24292E;">) {</span></span>
<span class="line highlighted"><span style="color:#B31D28;">|</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">))</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">cheaperBurger</span><span style="color:#24292E;">))) </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Burger</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toPrice(cheaperBurger))</span></span>
<span class="line"><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">_</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>Note that we no longer need to check the array length or catch an exception. Our new <code>Array.get</code> function is a safe function that returns <code>None</code> instead of raising an exception.</p><p>Your code should now compile and all unit tests should pass. If you haven’t done so already, run <code>npm run promote</code> to promote the latest test output to become the expected test output inside <code>tests.t</code>.</p><h2 id="variant-constructors-are-not-functions" tabindex="-1">Variant constructors are not functions <a class="header-anchor" href="#variant-constructors-are-not-functions" aria-label="Permalink to &quot;Variant constructors are not functions&quot;">​</a></h2><p>What happens if you to try to rewrite <code>Some(String.length(&quot;foobar&quot;))</code> to <code>&quot;foobar&quot; |&gt; String.length |&gt; Some</code>?</p><p>You’ll get a compilation error:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">Error This expression should not be a constructor, the expected type is int -&gt; &#39;a</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">Error This expression should not be a constructor, the expected type is int -&gt; &#39;a</span></span></code></pre></div><p>Variant constructors like <code>Some</code> are not functions, so they can’t be used with the pipe last (<code>|&gt;</code>) operator. If you have a long chain of function invocations but you need to return a variant at the end, consider using an extra variable, e.g.</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">  name</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">String</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">split_on_char(</span><span style="color:#79B8FF;">&#39; &#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">List</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">map(</span><span style="color:#B392F0;">String</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">map(c </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> c </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Char</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">code </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> (</span><span style="color:#FDAEB7;">+</span><span style="color:#E1E4E8;">)(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Char</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">chr))</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">String</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">concat(</span><span style="color:#DBEDFF;">&quot; &quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">String</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">cat(</span><span style="color:#DBEDFF;">&quot;Hello, &quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(result)</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">result</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">  name</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">String</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">split_on_char(</span><span style="color:#005CC5;">&#39; &#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">List</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">map(</span><span style="color:#6F42C1;">String</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">map(c </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> c </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Char</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">code </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> (</span><span style="color:#B31D28;">+</span><span style="color:#24292E;">)(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Char</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">chr))</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">String</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">concat(</span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">String</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">cat(</span><span style="color:#032F62;">&quot;Hello, &quot;</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(result)</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>See <a href="https://melange.re/v4.0.0/playground/?language=Reason&amp;code=bGV0IGNpcGhlckdyZWV0aW5nID0gbmFtZSA9PiB7CiAgc3dpdGNoIChTdHJpbmcudHJpbShuYW1lKSkgewogIHwgIiIgPT4gTm9uZQogIHwgbmFtZSA9PgogICAgbGV0IHJlc3VsdCA9CiAgICAgIG5hbWUKICAgICAgfD4gU3RyaW5nLnNwbGl0X29uX2NoYXIoJyAnKQogICAgICB8PiBMaXN0Lm1hcChTdHJpbmcubWFwKGMgPT4gYyB8PiBDaGFyLmNvZGUgfD4gKCspKDEpIHw%2BIENoYXIuY2hyKSkKICAgICAgfD4gU3RyaW5nLmNvbmNhdCgiICIpCiAgICAgIHw%2BIFN0cmluZy5jYXQoIkhlbGxvLCAiKTsKCiAgICBTb21lKHJlc3VsdCk7CiAgfTsKfTsKCkpzLmxvZyhjaXBoZXJHcmVldGluZygiIikpOwpKcy5sb2coY2lwaGVyR3JlZXRpbmcoIlhhdmllciBMZXJveSIpKTsK&amp;live=off" target="_blank" rel="noreferrer">full example on Melange Playground</a>.</p><p>When the variant type you’re using is <code>option</code>, though, you can still chain functions by using the <code>Option.some</code> helper function:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">name</span></span>
<span class="line"><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">String</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">split_on_char(</span><span style="color:#79B8FF;">&#39; &#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">List</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">map(</span><span style="color:#B392F0;">String</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">map(c </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> c </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Char</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">code </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> (</span><span style="color:#FDAEB7;">+</span><span style="color:#E1E4E8;">)(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Char</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">chr))</span></span>
<span class="line"><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">String</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">concat(</span><span style="color:#DBEDFF;">&quot; &quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">String</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">cat(</span><span style="color:#DBEDFF;">&quot;Hello, &quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Option</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">some</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">name</span></span>
<span class="line"><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">String</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">split_on_char(</span><span style="color:#005CC5;">&#39; &#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">List</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">map(</span><span style="color:#6F42C1;">String</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">map(c </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> c </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Char</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">code </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> (</span><span style="color:#B31D28;">+</span><span style="color:#24292E;">)(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Char</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">chr))</span></span>
<span class="line"><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">String</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">concat(</span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">String</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">cat(</span><span style="color:#032F62;">&quot;Hello, &quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Option</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">some</span><span style="color:#B31D28;">;</span></span></code></pre></div><hr><p>Nice, you’ve implemented the burger discount, and you also understand more about arrays in OCaml. In the next chapter, you’ll implement the same discount logic using lists, which are a better fit for this problem.</p><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><ul><li>Type inference is less effective inside functions that don’t call other functions. In those cases, you can give the compiler more information: <ul><li>Type annotate the function arguments</li><li>Use the full name for a value used inside the function</li></ul></li><li>The <code>Stdlib</code> module is opened by default</li><li>Records are immutable</li><li>Use record spread syntax to copy a record while changing some fields on the copied record, e.g. <code>{...burger, lettuce: true, onions: 3}</code></li><li>OCaml doesn’t allow you to ignore the return value of functions (unless the value is <code>()</code>), so you can use <code>Stdlib.ignore</code> to explicitly discard return values</li><li>Runtime representations of common data types: <ul><li>Variant constructor without argument → integer</li><li>Variant constructor with argument → JavaScript object</li><li>Record → JavaScript object</li><li>Array → JavaScript array</li><li><code>None</code> → <code>undefined</code></li><li><code>Some(value)</code> → <code>value</code></li></ul></li><li>Variant constructors are not functions</li><li>Array facts: <ul><li>Arrays are mutable, just like in JavaScript</li><li>You can pattern match on arrays of fixed length</li><li>Array access is unsafe by default</li><li>What looks like operator usage in <code>array[index]</code> is actually just a call to <code>Array.get(array, index)</code></li><li>You can create your own <code>Array</code> module to override the behavior of <code>Array.get</code></li></ul></li></ul><h2 id="exercises" tabindex="-1">Exercises <a class="header-anchor" href="#exercises" aria-label="Permalink to &quot;Exercises&quot;">​</a></h2><p><b>1.</b> <code>Discount.getFreeBurger</code> can be improved a bit. In particular, there’s no need to match on the <code>Burger</code> constructor when non-burger items have already been filtered out. Refactor the function so that the “success” pattern match looks like this:</p><div class="language-reason vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">reason</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">| </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(cheaperPrice) </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(cheaperPrice)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">| </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(cheaperPrice) </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(cheaperPrice)</span></span></code></pre></div><p>Also refactor the “failure” pattern match so there’s no wildcard.</p><details class="details custom-block"><summary>Hint</summary><p>Use <a href="https://melange.re/v4.0.0/api/re/melange/Js/Array/#val-map" target="_blank" rel="noreferrer">Js.Array.map</a></p></details><details class="details custom-block"><summary>Solution</summary><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Buy 2 burgers, get 1 free</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getFreeBurger</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (items</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">array</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#DBEDFF;">t</span><span style="color:#E1E4E8;">)) </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">prices</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    items</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Array</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">filter(~f</span><span style="color:#FDAEB7;">=</span><span style="color:#E1E4E8;">item </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (item) {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Hotdog</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">         }</span></span>
<span class="line"><span style="color:#E1E4E8;">       )</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Array</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">map(~f</span><span style="color:#FDAEB7;">=</span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toPrice)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Array</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">sortInPlaceWith(~f</span><span style="color:#FDAEB7;">=</span><span style="color:#E1E4E8;">(x</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> y) </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">-</span><span style="color:#E1E4E8;"> compare(x</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> y))</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (prices</span><span style="color:#79B8FF;">[1]</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">cheaperPrice</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(cheaperPrice)</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Buy 2 burgers, get 1 free</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getFreeBurger</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (items</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">array</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#032F62;">t</span><span style="color:#24292E;">)) </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">prices</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    items</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Array</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">filter(~f</span><span style="color:#B31D28;">=</span><span style="color:#24292E;">item </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (item) {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Hotdog</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">         }</span></span>
<span class="line"><span style="color:#24292E;">       )</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Array</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">map(~f</span><span style="color:#B31D28;">=</span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toPrice)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Array</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">sortInPlaceWith(~f</span><span style="color:#B31D28;">=</span><span style="color:#24292E;">(x</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> y) </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">-</span><span style="color:#24292E;"> compare(x</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> y))</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (prices</span><span style="color:#005CC5;">[1]</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">cheaperPrice</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(cheaperPrice)</span></span>
<span class="line"><span style="color:#24292E;">  }</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>Since the chain of function invocations now results in an array of <code>float</code>s, we rename the variable from <code>burgers</code> to <code>prices</code>. We only need to match on the second element of <code>prices</code> because if it exists, then a first element must also exist (but we don’t need to know its value).</p></details><p><b>2.</b> <code>Discount.getFreeBurger</code> can still be improved. Refactor it to remove the switch expression entirely.</p><details class="details custom-block"><summary>Solution</summary><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Buy 2 burgers, get 1 free</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getFreeBurger</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (items</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">array</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#DBEDFF;">t</span><span style="color:#E1E4E8;">)) </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">prices</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    items</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Array</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">filter(~f</span><span style="color:#FDAEB7;">=</span><span style="color:#E1E4E8;">item </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (item) {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Hotdog</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">         }</span></span>
<span class="line"><span style="color:#E1E4E8;">       )</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Array</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">map(~f</span><span style="color:#FDAEB7;">=</span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toPrice)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Array</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">sortInPlaceWith(~f</span><span style="color:#FDAEB7;">=</span><span style="color:#E1E4E8;">(x</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> y) </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">-</span><span style="color:#E1E4E8;"> compare(x</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> y))</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  prices</span><span style="color:#79B8FF;">[1]</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Buy 2 burgers, get 1 free</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getFreeBurger</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (items</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">array</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#032F62;">t</span><span style="color:#24292E;">)) </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">prices</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    items</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Array</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">filter(~f</span><span style="color:#B31D28;">=</span><span style="color:#24292E;">item </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (item) {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Hotdog</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">         }</span></span>
<span class="line"><span style="color:#24292E;">       )</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Array</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">map(~f</span><span style="color:#B31D28;">=</span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toPrice)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Array</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">sortInPlaceWith(~f</span><span style="color:#B31D28;">=</span><span style="color:#24292E;">(x</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> y) </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">-</span><span style="color:#24292E;"> compare(x</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> y))</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  prices</span><span style="color:#005CC5;">[1]</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#B31D28;">;</span></span></code></pre></div></details><p><b>3.</b> Add a new function <code>Discount.getHalfOff</code> that gives you a discount of half off the entire meal if there’s at least one burger that has one of every topping. Add these new tests to <code>DiscountTests</code> and make sure they pass:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">test(</span><span style="color:#DBEDFF;">&quot;No burger has 1 of every topping, return None&quot;</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">()</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  expect</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> equal(</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getHalfOff(</span><span style="color:#79B8FF;">[|</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">Hotdog</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Portabello</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">lettuce</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">tomatoes</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">cheese</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">onions</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">bacon</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">         })</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#79B8FF;">|]</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#79B8FF;">None</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">     )</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">test(</span><span style="color:#DBEDFF;">&quot;One burger has 1 of every topping, return Some&quot;</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">()</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">items</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">[|</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">Hotdog</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Portabello</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">lettuce</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">tomatoes</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">cheese</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">onions</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">bacon</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    })</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">|]</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  expect</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> equal(</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getHalfOff(items)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">       {</span></span>
<span class="line"><span style="color:#6A737D;">         // Don&#39;t use hardcoded value since Item.toPrice is non-deterministic</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">sum</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">           items</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Array</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">map(~f</span><span style="color:#FDAEB7;">=</span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toPrice)</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Array</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">reduce(~init</span><span style="color:#FDAEB7;">=</span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> ~f</span><span style="color:#FDAEB7;">=</span><span style="color:#E1E4E8;">(</span><span style="color:#FDAEB7;">+.</span><span style="color:#E1E4E8;">))</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(sum </span><span style="color:#FDAEB7;">/.</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">       }</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">     )</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">test(</span><span style="color:#032F62;">&quot;No burger has 1 of every topping, return None&quot;</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">()</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">  expect</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> equal(</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getHalfOff(</span><span style="color:#005CC5;">[|</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">Hotdog</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Portabello</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">lettuce</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">tomatoes</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">cheese</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">onions</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">bacon</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">         })</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#005CC5;">|]</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#005CC5;">None</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">     )</span></span>
<span class="line"><span style="color:#24292E;">)</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">test(</span><span style="color:#032F62;">&quot;One burger has 1 of every topping, return Some&quot;</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">()</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">items</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">[|</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">Hotdog</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Portabello</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">lettuce</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">tomatoes</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">cheese</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">onions</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">bacon</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    })</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">|]</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">  expect</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> equal(</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getHalfOff(items)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">       {</span></span>
<span class="line"><span style="color:#6A737D;">         // Don&#39;t use hardcoded value since Item.toPrice is non-deterministic</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sum</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">           items</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Array</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">map(~f</span><span style="color:#B31D28;">=</span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toPrice)</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Array</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">reduce(~init</span><span style="color:#B31D28;">=</span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> ~f</span><span style="color:#B31D28;">=</span><span style="color:#24292E;">(</span><span style="color:#B31D28;">+.</span><span style="color:#24292E;">))</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(sum </span><span style="color:#B31D28;">/.</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">       }</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">     )</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">})</span><span style="color:#B31D28;">;</span></span></code></pre></div><details class="details custom-block"><summary>Hint</summary><p>Use <a href="https://melange.re/v4.0.0/api/re/melange/Js/Array/#val-some" target="_blank" rel="noreferrer">Js.Array.some</a></p></details><details class="details custom-block"><summary>Solution</summary><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Buy 1+ burger with 1 of every topping, get half off</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getHalfOff</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (items</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">array</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#DBEDFF;">t</span><span style="color:#E1E4E8;">)) </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">meetsCondition</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    items</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Array</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">some(</span></span>
<span class="line"><span style="color:#E1E4E8;">         ~f</span><span style="color:#FDAEB7;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#F97583;">fun</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">               </span><span style="color:#B392F0;">lettuce</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">               </span><span style="color:#B392F0;">tomatoes</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">               </span><span style="color:#B392F0;">onions</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">               </span><span style="color:#B392F0;">cheese</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">               </span><span style="color:#B392F0;">bacon</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">             }) </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">             </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Hotdog</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">       )</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (meetsCondition) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">total</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      items</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Array</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">reduce(~init</span><span style="color:#FDAEB7;">=</span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> ~f</span><span style="color:#FDAEB7;">=</span><span style="color:#E1E4E8;">(total</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> item) </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">           total </span><span style="color:#FDAEB7;">+.</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toPrice(item)</span></span>
<span class="line"><span style="color:#E1E4E8;">         )</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(total </span><span style="color:#FDAEB7;">/.</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Buy 1+ burger with 1 of every topping, get half off</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getHalfOff</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (items</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">array</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#032F62;">t</span><span style="color:#24292E;">)) </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">meetsCondition</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    items</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Array</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">some(</span></span>
<span class="line"><span style="color:#24292E;">         ~f</span><span style="color:#B31D28;">=</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#D73A49;">fun</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">               </span><span style="color:#6F42C1;">lettuce</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">               </span><span style="color:#6F42C1;">tomatoes</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">               </span><span style="color:#6F42C1;">onions</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">               </span><span style="color:#6F42C1;">cheese</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">               </span><span style="color:#6F42C1;">bacon</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">             }) </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">             </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Hotdog</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">       )</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (meetsCondition) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">total</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      items</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Array</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">reduce(~init</span><span style="color:#B31D28;">=</span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> ~f</span><span style="color:#B31D28;">=</span><span style="color:#24292E;">(total</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> item) </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">           total </span><span style="color:#B31D28;">+.</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toPrice(item)</span></span>
<span class="line"><span style="color:#24292E;">         )</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(total </span><span style="color:#B31D28;">/.</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#B31D28;">;</span></span></code></pre></div></details><p><b>4.</b> Update <code>Discount.getHalfOff</code> so that it returns a discount of one half off the entire meal if there’s at least one burger that has <strong>at least</strong> one of every topping. While you’re at it, update the relevant tests in <code>DiscountTests</code>:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#FDAEB7;">module</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">HalfOff</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  test(&quot;No burger has 1+ of every topping, return None&quot;, () =&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    expect</span></span>
<span class="line"><span style="color:#E1E4E8;">    |&gt; equal(</span></span>
<span class="line"><span style="color:#E1E4E8;">         Discount.getHalfOff([|</span></span>
<span class="line"><span style="color:#E1E4E8;">           Hotdog,</span></span>
<span class="line"><span style="color:#E1E4E8;">           Sandwich(Portabello),</span></span>
<span class="line"><span style="color:#E1E4E8;">           Burger({</span></span>
<span class="line"><span style="color:#E1E4E8;">             lettuce: true,</span></span>
<span class="line"><span style="color:#E1E4E8;">             tomatoes: true,</span></span>
<span class="line"><span style="color:#E1E4E8;">             cheese: 1,</span></span>
<span class="line"><span style="color:#E1E4E8;">             onions: 1,</span></span>
<span class="line"><span style="color:#E1E4E8;">             bacon: 0,</span></span>
<span class="line"><span style="color:#E1E4E8;">           }),</span></span>
<span class="line"><span style="color:#E1E4E8;">         |]),</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#B392F0;">None</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">       )</span></span>
<span class="line"><span style="color:#E1E4E8;">  )</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  test(</span><span style="color:#DBEDFF;">&quot;One burger has 1+ of every topping, return Some&quot;</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">()</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">items</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">[|</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">Hotdog</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Portabello</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">lettuce</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">tomatoes</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">cheese</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">onions</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">bacon</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      })</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">|]</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    expect</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> equal(</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getHalfOff(items)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">         {</span></span>
<span class="line"><span style="color:#6A737D;">           // Don&#39;t use hardcoded value since Item.toPrice is non-deterministic</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">sum</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">             items</span></span>
<span class="line"><span style="color:#E1E4E8;">             </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Array</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">map(~f</span><span style="color:#FDAEB7;">=</span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toPrice)</span></span>
<span class="line"><span style="color:#E1E4E8;">             </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Array</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">reduce(~init</span><span style="color:#FDAEB7;">=</span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> ~f</span><span style="color:#FDAEB7;">=</span><span style="color:#E1E4E8;">(</span><span style="color:#FDAEB7;">+.</span><span style="color:#E1E4E8;">))</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(sum </span><span style="color:#FDAEB7;">/.</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">         }</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">       )</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  })</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#B31D28;">module</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">HalfOff</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  test(&quot;No burger has 1+ of every topping, return None&quot;, () =&gt;</span></span>
<span class="line"><span style="color:#24292E;">    expect</span></span>
<span class="line"><span style="color:#24292E;">    |&gt; equal(</span></span>
<span class="line"><span style="color:#24292E;">         Discount.getHalfOff([|</span></span>
<span class="line"><span style="color:#24292E;">           Hotdog,</span></span>
<span class="line"><span style="color:#24292E;">           Sandwich(Portabello),</span></span>
<span class="line"><span style="color:#24292E;">           Burger({</span></span>
<span class="line"><span style="color:#24292E;">             lettuce: true,</span></span>
<span class="line"><span style="color:#24292E;">             tomatoes: true,</span></span>
<span class="line"><span style="color:#24292E;">             cheese: 1,</span></span>
<span class="line"><span style="color:#24292E;">             onions: 1,</span></span>
<span class="line"><span style="color:#24292E;">             bacon: 0,</span></span>
<span class="line"><span style="color:#24292E;">           }),</span></span>
<span class="line"><span style="color:#24292E;">         |]),</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6F42C1;">None</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">       )</span></span>
<span class="line"><span style="color:#24292E;">  )</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  test(</span><span style="color:#032F62;">&quot;One burger has 1+ of every topping, return Some&quot;</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">()</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">items</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">[|</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">Hotdog</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Portabello</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">lettuce</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">tomatoes</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">cheese</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">onions</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">bacon</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">      })</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">|]</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">    expect</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> equal(</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getHalfOff(items)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">         {</span></span>
<span class="line"><span style="color:#6A737D;">           // Don&#39;t use hardcoded value since Item.toPrice is non-deterministic</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sum</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">             items</span></span>
<span class="line"><span style="color:#24292E;">             </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Array</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">map(~f</span><span style="color:#B31D28;">=</span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toPrice)</span></span>
<span class="line"><span style="color:#24292E;">             </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Array</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">reduce(~init</span><span style="color:#B31D28;">=</span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> ~f</span><span style="color:#B31D28;">=</span><span style="color:#24292E;">(</span><span style="color:#B31D28;">+.</span><span style="color:#24292E;">))</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(sum </span><span style="color:#B31D28;">/.</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">         }</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">       )</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">  })</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>Note the use of submodule <code>HalfOff</code> to group these two tests together.</p><details class="details custom-block"><summary>Hint</summary><p>Use <a href="https://reasonml.github.io/docs/en/pattern-matching#when" target="_blank" rel="noreferrer">when</a> guard</p></details><details class="details custom-block"><summary>Solution</summary><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Buy 1+ burger with 1+ of every topping, get half off</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getHalfOff</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (items</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">array</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#DBEDFF;">t</span><span style="color:#E1E4E8;">)) </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">meetsCondition</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    items</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Array</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">some(</span></span>
<span class="line"><span style="color:#E1E4E8;">         ~f</span><span style="color:#FDAEB7;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#F97583;">fun</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">               </span><span style="color:#B392F0;">lettuce</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">               </span><span style="color:#B392F0;">tomatoes</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">               </span><span style="color:#B392F0;">onions</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">               </span><span style="color:#B392F0;">cheese</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">               </span><span style="color:#B392F0;">bacon</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">             })</span></span>
<span class="line"><span style="color:#E1E4E8;">               </span><span style="color:#79B8FF;">when</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">onions</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> &amp;&amp; </span><span style="color:#79B8FF;">cheese</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> &amp;&amp; </span><span style="color:#79B8FF;">bacon</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">             </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Hotdog</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">       )</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (meetsCondition) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">total</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      items</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Array</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">reduce(~init</span><span style="color:#FDAEB7;">=</span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> ~f</span><span style="color:#FDAEB7;">=</span><span style="color:#E1E4E8;">(total</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> item) </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">           total </span><span style="color:#FDAEB7;">+.</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toPrice(item)</span></span>
<span class="line"><span style="color:#E1E4E8;">         )</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(total </span><span style="color:#FDAEB7;">/.</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Buy 1+ burger with 1+ of every topping, get half off</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getHalfOff</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (items</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">array</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#032F62;">t</span><span style="color:#24292E;">)) </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">meetsCondition</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    items</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Array</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">some(</span></span>
<span class="line"><span style="color:#24292E;">         ~f</span><span style="color:#B31D28;">=</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#D73A49;">fun</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">               </span><span style="color:#6F42C1;">lettuce</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">               </span><span style="color:#6F42C1;">tomatoes</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">               </span><span style="color:#6F42C1;">onions</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">               </span><span style="color:#6F42C1;">cheese</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">               </span><span style="color:#6F42C1;">bacon</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">             })</span></span>
<span class="line"><span style="color:#24292E;">               </span><span style="color:#005CC5;">when</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">onions</span><span style="color:#24292E;"> &gt; </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> &amp;&amp; </span><span style="color:#005CC5;">cheese</span><span style="color:#24292E;"> &gt; </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> &amp;&amp; </span><span style="color:#005CC5;">bacon</span><span style="color:#24292E;"> &gt; </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">             </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Hotdog</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">       )</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (meetsCondition) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">total</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      items</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Array</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">reduce(~init</span><span style="color:#B31D28;">=</span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> ~f</span><span style="color:#B31D28;">=</span><span style="color:#24292E;">(total</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> item) </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">           total </span><span style="color:#B31D28;">+.</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toPrice(item)</span></span>
<span class="line"><span style="color:#24292E;">         )</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(total </span><span style="color:#B31D28;">/.</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#B31D28;">;</span></span></code></pre></div></details><hr><p>View <a href="https://github.com/melange-re/melange-for-react-devs/blob/main/src/burger-discounts/" target="_blank" rel="noreferrer">source code</a> and <a href="https://react-book.melange.re/demo/src/burger-discounts/" target="_blank" rel="noreferrer">demo</a> for this chapter.</p><hr><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>The official term for something like <code>Item.Burger</code> (module name followed by value name) is <a href="https://ocaml.org/manual/5.2/names.html#sss:refer-named" target="_blank" rel="noreferrer">access path</a>, but this term isn’t widely used. <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p>Another valid way to discard the return value of a function is:</p><div class="language-reason vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">reason</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">_</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">option</span><span style="color:#E1E4E8;">(</span><span style="color:#DBEDFF;">float</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getFreeBurger(items)</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">_</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">option</span><span style="color:#24292E;">(</span><span style="color:#032F62;">float</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getFreeBurger(items)</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>This works, but <code>ignore</code> is more explicit and therefore the recommended approach. <a href="#fnref2" class="footnote-backref">↩︎</a></p></li><li id="fn3" class="footnote-item"><p>Technically <a href="https://melange.re/v4.0.0/api/re/melange/Stdlib/Option/#type-t" target="_blank" rel="noreferrer"><code>option</code> is a variant</a>, but Melange treats them as a special case—<code>option</code> values are never represented as JS objects in the runtime. <a href="#fnref3" class="footnote-backref">↩︎</a></p></li></ol></section>`,127),e=[o];function t(c,r,y,E,i,B){return n(),a("div",null,e)}const d=s(p,[["render",t]]);export{D as __pageData,d as default};
