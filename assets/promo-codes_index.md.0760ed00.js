import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.0e8ae64e.js";const d=JSON.parse('{"title":"Promo Codes","description":"","frontmatter":{},"headers":[],"relativePath":"promo-codes/index.md","filePath":"promo-codes/index.md","lastUpdated":1719022376000}'),o={name:"promo-codes/index.md"},p=l(`<h1 id="promo-codes" tabindex="-1">Promo Codes <a class="header-anchor" href="#promo-codes" aria-label="Permalink to &quot;Promo Codes&quot;">​</a></h1><p>As International Burger Day looms ever closer, Madame Jellobutter is eager to start her burger-related promotions. She bought ads on local billboards and she even wore a giant burger costume to pass out flyers at a local music festival<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>. Depending on the ad, potential customers will either see the promo code FREE, which corresponds to the “buy n burgers, get n/2 burgers free” discount, or HALF, which corresponds to the “buy a burger with everything on it and get half off the entire order” discount.</p><h2 id="getdiscountfunction-function" tabindex="-1"><code>getDiscountFunction</code> function <a class="header-anchor" href="#getdiscountfunction-function" aria-label="Permalink to &quot;\`getDiscountFunction\` function&quot;">​</a></h2><p>Add a new function that maps a given promo code to its corresponding discount function:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getDiscountFunction</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> code </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (code </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">String</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toUpperCase) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;FREE&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(getFreeBurgers)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;HALF&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(getHalfOff)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getDiscountFunction</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> code </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (code </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">String</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toUpperCase) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;FREE&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(getFreeBurgers)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;HALF&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(getHalfOff)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">_</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"><span style="color:#24292E;">  }</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>Instead of <a href="https://melange.re/v4.0.0/api/re/melange/Js/String/#val-toLowerCase" target="_blank" rel="noreferrer">Js.String.toUpperCase</a>, we could’ve used <a href="https://melange.re/v4.0.0/api/re/melange/Stdlib/String/#val-uppercase_ascii" target="_blank" rel="noreferrer">String.uppercase_ascii</a>, but as its name implies, <code>String.uppercase_ascii</code> can only handle strings containing ASCII characters. This is a common restriction for functions in the <a href="https://melange.re/v4.0.0/api/re/melange/Stdlib/String/" target="_blank" rel="noreferrer">Stdlib.String</a> module, so for most string operations, you should prefer the functions in <a href="https://melange.re/v4.0.0/api/re/melange/Js/String/" target="_blank" rel="noreferrer">Js.String</a>.</p><p>Madame Jellobutter informs you that the FREE promotion is only active during the month of May, so you change <code>Discount.getDiscountFunction</code> accordingly:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line highlighted"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getDiscountFunction</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (code</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> date) </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">month</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> date </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Date</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getMonth</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (code </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">String</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toUpperCase) {</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;FREE&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">when</span><span style="color:#E1E4E8;"> month </span><span style="color:#FDAEB7;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(getFreeBurgers)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;HALF&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(getHalfOff)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line highlighted"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getDiscountFunction</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (code</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> date) </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">month</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> date </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Date</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getMonth</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (code </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">String</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toUpperCase) {</span></span>
<span class="line highlighted"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;FREE&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">when</span><span style="color:#24292E;"> month </span><span style="color:#B31D28;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(getFreeBurgers)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;HALF&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(getHalfOff)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">_</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"><span style="color:#24292E;">  }</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#B31D28;">;</span></span></code></pre></div><h2 id="result-type" tabindex="-1"><code>result</code> type <a class="header-anchor" href="#result-type" aria-label="Permalink to &quot;\`result\` type&quot;">​</a></h2><p>The function now takes a <code>date</code> argument and returns <code>None</code> if the promo code is FREE and the given date isn’t within the month of May. This logic is correct, but there’s still a flaw: when an error occurs, there’s no way to inform the user of the reason for error. Whether the user misspells the promo code or enters it on June 1, the only feedback they’d get is that it doesn’t work, but they wouldn’t know why. We can remedy this by returning <code>result</code> instead of <code>option</code>:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getDiscountFunction</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (code</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> date) </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">month</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> date </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Date</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getMonth</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (code </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">String</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toUpperCase) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;FREE&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">when</span><span style="color:#E1E4E8;"> month </span><span style="color:#FDAEB7;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Ok</span><span style="color:#E1E4E8;">(getFreeBurgers)</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;FREE&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#DBEDFF;">&quot;Expired code&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;HALF&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Ok</span><span style="color:#E1E4E8;">(getHalfOff)</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#DBEDFF;">&quot;Invalid code&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getDiscountFunction</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (code</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> date) </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">month</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> date </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Date</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getMonth</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (code </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">String</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toUpperCase) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;FREE&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">when</span><span style="color:#24292E;"> month </span><span style="color:#B31D28;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Ok</span><span style="color:#24292E;">(getFreeBurgers)</span></span>
<span class="line highlighted"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;FREE&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Error</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Expired code&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;HALF&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Ok</span><span style="color:#24292E;">(getHalfOff)</span></span>
<span class="line highlighted"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">_</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Error</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Invalid code&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  }</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#B31D28;">;</span></span></code></pre></div><h2 id="option-vs-result" tabindex="-1"><code>option</code> vs <code>result</code> <a class="header-anchor" href="#option-vs-result" aria-label="Permalink to &quot;\`option\` vs \`result\`&quot;">​</a></h2><p>Other than the name, the <code>Ok</code> constructor of <code>result</code> is semantically equivalent to the <code>Some</code> constructor of <code>option</code>. So the main difference is that the <code>Error</code> constructor of <code>result</code> takes an argument, while the <code>None</code> constructor of <code>option</code> cannot take an argument. In short, <code>None</code> can only signal that there’s an error, but <code>Error</code> can signal <strong>what the error is</strong>.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>We don’t need to type annotate anything when using the <code>Ok</code> and <code>Error</code> constructors because they are always in scope, due to the <a href="https://melange.re/v4.0.0/api/re/melange/Stdlib/#type-result" target="_blank" rel="noreferrer">result type</a> being defined in <code>Stdlib</code> (which is open by default).</p></div><h2 id="test-for-invalid-promo-codes" tabindex="-1">Test for invalid promo codes <a class="header-anchor" href="#test-for-invalid-promo-codes" aria-label="Permalink to &quot;Test for invalid promo codes&quot;">​</a></h2><p>Add tests for <code>Discount.getDiscountFunction</code> in a new submodule called <code>DiscountTests.GetDiscount</code>:</p><div class="language-reason vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">reason</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#FDAEB7;">module</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">GetDiscount</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  test(&quot;Invalid promo code return Error&quot;, () =&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">date</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Date</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">make</span><span style="color:#79B8FF;">()</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    [&quot;&quot;, &quot;FREEDOM&quot;, &quot;UNICORN&quot;, &quot;POO&quot;]</span></span>
<span class="line"><span style="color:#E1E4E8;">    |&gt; List.map(code =&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">         expect</span></span>
<span class="line"><span style="color:#E1E4E8;">         |&gt; equal(</span></span>
<span class="line"><span style="color:#E1E4E8;">              Discount.getDiscountFunction(code, date),</span></span>
<span class="line"><span style="color:#E1E4E8;">              Error(&quot;Invalid code&quot;),</span></span>
<span class="line"><span style="color:#E1E4E8;">            )</span></span>
<span class="line"><span style="color:#E1E4E8;">       );</span></span>
<span class="line"><span style="color:#E1E4E8;">  })</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#B31D28;">module</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">GetDiscount</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  test(&quot;Invalid promo code return Error&quot;, () =&gt; {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">date</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Date</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">make</span><span style="color:#005CC5;">()</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">    [&quot;&quot;, &quot;FREEDOM&quot;, &quot;UNICORN&quot;, &quot;POO&quot;]</span></span>
<span class="line"><span style="color:#24292E;">    |&gt; List.map(code =&gt;</span></span>
<span class="line"><span style="color:#24292E;">         expect</span></span>
<span class="line"><span style="color:#24292E;">         |&gt; equal(</span></span>
<span class="line"><span style="color:#24292E;">              Discount.getDiscountFunction(code, date),</span></span>
<span class="line"><span style="color:#24292E;">              Error(&quot;Invalid code&quot;),</span></span>
<span class="line"><span style="color:#24292E;">            )</span></span>
<span class="line"><span style="color:#24292E;">       );</span></span>
<span class="line"><span style="color:#24292E;">  })</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>Here we iterate over a few invalid promo codes using <code>List.map</code> and check that <code>getDiscountFunction</code> returns <code>Error(&quot;Invalid code&quot;)</code> for all of them.</p><h2 id="native-syntax-in-error-messages" tabindex="-1">Native syntax in error messages <a class="header-anchor" href="#native-syntax-in-error-messages" aria-label="Permalink to &quot;Native syntax in error messages&quot;">​</a></h2><p>Regrettably, this code doesn’t compile:</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">File &quot;docs/order-confirmation/DiscountTests.re&quot;, lines 7-14, characters 4-9:</span></span>
<span class="line"><span style="color:#e1e4e8;"> 7 | ....[&quot;&quot;, &quot;FREEDOM&quot;, &quot;UNICORN&quot;, &quot;POO&quot;]</span></span>
<span class="line"><span style="color:#e1e4e8;"> 8 |     |&gt; List.map(code =&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;"> 9 |          expect</span></span>
<span class="line"><span style="color:#e1e4e8;">10 |          |&gt; equal(</span></span>
<span class="line"><span style="color:#e1e4e8;">11 |               Discount.getDiscountFunction(code, date),</span></span>
<span class="line"><span style="color:#e1e4e8;">12 |               Error(&quot;Invalid code&quot;),</span></span>
<span class="line"><span style="color:#e1e4e8;">13 |             )</span></span>
<span class="line"><span style="color:#e1e4e8;">14 |        );</span></span>
<span class="line"><span style="color:#e1e4e8;">Error: This expression has type unit list</span></span>
<span class="line"><span style="color:#e1e4e8;">       but an expression was expected of type unit</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">File &quot;docs/order-confirmation/DiscountTests.re&quot;, lines 7-14, characters 4-9:</span></span>
<span class="line"><span style="color:#24292e;"> 7 | ....[&quot;&quot;, &quot;FREEDOM&quot;, &quot;UNICORN&quot;, &quot;POO&quot;]</span></span>
<span class="line"><span style="color:#24292e;"> 8 |     |&gt; List.map(code =&gt;</span></span>
<span class="line"><span style="color:#24292e;"> 9 |          expect</span></span>
<span class="line"><span style="color:#24292e;">10 |          |&gt; equal(</span></span>
<span class="line"><span style="color:#24292e;">11 |               Discount.getDiscountFunction(code, date),</span></span>
<span class="line"><span style="color:#24292e;">12 |               Error(&quot;Invalid code&quot;),</span></span>
<span class="line"><span style="color:#24292e;">13 |             )</span></span>
<span class="line"><span style="color:#24292e;">14 |        );</span></span>
<span class="line"><span style="color:#24292e;">Error: This expression has type unit list</span></span>
<span class="line"><span style="color:#24292e;">       but an expression was expected of type unit</span></span></code></pre></div><p>This error message might seem a little cryptic because it’s using native OCaml syntax and not the Reason syntax that we cover in this book. For reference, this is how the type notations map between native and Reason syntaxes:</p><table><thead><tr><th>Native syntax</th><th>Reason syntax</th></tr></thead><tbody><tr><td><code>unit list</code></td><td><code>list(unit)</code></td></tr><tr><td><code>float option</code></td><td><code>option(float)</code></td></tr><tr><td><code>int option list</code></td><td><code>list(option(int))</code></td></tr></tbody></table><p>Basically, when you see nested types in error messages, reverse the order of the types and add parentheses to translate it from native to Reason syntax.</p><h2 id="list-iter-function" tabindex="-1"><code>List.iter</code> function <a class="header-anchor" href="#list-iter-function" aria-label="Permalink to &quot;\`List.iter\` function&quot;">​</a></h2><p>Returning to the error message, if we translate it to Reason syntax, it’s saying:</p><blockquote><p>Error: This expression has type <code>list(unit)</code> but an expression was expected of type <code>unit</code></p></blockquote><p>Recall that OCaml considers it an error if we generate a value but don’t do anything with it. So the easiest way to fix this is by purposefully discarding the value using <code>ignore</code>:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">[</span><span style="color:#DBEDFF;">&quot;&quot;</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;FREEDOM&quot;</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;UNICORN&quot;</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;POO&quot;</span><span style="color:#79B8FF;">]</span></span>
<span class="line"><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">List</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">map(code </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">     expect</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> equal(</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getDiscountFunction(code</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> date)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#DBEDFF;">&quot;Invalid code&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        )</span></span>
<span class="line"><span style="color:#E1E4E8;">   )</span></span>
<span class="line diff add"><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">ignore;</span><span style="color:#E1E4E8;"> </span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#005CC5;">[</span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;FREEDOM&quot;</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;UNICORN&quot;</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;POO&quot;</span><span style="color:#005CC5;">]</span></span>
<span class="line"><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">List</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">map(code </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">     expect</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> equal(</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getDiscountFunction(code</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> date)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#005CC5;">Error</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Invalid code&quot;</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">        )</span></span>
<span class="line"><span style="color:#24292E;">   )</span></span>
<span class="line diff add"><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">ignore;</span><span style="color:#24292E;"> </span></span></code></pre></div><p>An even better solution would be to use <a href="https://melange.re/v4.0.0/api/re/melange/Stdlib/List/#val-iter" target="_blank" rel="noreferrer">List.iter</a>:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">[</span><span style="color:#DBEDFF;">&quot;&quot;</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;FREEDOM&quot;</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;UNICORN&quot;</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;POO&quot;</span><span style="color:#79B8FF;">]</span></span>
<span class="line highlighted"><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">List</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">iter(code </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">     expect</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> equal(</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getDiscountFunction(code</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> date)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#DBEDFF;">&quot;Invalid code&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        )</span></span>
<span class="line"><span style="color:#E1E4E8;">   )</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#005CC5;">[</span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;FREEDOM&quot;</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;UNICORN&quot;</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;POO&quot;</span><span style="color:#005CC5;">]</span></span>
<span class="line highlighted"><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">List</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">iter(code </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">     expect</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> equal(</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getDiscountFunction(code</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> date)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#005CC5;">Error</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Invalid code&quot;</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">        )</span></span>
<span class="line"><span style="color:#24292E;">   )</span><span style="color:#B31D28;">;</span></span></code></pre></div><p><code>List.iter</code> runs a side-effect function on each element of a list, and it returns <code>unit</code>, which doesn’t need to be ignored.</p><h2 id="runtime-representation-of-result" tabindex="-1">Runtime representation of <code>result</code> <a class="header-anchor" href="#runtime-representation-of-result" aria-label="Permalink to &quot;Runtime representation of \`result\`&quot;">​</a></h2><p>Run the tests (<code>npm run test</code>) and you’ll get an error (truncated for clarity):</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">+      Values have same structure but are not reference-equal:</span></span>
<span class="line"><span style="color:#85E89D;">+</span></span>
<span class="line"><span style="color:#85E89D;">+      {</span></span>
<span class="line"><span style="color:#85E89D;">+        TAG: 1,</span></span>
<span class="line"><span style="color:#85E89D;">+        _0: &#39;Invalid code&#39;</span></span>
<span class="line"><span style="color:#85E89D;">+      }</span></span>
<span class="line"><span style="color:#85E89D;">+</span></span>
<span class="line"><span style="color:#85E89D;">+    code: &#39;ERR_ASSERTION&#39;</span></span>
<span class="line"><span style="color:#85E89D;">+    name: &#39;AssertionError&#39;</span></span>
<span class="line"><span style="color:#85E89D;">+    expected:</span></span>
<span class="line"><span style="color:#85E89D;">+      TAG: 1</span></span>
<span class="line"><span style="color:#85E89D;">+      _0: &#39;Invalid code&#39;</span></span>
<span class="line"><span style="color:#85E89D;">+    actual:</span></span>
<span class="line"><span style="color:#85E89D;">+      TAG: 1</span></span>
<span class="line"><span style="color:#85E89D;">+      _0: &#39;Invalid code&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">+      Values have same structure but are not reference-equal:</span></span>
<span class="line"><span style="color:#22863A;">+</span></span>
<span class="line"><span style="color:#22863A;">+      {</span></span>
<span class="line"><span style="color:#22863A;">+        TAG: 1,</span></span>
<span class="line"><span style="color:#22863A;">+        _0: &#39;Invalid code&#39;</span></span>
<span class="line"><span style="color:#22863A;">+      }</span></span>
<span class="line"><span style="color:#22863A;">+</span></span>
<span class="line"><span style="color:#22863A;">+    code: &#39;ERR_ASSERTION&#39;</span></span>
<span class="line"><span style="color:#22863A;">+    name: &#39;AssertionError&#39;</span></span>
<span class="line"><span style="color:#22863A;">+    expected:</span></span>
<span class="line"><span style="color:#22863A;">+      TAG: 1</span></span>
<span class="line"><span style="color:#22863A;">+      _0: &#39;Invalid code&#39;</span></span>
<span class="line"><span style="color:#22863A;">+    actual:</span></span>
<span class="line"><span style="color:#22863A;">+      TAG: 1</span></span>
<span class="line"><span style="color:#22863A;">+      _0: &#39;Invalid code&#39;</span></span></code></pre></div><p>The <code>result</code> type is a variant type with two constructors <code>Ok</code> and <code>Error</code>, and both of these constructors have an argument. This means that both of them are represented as objects in the JavaScript runtime, e.g.:</p><table><thead><tr><th>OCaml source</th><th>JavaScript runtime</th></tr></thead><tbody><tr><td><code>Ok(4567)</code></td><td><code>{TAG: 0, _0: 4567}</code></td></tr><tr><td><code>Error(&quot;Expired code&quot;)</code></td><td><code>{TAG: 1, _0: &quot;Expired code&quot;}</code></td></tr></tbody></table><p>Since we are comparing objects and not values, we must use <a href="https://ahrefs.github.io/melange-fest/reason/Fest/index.html#val-deepEqual" target="_blank" rel="noreferrer">Fest.deepEqual</a> instead of <a href="https://ahrefs.github.io/melange-fest/reason/Fest/index.html#val-equal" target="_blank" rel="noreferrer">Fest.equal</a>:</p><div class="language-reason vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">reason</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">expect</span></span>
<span class="line diff remove"><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> equal( </span></span>
<span class="line diff add"><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> deepEqual( </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getDiscountFunction(code</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> date)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#DBEDFF;">&quot;Invalid code&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  )</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#24292E;">expect</span></span>
<span class="line diff remove"><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> equal( </span></span>
<span class="line diff add"><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> deepEqual( </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getDiscountFunction(code</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> date)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Error</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Invalid code&quot;</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">  )</span></span></code></pre></div><h2 id="test-for-expired-promo-codes" tabindex="-1">Test for expired promo codes <a class="header-anchor" href="#test-for-expired-promo-codes" aria-label="Permalink to &quot;Test for expired promo codes&quot;">​</a></h2><p>Add a new test in <code>DiscountTests.GetDiscount</code> that checks the temporal behavior of <code>getDiscountFunction</code>:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">test(</span><span style="color:#DBEDFF;">&quot;FREE promo code works in May but not other months&quot;</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">()</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">month</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">to</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">11</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">date</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Date</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">makeWithYMD(</span></span>
<span class="line"><span style="color:#E1E4E8;">        ~year</span><span style="color:#FDAEB7;">=</span><span style="color:#79B8FF;">2024</span><span style="color:#FDAEB7;">.,</span></span>
<span class="line"><span style="color:#E1E4E8;">        ~month</span><span style="color:#FDAEB7;">=</span><span style="color:#E1E4E8;">float_of_int(month)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        ~date</span><span style="color:#FDAEB7;">=</span><span style="color:#79B8FF;">10</span><span style="color:#FDAEB7;">.,</span></span>
<span class="line"><span style="color:#E1E4E8;">      )</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    expect</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> deepEqual(</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getDiscountFunction(</span><span style="color:#DBEDFF;">&quot;FREE&quot;</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> date)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">         month </span><span style="color:#FDAEB7;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Ok</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getFreeBurgers) </span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#DBEDFF;">&quot;Expired code&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">       )</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">test(</span><span style="color:#032F62;">&quot;FREE promo code works in May but not other months&quot;</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">()</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">month</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">to</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">11</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">date</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Date</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">makeWithYMD(</span></span>
<span class="line"><span style="color:#24292E;">        ~year</span><span style="color:#B31D28;">=</span><span style="color:#005CC5;">2024</span><span style="color:#B31D28;">.,</span></span>
<span class="line"><span style="color:#24292E;">        ~month</span><span style="color:#B31D28;">=</span><span style="color:#24292E;">float_of_int(month)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">        ~date</span><span style="color:#B31D28;">=</span><span style="color:#005CC5;">10</span><span style="color:#B31D28;">.,</span></span>
<span class="line"><span style="color:#24292E;">      )</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    expect</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> deepEqual(</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getDiscountFunction(</span><span style="color:#032F62;">&quot;FREE&quot;</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> date)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">         month </span><span style="color:#B31D28;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4</span><span style="color:#24292E;"> </span><span style="color:#E36209;">?</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Ok</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getFreeBurgers) </span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Error</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Expired code&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">       )</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">})</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>This test loops over every month of the year:</p><ul><li>If the month is May, then <code>Discount.getDiscountFunction(&quot;FREE&quot;, date)</code> should return <code>Ok(Discount.getFreeBurgers)</code></li><li>If the month isn’t May, then it should return <code>Error(&quot;Expired code&quot;)</code></li></ul><h2 id="for-loop" tabindex="-1">For loop <a class="header-anchor" href="#for-loop" aria-label="Permalink to &quot;For loop&quot;">​</a></h2><p>This is the first for loop we’ve seen so far! This is one of the few scenarios in OCaml where a for loop makes sense: iterating over a sequence of numbers and calling a side-effect function on each number.</p><h2 id="add-error-type" tabindex="-1">Add <code>error</code> type <a class="header-anchor" href="#add-error-type" aria-label="Permalink to &quot;Add \`error\` type&quot;">​</a></h2><p>Right now, <code>Discount.getDiscountFunction</code> returns two types of errors: <code>Error(&quot;Expired code&quot;)</code> and <code>Error(&quot;Invalid code&quot;)</code>, which have the same type. Our code will be less brittle if these two different kinds of errors also have different types. Add a new type <code>error</code> to <code>Discount</code>:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ExpiredCode</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">InvalidCode</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">type</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">error</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ExpiredCode</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">InvalidCode</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>After which you can update <code>Discount.getDiscountFunction</code> to use the new type inside the <code>Error</code> constructor:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getDiscountFunction</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (code</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> date) </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">month</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> date </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Date</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getMonth</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (code </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">String</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toUpperCase) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;FREE&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">when</span><span style="color:#E1E4E8;"> month </span><span style="color:#FDAEB7;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Ok</span><span style="color:#E1E4E8;">(getFreeBurgers)</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;FREE&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">ExpiredCode</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;HALF&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Ok</span><span style="color:#E1E4E8;">(getHalfOff)</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">InvalidCode</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getDiscountFunction</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (code</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> date) </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">month</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> date </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Date</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getMonth</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (code </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">String</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toUpperCase) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;FREE&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">when</span><span style="color:#24292E;"> month </span><span style="color:#B31D28;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Ok</span><span style="color:#24292E;">(getFreeBurgers)</span></span>
<span class="line highlighted"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;FREE&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Error</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">ExpiredCode</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;HALF&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Ok</span><span style="color:#24292E;">(getHalfOff)</span></span>
<span class="line highlighted"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">_</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Error</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">InvalidCode</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  }</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>Returning different error constructors encased by <code>Error</code> is the safe alternative to raising different exceptions.</p><h2 id="refactor-discount-functions" tabindex="-1">Refactor discount functions <a class="header-anchor" href="#refactor-discount-functions" aria-label="Permalink to &quot;Refactor discount functions&quot;">​</a></h2><p>Update <code>Discount.getFreeBurgers</code> to also use <code>result</code> instead of <code>option</code>:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getFreeBurgers</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (items</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">list</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#DBEDFF;">t</span><span style="color:#E1E4E8;">)) </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">prices</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    items</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">List</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">filter_map(item </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (item) {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">burger</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Burger</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toPrice(burger))</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Hotdog</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span></span>
<span class="line"><span style="color:#E1E4E8;">         }</span></span>
<span class="line"><span style="color:#E1E4E8;">       )</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (prices) {</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">[]</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#DBEDFF;">&quot;To enjoy this promo, buy at least 2 burgers&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">[</span><span style="color:#6A737D;">_</span><span style="color:#79B8FF;">]</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#DBEDFF;">&quot;To enjoy this promo, buy at least 1 more burger&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">prices</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      prices</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">List</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">sort((x</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> y) </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Float</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">compare(x</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> y))</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">List</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">filteri((index</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> _) </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> index </span><span style="color:#FDAEB7;">mod</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">List</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">fold_left((</span><span style="color:#FDAEB7;">+.</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">;</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Ok</span><span style="color:#E1E4E8;">(result)</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getFreeBurgers</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (items</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">list</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#032F62;">t</span><span style="color:#24292E;">)) </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">prices</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    items</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">List</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">filter_map(item </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (item) {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">burger</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Burger</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toPrice(burger))</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Hotdog</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"><span style="color:#24292E;">         }</span></span>
<span class="line"><span style="color:#24292E;">       )</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (prices) {</span></span>
<span class="line highlighted"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">[]</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Error</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;To enjoy this promo, buy at least 2 burgers&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line highlighted"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">[</span><span style="color:#6A737D;">_</span><span style="color:#005CC5;">]</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Error</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;To enjoy this promo, buy at least 1 more burger&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">prices</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">result</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      prices</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">List</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">sort((x</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> y) </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">-</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Float</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">compare(x</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> y))</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">List</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">filteri((index</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> _) </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> index </span><span style="color:#B31D28;">mod</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">List</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">fold_left((</span><span style="color:#B31D28;">+.</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">;</span></span>
<span class="line highlighted"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Ok</span><span style="color:#24292E;">(result)</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>This is a straightforward refactor, but to fix your tests, you would need to reproduce the error messages verbatim in <code>DiscountTests</code>, e.g.:</p><div class="language-reason vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">reason</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">test(</span><span style="color:#DBEDFF;">&quot;0 burgers, no discount&quot;</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">()</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  expect</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> equal(</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getFreeBurgers(</span><span style="color:#79B8FF;">[</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">Hotdog</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Ham</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Turducken</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">]</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#DBEDFF;">&quot;To enjoy this promo, buy at least 2 burgers&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      )</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">test(</span><span style="color:#032F62;">&quot;0 burgers, no discount&quot;</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">()</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">  expect</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> equal(</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getFreeBurgers(</span><span style="color:#005CC5;">[</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#005CC5;">Hotdog</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Ham</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Turducken</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">]</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">Error</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;To enjoy this promo, buy at least 2 burgers&quot;</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">      )</span></span>
<span class="line"><span style="color:#24292E;">)</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>You would need to change your tests every time the error message changes, which is annoying. But error messages don’t necessarily need to be inside <code>Discount.getFreeBurgers</code>, there should be a way to indicate what an error is without using the actual error message.</p><h2 id="polymorphic-variants" tabindex="-1">Polymorphic variants <a class="header-anchor" href="#polymorphic-variants" aria-label="Permalink to &quot;Polymorphic variants&quot;">​</a></h2><p>Instead of using a string as the argument for the <code>Error</code> constructor, you can instead use a <em>polymorphic variant</em>:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getFreeBurgers</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (items</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">list</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#DBEDFF;">t</span><span style="color:#E1E4E8;">)) </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">prices</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    items</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">List</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">filter_map(item </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (item) {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">burger</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Burger</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toPrice(burger))</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Hotdog</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span></span>
<span class="line"><span style="color:#E1E4E8;">         }</span></span>
<span class="line"><span style="color:#E1E4E8;">       )</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (prices) {</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">[]</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedTwoBurgers</span><span style="color:#E1E4E8;">)</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">[</span><span style="color:#6A737D;">_</span><span style="color:#79B8FF;">]</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedOneBurger</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">prices</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      prices</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">List</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">sort((x</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> y) </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Float</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">compare(x</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> y))</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">List</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">filteri((index</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> _) </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> index </span><span style="color:#FDAEB7;">mod</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">List</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">fold_left((</span><span style="color:#FDAEB7;">+.</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Ok</span><span style="color:#E1E4E8;">(result)</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getFreeBurgers</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (items</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">list</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#032F62;">t</span><span style="color:#24292E;">)) </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">prices</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    items</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">List</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">filter_map(item </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (item) {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">burger</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Burger</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toPrice(burger))</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Hotdog</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"><span style="color:#24292E;">         }</span></span>
<span class="line"><span style="color:#24292E;">       )</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (prices) {</span></span>
<span class="line highlighted"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">[]</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Error</span><span style="color:#24292E;">(</span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedTwoBurgers</span><span style="color:#24292E;">)</span></span>
<span class="line highlighted"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">[</span><span style="color:#6A737D;">_</span><span style="color:#005CC5;">]</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Error</span><span style="color:#24292E;">(</span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedOneBurger</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">prices</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">result</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      prices</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">List</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">sort((x</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> y) </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">-</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Float</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">compare(x</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> y))</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">List</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">filteri((index</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> _) </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> index </span><span style="color:#B31D28;">mod</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">List</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">fold_left((</span><span style="color:#B31D28;">+.</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Ok</span><span style="color:#24292E;">(result)</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>Polymorphic variants are similar to the variants you’ve seen before, the main difference being that you don’t need to define the <em>variant tags</em> beforehand. Instead, you can freely use variant tags (like <code> \`NeedTwoBurgers</code> and <code> \`NeedOneBurger</code>) inside a function, and the type of the function is inferred from the usage. For example, the type of <code>Discount.getFreeBurgers</code> is now</p><div class="language-reason vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">reason</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">list(</span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">t) </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> result(float</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">[</span><span style="color:#FDAEB7;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedOneBurger</span><span style="color:#E1E4E8;"> | </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedTwoBurgers</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">]</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">list(</span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">t) </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> result(float</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">[</span><span style="color:#B31D28;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedOneBurger</span><span style="color:#24292E;"> | </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedTwoBurgers</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">]</span><span style="color:#24292E;">)</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>The name of a variant tag must start with the backtick (<code>\`</code>) character.</p></div><p>Refactor <code>Discount.getHalfOff</code> to return <code>result</code> as well<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>:</p><div class="language-reason vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">reason</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (meetsCondition) {</span></span>
<span class="line diff remove"><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;"> </span></span>
<span class="line diff add"><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedMegaBurger</span><span style="color:#E1E4E8;">) </span></span>
<span class="line"><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">total</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    items</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ListLabels</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">fold_left(~init</span><span style="color:#FDAEB7;">=</span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> ~f</span><span style="color:#FDAEB7;">=</span><span style="color:#E1E4E8;">(total</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> item) </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">          total </span><span style="color:#FDAEB7;">+.</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toPrice(item)</span></span>
<span class="line"><span style="color:#E1E4E8;">        )</span><span style="color:#FDAEB7;">;</span></span>
<span class="line diff remove"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(total </span><span style="color:#FDAEB7;">/.</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">;</span><span style="color:#E1E4E8;"> </span></span>
<span class="line diff add"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">Ok</span><span style="color:#E1E4E8;">(total </span><span style="color:#FDAEB7;">/.</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">;</span><span style="color:#E1E4E8;"> </span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (meetsCondition) {</span></span>
<span class="line diff remove"><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;"> </span></span>
<span class="line diff add"><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Error</span><span style="color:#24292E;">(</span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedMegaBurger</span><span style="color:#24292E;">) </span></span>
<span class="line"><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">total</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    items</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ListLabels</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">fold_left(~init</span><span style="color:#B31D28;">=</span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> ~f</span><span style="color:#B31D28;">=</span><span style="color:#24292E;">(total</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> item) </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">          total </span><span style="color:#B31D28;">+.</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toPrice(item)</span></span>
<span class="line"><span style="color:#24292E;">        )</span><span style="color:#B31D28;">;</span></span>
<span class="line diff remove"><span style="color:#24292E;">  </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(total </span><span style="color:#B31D28;">/.</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">;</span><span style="color:#24292E;"> </span></span>
<span class="line diff add"><span style="color:#24292E;">  </span><span style="color:#005CC5;">Ok</span><span style="color:#24292E;">(total </span><span style="color:#B31D28;">/.</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">;</span><span style="color:#24292E;"> </span></span></code></pre></div><p>The type of <code>Discount.getHalfOff</code> is now</p><div class="language-reason vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">reason</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">list(</span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">t) </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> result(float</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">[</span><span style="color:#FDAEB7;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedMegaBurger</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">]</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">list(</span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">t) </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> result(float</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">[</span><span style="color:#B31D28;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedMegaBurger</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">]</span><span style="color:#24292E;">)</span></span></code></pre></div><h2 id="fixing-the-tests" tabindex="-1">Fixing the tests <a class="header-anchor" href="#fixing-the-tests" aria-label="Permalink to &quot;Fixing the tests&quot;">​</a></h2><p>Fixing the tests is mostly a mechanical effort and consists of these steps:</p><ul><li>Replace <code>Some</code> with <code>Ok</code></li><li>Replace <code>None</code> with <code>Error(\`SomeTag)</code></li><li>Replace <code>equal</code> with <code>deepEqual</code></li></ul><p>However, there is a little wrinkle. What if you misspell one of the variant tags?</p><div class="language-reason vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">reason</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">test(</span><span style="color:#DBEDFF;">&quot;1 burger, no discount&quot;</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">()</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  expect</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> deepEqual(</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getFreeBurgers(</span><span style="color:#79B8FF;">[Hotdog</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Ham</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">(burger)</span><span style="color:#79B8FF;">]</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">       </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">NeedOneBurgers</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">     )</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#24292E;">test(</span><span style="color:#032F62;">&quot;1 burger, no discount&quot;</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">()</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">  expect</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> deepEqual(</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getFreeBurgers(</span><span style="color:#005CC5;">[Hotdog</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Ham</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">(burger)</span><span style="color:#005CC5;">]</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line highlighted"><span style="color:#24292E;">       </span><span style="color:#005CC5;">Error</span><span style="color:#24292E;">(</span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">NeedOneBurgers</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">     )</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>The constructor should be called <code> \`NeedOneBurger</code> but here it’s been misspelled as <code> \`NeedOneBurgers</code>, yet it still compiles! This is due to the open-ended nature of polymorphic variants. The compiler knows that <code>Discount.getFreeBurgers</code> currently can’t return <code>Error(\`NeedOneBurgers)</code>, but because variant tags don’t need to be defined up-front, it has no way to know that the function will <strong>never</strong> return <code>Error(\`NeedOneBurgers)</code> in the future.</p><h2 id="runtime-representation-of-polymorphic-variants" tabindex="-1">Runtime representation of polymorphic variants <a class="header-anchor" href="#runtime-representation-of-polymorphic-variants" aria-label="Permalink to &quot;Runtime representation of polymorphic variants&quot;">​</a></h2><p>If you run the test with the misspelling, you’ll get this error (shortened for clarity):</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">+    expected:</span></span>
<span class="line"><span style="color:#85E89D;">+      TAG: 1</span></span>
<span class="line"><span style="color:#85E89D;">+      _0: &#39;NeedOneBurgers&#39;</span></span>
<span class="line"><span style="color:#85E89D;">+    actual:</span></span>
<span class="line"><span style="color:#85E89D;">+      TAG: 1</span></span>
<span class="line"><span style="color:#85E89D;">+      _0: &#39;NeedOneBurger&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">+    expected:</span></span>
<span class="line"><span style="color:#22863A;">+      TAG: 1</span></span>
<span class="line"><span style="color:#22863A;">+      _0: &#39;NeedOneBurgers&#39;</span></span>
<span class="line"><span style="color:#22863A;">+    actual:</span></span>
<span class="line"><span style="color:#22863A;">+      TAG: 1</span></span>
<span class="line"><span style="color:#22863A;">+      _0: &#39;NeedOneBurger&#39;</span></span></code></pre></div><p>You can see that variant tags without arguments are just strings in the JS runtime.</p><p>For reference, the runtime representation of a variant tag with an argument is an object with <code>NAME</code> and <code>VAL</code> fields. For example, <code> \`foo(42)</code> becomes <code>{&quot;NAME&quot;: &quot;foo&quot;, &quot;VAL&quot;: 42}</code>.</p><h2 id="variants-vs-polymorphic-variants" tabindex="-1">Variants vs polymorphic variants <a class="header-anchor" href="#variants-vs-polymorphic-variants" aria-label="Permalink to &quot;Variants vs polymorphic variants&quot;">​</a></h2><p>Variants are always going to be more reliable than polymorphic variants because you must define them using <code>type</code> before you can use them, meaning if you ever misspell a constructor, you’ll get an error. Polymorphic variants are more flexible and convenient but allow you to make silly mistakes. However, we will see in the next chapter that polymorphic variants are just as type-safe as variants.</p><hr><p>Espectáculo! You’ve made your discount logic more expressive by converting it to use <code>result</code> instead of <code>option</code>. You’ve also started to experience the power of polymorphic variants. In the next chapter, we’ll build a new ReasonReact component that uses our discount functions.</p><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><ul><li>The <code>result</code> type is similar to <code>option</code>, except that the “failure” constructor takes an argument <ul><li>The <code>Ok</code> constructor becomes an object in the JS runtime</li><li>The <code>Error</code> constructor becomes an object in the JS runtime</li><li>Inside tests, <code>result</code> values must be compared using <code>Fest.deepEqual</code></li></ul></li><li>Functions in the <code>Stdlib.String</code> module won’t always handle Unicode characters correctly, so prefer to use the functions in <code>Js.String</code></li><li>Compilation error messages use OCaml’s native syntax when describing types <ul><li>Convert from native to Reason syntax by reversing the order of the types and inserting parentheses between them</li></ul></li><li><code>List.iter</code> is useful for running a side-effect function on every element of a list. It’s better than <code>List.map</code> for this use case because the return value doesn’t need to be <code>ignore</code>d.</li><li>For loops are useful for the narrow use case of running a side-effect function on a sequence of numbers</li><li>Polymorphic variants are like the variants we’ve already seen but with some differences: <ul><li>The variant tags don’t need to defined before they are used</li><li>A tag must start with the backtick (<code>\`</code>) character</li><li>A variant tag without arguments becomes a string in the JS runtime</li><li>A variant tag with argument(s) becomes an object in the JS runtime. The keys in the object are <code>NAME</code> and <code>VAL</code>.</li></ul></li></ul><h2 id="exercises" tabindex="-1">Exercises <a class="header-anchor" href="#exercises" aria-label="Permalink to &quot;Exercises&quot;">​</a></h2><p><b>1.</b> Rewrite the “FREE promo code works in May but not other months” to use <code>List.iter</code> instead of a for loop.</p><details class="details custom-block"><summary>Hint</summary><p>Use <a href="https://melange.re/v4.0.0/api/re/melange/Stdlib/List/#val-init" target="_blank" rel="noreferrer">List.init</a>.</p></details><details class="details custom-block"><summary>Solution</summary><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">test(</span><span style="color:#DBEDFF;">&quot;FREE promo code works in May but not other months&quot;</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">()</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">List</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">init(</span><span style="color:#79B8FF;">12</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> i </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> i)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">List</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">iter(month </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">date</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Date</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">makeWithYMD(</span></span>
<span class="line"><span style="color:#E1E4E8;">           ~year</span><span style="color:#FDAEB7;">=</span><span style="color:#79B8FF;">2024</span><span style="color:#FDAEB7;">.,</span></span>
<span class="line"><span style="color:#E1E4E8;">           ~month</span><span style="color:#FDAEB7;">=</span><span style="color:#E1E4E8;">float_of_int(month)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">           ~date</span><span style="color:#FDAEB7;">=</span><span style="color:#79B8FF;">10</span><span style="color:#FDAEB7;">.,</span></span>
<span class="line"><span style="color:#E1E4E8;">         )</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">       expect</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> deepEqual(</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getDiscountFunction(</span><span style="color:#DBEDFF;">&quot;FREE&quot;</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> date)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            month </span><span style="color:#FDAEB7;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Ok</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getFreeBurgers) </span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">ExpiredCode</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">          )</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">     })</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">test(</span><span style="color:#032F62;">&quot;FREE promo code works in May but not other months&quot;</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">()</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">List</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">init(</span><span style="color:#005CC5;">12</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> i </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> i)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">List</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">iter(month </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">date</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Date</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">makeWithYMD(</span></span>
<span class="line"><span style="color:#24292E;">           ~year</span><span style="color:#B31D28;">=</span><span style="color:#005CC5;">2024</span><span style="color:#B31D28;">.,</span></span>
<span class="line"><span style="color:#24292E;">           ~month</span><span style="color:#B31D28;">=</span><span style="color:#24292E;">float_of_int(month)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">           ~date</span><span style="color:#B31D28;">=</span><span style="color:#005CC5;">10</span><span style="color:#B31D28;">.,</span></span>
<span class="line"><span style="color:#24292E;">         )</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">       expect</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> deepEqual(</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getDiscountFunction(</span><span style="color:#032F62;">&quot;FREE&quot;</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> date)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">            month </span><span style="color:#B31D28;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4</span><span style="color:#24292E;"> </span><span style="color:#E36209;">?</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Ok</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getFreeBurgers) </span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Error</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">ExpiredCode</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">          )</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">     })</span></span>
<span class="line"><span style="color:#24292E;">})</span><span style="color:#B31D28;">;</span></span></code></pre></div></details><p><b>2.</b> Modify <code>Discount.getDiscountFunction</code> so that it returns <code>Ok(getHalfOff)</code> only if the promo code is “HALF” and the date is May 28, International Burger Day. Make sure it passes the following test:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">test(</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#DBEDFF;">&quot;HALF promo code returns getHalfOff on May 28 but not other days of May&quot;</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">()</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">dayOfMonth</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">to</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">31</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">date</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Date</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">makeWithYMD(</span></span>
<span class="line"><span style="color:#E1E4E8;">        ~year</span><span style="color:#FDAEB7;">=</span><span style="color:#79B8FF;">2024</span><span style="color:#FDAEB7;">.,</span></span>
<span class="line"><span style="color:#E1E4E8;">        ~month</span><span style="color:#FDAEB7;">=</span><span style="color:#79B8FF;">4</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        ~date</span><span style="color:#FDAEB7;">=</span><span style="color:#E1E4E8;">float_of_int(dayOfMonth)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      )</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    expect</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> deepEqual(</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getDiscountFunction(</span><span style="color:#DBEDFF;">&quot;HALF&quot;</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> date)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">         dayOfMonth </span><span style="color:#FDAEB7;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">28</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Ok</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getHalfOff) </span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">ExpiredCode</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">       )</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">test(</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;HALF promo code returns getHalfOff on May 28 but not other days of May&quot;</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">()</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">dayOfMonth</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">to</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">31</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">date</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Date</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">makeWithYMD(</span></span>
<span class="line"><span style="color:#24292E;">        ~year</span><span style="color:#B31D28;">=</span><span style="color:#005CC5;">2024</span><span style="color:#B31D28;">.,</span></span>
<span class="line"><span style="color:#24292E;">        ~month</span><span style="color:#B31D28;">=</span><span style="color:#005CC5;">4</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">        ~date</span><span style="color:#B31D28;">=</span><span style="color:#24292E;">float_of_int(dayOfMonth)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">      )</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    expect</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> deepEqual(</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getDiscountFunction(</span><span style="color:#032F62;">&quot;HALF&quot;</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> date)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">         dayOfMonth </span><span style="color:#B31D28;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">28</span><span style="color:#24292E;"> </span><span style="color:#E36209;">?</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Ok</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getHalfOff) </span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Error</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">ExpiredCode</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">       )</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">})</span><span style="color:#B31D28;">;</span></span></code></pre></div><details class="details custom-block"><summary>Solution</summary><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getDiscountFunction</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (code</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> date) </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">month</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> date </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Date</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getMonth</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">dayOfMonth</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> date </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Date</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getDate</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (code </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">String</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toUpperCase) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;FREE&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">when</span><span style="color:#E1E4E8;"> month </span><span style="color:#FDAEB7;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Ok</span><span style="color:#E1E4E8;">(getFreeBurgers)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;HALF&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">when</span><span style="color:#E1E4E8;"> month </span><span style="color:#FDAEB7;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">&amp;&amp;</span><span style="color:#E1E4E8;"> dayOfMonth </span><span style="color:#FDAEB7;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">28</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Ok</span><span style="color:#E1E4E8;">(getHalfOff)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;FREE&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;HALF&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">ExpiredCode</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">InvalidCode</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getDiscountFunction</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (code</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> date) </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">month</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> date </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Date</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getMonth</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">dayOfMonth</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> date </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Date</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getDate</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (code </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">String</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toUpperCase) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;FREE&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">when</span><span style="color:#24292E;"> month </span><span style="color:#B31D28;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Ok</span><span style="color:#24292E;">(getFreeBurgers)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;HALF&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">when</span><span style="color:#24292E;"> month </span><span style="color:#B31D28;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">&amp;&amp;</span><span style="color:#24292E;"> dayOfMonth </span><span style="color:#B31D28;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">28</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Ok</span><span style="color:#24292E;">(getHalfOff)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;FREE&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;HALF&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Error</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">ExpiredCode</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">_</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Error</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">InvalidCode</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  }</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#B31D28;">;</span></span></code></pre></div></details><p><b>3.</b> Add a new function <code>Discount.getSandwichHalfOff</code> that takes half off the entire order if you order at least one of every type of sandwich. Make sure it passes the following tests:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#FDAEB7;">module</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SandwichHalfOff</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  test(&quot;Not all sandwiches, return Error&quot;, () =&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    expect</span></span>
<span class="line"><span style="color:#E1E4E8;">    |&gt; deepEqual(</span></span>
<span class="line"><span style="color:#E1E4E8;">         Discount.getSandwichHalfOff([</span></span>
<span class="line"><span style="color:#E1E4E8;">           Sandwich(Unicorn),</span></span>
<span class="line"><span style="color:#E1E4E8;">           Hotdog,</span></span>
<span class="line"><span style="color:#E1E4E8;">           Sandwich(Portabello),</span></span>
<span class="line"><span style="color:#E1E4E8;">           Sandwich(Ham),</span></span>
<span class="line"><span style="color:#E1E4E8;">         ]),</span></span>
<span class="line"><span style="color:#E1E4E8;">         Error(\`MissingSandwichTypes),</span></span>
<span class="line"><span style="color:#E1E4E8;">       )</span></span>
<span class="line"><span style="color:#E1E4E8;">  );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  test(&quot;All sandwiches, return Ok&quot;, () =&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">items</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">[</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Turducken</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">Hotdog</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Portabello</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">lettuce</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">tomatoes</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">cheese</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">onions</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">bacon</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      })</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Unicorn</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Ham</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">]</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    expect</span></span>
<span class="line"><span style="color:#E1E4E8;">    |&gt; deepEqual(</span></span>
<span class="line"><span style="color:#E1E4E8;">         Discount.getSandwichHalfOff(items),</span></span>
<span class="line"><span style="color:#E1E4E8;">         {</span></span>
<span class="line"><span style="color:#6A737D;">           // Don&#39;t use hardcoded value since Item.toPrice is non-deterministic</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">sum</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">             items </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">List</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">map(</span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toPrice) </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">List</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">fold_left((</span><span style="color:#FDAEB7;">+.</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">           Ok(sum /. 2.0);</span></span>
<span class="line"><span style="color:#E1E4E8;">         },</span></span>
<span class="line"><span style="color:#E1E4E8;">       )</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  })</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#B31D28;">module</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SandwichHalfOff</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  test(&quot;Not all sandwiches, return Error&quot;, () =&gt;</span></span>
<span class="line"><span style="color:#24292E;">    expect</span></span>
<span class="line"><span style="color:#24292E;">    |&gt; deepEqual(</span></span>
<span class="line"><span style="color:#24292E;">         Discount.getSandwichHalfOff([</span></span>
<span class="line"><span style="color:#24292E;">           Sandwich(Unicorn),</span></span>
<span class="line"><span style="color:#24292E;">           Hotdog,</span></span>
<span class="line"><span style="color:#24292E;">           Sandwich(Portabello),</span></span>
<span class="line"><span style="color:#24292E;">           Sandwich(Ham),</span></span>
<span class="line"><span style="color:#24292E;">         ]),</span></span>
<span class="line"><span style="color:#24292E;">         Error(\`MissingSandwichTypes),</span></span>
<span class="line"><span style="color:#24292E;">       )</span></span>
<span class="line"><span style="color:#24292E;">  );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  test(&quot;All sandwiches, return Ok&quot;, () =&gt; {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">items</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">[</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Turducken</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">Hotdog</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Portabello</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">lettuce</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">tomatoes</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">cheese</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">onions</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">bacon</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">      })</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Unicorn</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Ham</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">]</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">    expect</span></span>
<span class="line"><span style="color:#24292E;">    |&gt; deepEqual(</span></span>
<span class="line"><span style="color:#24292E;">         Discount.getSandwichHalfOff(items),</span></span>
<span class="line"><span style="color:#24292E;">         {</span></span>
<span class="line"><span style="color:#6A737D;">           // Don&#39;t use hardcoded value since Item.toPrice is non-deterministic</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sum</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">             items </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">List</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">map(</span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toPrice) </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">List</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">fold_left((</span><span style="color:#B31D28;">+.</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">           Ok(sum /. 2.0);</span></span>
<span class="line"><span style="color:#24292E;">         },</span></span>
<span class="line"><span style="color:#24292E;">       )</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">  })</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#B31D28;">;</span></span></code></pre></div><details class="details custom-block"><summary>Hint 1</summary><p>Add a new record type that keeps track of which sandwich types have been encountered in the order.</p></details><details class="details custom-block"><summary>Hint 2</summary><p>Use <a href="https://melange.re/v4.0.0/api/re/melange/Stdlib/List/#val-filter_map" target="_blank" rel="noreferrer">List.filter_map</a> and <a href="https://melange.re/v4.0.0/api/re/melange/Stdlib/ListLabels/#val-fold_left" target="_blank" rel="noreferrer">ListLabels.fold_left</a>.</p></details><details class="details custom-block"><summary>Solution</summary><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">sandwichTracker</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">portabello</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">bool</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">ham</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">bool</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">unicorn</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">bool</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">turducken</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">bool</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/** Buy 1+ of every type of sandwich, get half off */</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getSandwichHalfOff</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (items</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">list</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#DBEDFF;">t</span><span style="color:#E1E4E8;">)) </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">tracker</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    items</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">List</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">filter_map(</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">fun</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">Sandwich</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">sandwich</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(sandwich)</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Burger</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Hotdog</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">       )</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ListLabels</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">fold_left(</span></span>
<span class="line"><span style="color:#E1E4E8;">         ~init</span><span style="color:#FDAEB7;">=</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">portabello</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">ham</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">unicorn</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">turducken</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">         }</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">         ~f</span><span style="color:#FDAEB7;">=</span><span style="color:#E1E4E8;">(tracker</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> sandwich</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Sandwich</span><span style="color:#FDAEB7;">.</span><span style="color:#DBEDFF;">t</span><span style="color:#E1E4E8;">) </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (sandwich) {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Portabello</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">             </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">tracker</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">             </span><span style="color:#B392F0;">portabello</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">           }</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Ham</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">             </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">tracker</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">             </span><span style="color:#B392F0;">ham</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">           }</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Unicorn</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">             </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">tracker</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">             </span><span style="color:#B392F0;">unicorn</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">           }</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Turducken</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">             </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">tracker</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">             </span><span style="color:#B392F0;">turducken</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">           }</span></span>
<span class="line"><span style="color:#E1E4E8;">         }</span></span>
<span class="line"><span style="color:#E1E4E8;">       )</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (tracker) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> {</span><span style="color:#B392F0;">portabello</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ham</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">unicorn</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">turducken</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">} </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">total</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      items</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ListLabels</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">fold_left(~init</span><span style="color:#FDAEB7;">=</span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> ~f</span><span style="color:#FDAEB7;">=</span><span style="color:#E1E4E8;">(total</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> item) </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">           total </span><span style="color:#FDAEB7;">+.</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Item</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toPrice(item)</span></span>
<span class="line"><span style="color:#E1E4E8;">         )</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Ok</span><span style="color:#E1E4E8;">(total </span><span style="color:#FDAEB7;">/.</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">\`</span><span style="color:#79B8FF;">MissingSandwichTypes</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">type</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sandwichTracker</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">portabello</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bool</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">ham</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bool</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">unicorn</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bool</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">turducken</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bool</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/** Buy 1+ of every type of sandwich, get half off */</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getSandwichHalfOff</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (items</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">list</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#032F62;">t</span><span style="color:#24292E;">)) </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">tracker</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    items</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">List</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">filter_map(</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">fun</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">Sandwich</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">sandwich</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(sandwich)</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Burger</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">_</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Hotdog</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">       )</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ListLabels</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">fold_left(</span></span>
<span class="line"><span style="color:#24292E;">         ~init</span><span style="color:#B31D28;">=</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">portabello</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">ham</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">unicorn</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">turducken</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">         }</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">         ~f</span><span style="color:#B31D28;">=</span><span style="color:#24292E;">(tracker</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> sandwich</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Sandwich</span><span style="color:#B31D28;">.</span><span style="color:#032F62;">t</span><span style="color:#24292E;">) </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (sandwich) {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Portabello</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">             </span><span style="color:#D73A49;">...</span><span style="color:#24292E;">tracker</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">             </span><span style="color:#6F42C1;">portabello</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">           }</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Ham</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">             </span><span style="color:#D73A49;">...</span><span style="color:#24292E;">tracker</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">             </span><span style="color:#6F42C1;">ham</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">           }</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Unicorn</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">             </span><span style="color:#D73A49;">...</span><span style="color:#24292E;">tracker</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">             </span><span style="color:#6F42C1;">unicorn</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">           }</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Turducken</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">             </span><span style="color:#D73A49;">...</span><span style="color:#24292E;">tracker</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">             </span><span style="color:#6F42C1;">turducken</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">           }</span></span>
<span class="line"><span style="color:#24292E;">         }</span></span>
<span class="line"><span style="color:#24292E;">       )</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (tracker) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> {</span><span style="color:#6F42C1;">portabello</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ham</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">unicorn</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">turducken</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">} </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">total</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      items</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ListLabels</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">fold_left(~init</span><span style="color:#B31D28;">=</span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> ~f</span><span style="color:#B31D28;">=</span><span style="color:#24292E;">(total</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> item) </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">           total </span><span style="color:#B31D28;">+.</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Item</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toPrice(item)</span></span>
<span class="line"><span style="color:#24292E;">         )</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Ok</span><span style="color:#24292E;">(total </span><span style="color:#B31D28;">/.</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">_</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Error</span><span style="color:#24292E;">(</span><span style="color:#E36209;">\`</span><span style="color:#005CC5;">MissingSandwichTypes</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  }</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#B31D28;">;</span></span></code></pre></div></details><p><b>4.</b> Modify <code>Discount.getDiscountFunction</code> so that it returns <code>Ok(getSandwichHalfOff)</code> only if the promo code is “HALF” and the date is November 3, World Sandwich Day. Make sure it passes the following test:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">test(</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#DBEDFF;">&quot;HALF promo code returns getSandwichHalfOff on Nov 3 but not other days of Nov&quot;</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">()</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">dayOfMonth</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">to</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">30</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">date</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Date</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">makeWithYMD(</span></span>
<span class="line"><span style="color:#E1E4E8;">        ~year</span><span style="color:#FDAEB7;">=</span><span style="color:#79B8FF;">2024</span><span style="color:#FDAEB7;">.,</span></span>
<span class="line"><span style="color:#E1E4E8;">        ~month</span><span style="color:#FDAEB7;">=</span><span style="color:#79B8FF;">10</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        ~date</span><span style="color:#FDAEB7;">=</span><span style="color:#E1E4E8;">float_of_int(dayOfMonth)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      )</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    expect</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> deepEqual(</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getDiscountFunction(</span><span style="color:#DBEDFF;">&quot;HALF&quot;</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> date)</span><span style="color:#FDAEB7;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">         dayOfMonth </span><span style="color:#FDAEB7;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#FFAB70;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Ok</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Discount</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getSandwichHalfOff) </span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">ExpiredCode</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">       )</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">test(</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;HALF promo code returns getSandwichHalfOff on Nov 3 but not other days of Nov&quot;</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">()</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">dayOfMonth</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">to</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">30</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">date</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Date</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">makeWithYMD(</span></span>
<span class="line"><span style="color:#24292E;">        ~year</span><span style="color:#B31D28;">=</span><span style="color:#005CC5;">2024</span><span style="color:#B31D28;">.,</span></span>
<span class="line"><span style="color:#24292E;">        ~month</span><span style="color:#B31D28;">=</span><span style="color:#005CC5;">10</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">        ~date</span><span style="color:#B31D28;">=</span><span style="color:#24292E;">float_of_int(dayOfMonth)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">      )</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    expect</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> deepEqual(</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getDiscountFunction(</span><span style="color:#032F62;">&quot;HALF&quot;</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> date)</span><span style="color:#B31D28;">,</span></span>
<span class="line"><span style="color:#24292E;">         dayOfMonth </span><span style="color:#B31D28;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#E36209;">?</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Ok</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Discount</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getSandwichHalfOff) </span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Error</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">ExpiredCode</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">       )</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">})</span><span style="color:#B31D28;">;</span></span></code></pre></div><details class="details custom-block"><summary>Solution</summary><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getDiscountFunction</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (code</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> date) </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">month</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> date </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Date</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getMonth</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">dayOfMonth</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> date </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Date</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">getDate</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (code </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">String</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toUpperCase) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;FREE&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">when</span><span style="color:#E1E4E8;"> month </span><span style="color:#FDAEB7;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Ok</span><span style="color:#E1E4E8;">(getFreeBurgers)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;HALF&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">when</span><span style="color:#E1E4E8;"> month </span><span style="color:#FDAEB7;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">&amp;&amp;</span><span style="color:#E1E4E8;"> dayOfMonth </span><span style="color:#FDAEB7;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">28</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Ok</span><span style="color:#E1E4E8;">(getHalfOff)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;HALF&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">when</span><span style="color:#E1E4E8;"> month </span><span style="color:#FDAEB7;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">&amp;&amp;</span><span style="color:#E1E4E8;"> dayOfMonth </span><span style="color:#FDAEB7;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Ok</span><span style="color:#E1E4E8;">(getSandwichHalfOff)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;FREE&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;HALF&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">ExpiredCode</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">InvalidCode</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getDiscountFunction</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (code</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> date) </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">month</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> date </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Date</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getMonth</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">dayOfMonth</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> date </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Date</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">getDate</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (code </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">String</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toUpperCase) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;FREE&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">when</span><span style="color:#24292E;"> month </span><span style="color:#B31D28;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Ok</span><span style="color:#24292E;">(getFreeBurgers)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;HALF&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">when</span><span style="color:#24292E;"> month </span><span style="color:#B31D28;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">&amp;&amp;</span><span style="color:#24292E;"> dayOfMonth </span><span style="color:#B31D28;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">28</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Ok</span><span style="color:#24292E;">(getHalfOff)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;HALF&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">when</span><span style="color:#24292E;"> month </span><span style="color:#B31D28;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">&amp;&amp;</span><span style="color:#24292E;"> dayOfMonth </span><span style="color:#B31D28;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Ok</span><span style="color:#24292E;">(getSandwichHalfOff)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;FREE&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;HALF&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Error</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">ExpiredCode</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">_</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Error</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">InvalidCode</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  }</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#B31D28;">;</span></span></code></pre></div></details><hr><p>View <a href="https://github.com/melange-re/melange-for-react-devs/blob/main/src/promo-codes/" target="_blank" rel="noreferrer">source code</a> and <a href="https://react-book.melange.re/demo/src/promo-codes/" target="_blank" rel="noreferrer">demo</a> for this chapter.</p><hr><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>It was quite a sight to see a giant burger zipping around the fairgrounds on a Segway while being chased by a small army of juggalos. <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p>Instead of creating a variant tag out of the phrase “burger that has every topping”, we save ourselves some typing by using the much shorter “megaburger”. <a href="#fnref2" class="footnote-backref">↩︎</a></p></li></ol></section>`,105),e=[p];function t(c,r,E,y,i,F){return n(),a("div",null,e)}const D=s(o,[["render",t]]);export{d as __pageData,D as default};
