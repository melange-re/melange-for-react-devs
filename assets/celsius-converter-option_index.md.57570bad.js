import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.0e8ae64e.js";const D=JSON.parse('{"title":"Celsius Converter Using Option","description":"","frontmatter":{},"headers":[],"relativePath":"celsius-converter-option/index.md","filePath":"celsius-converter-option/index.md","lastUpdated":1716395778000}'),o={name:"celsius-converter-option/index.md"},p=l(`<h1 id="celsius-converter-using-option" tabindex="-1">Celsius Converter Using Option <a class="header-anchor" href="#celsius-converter-using-option" aria-label="Permalink to &quot;Celsius Converter Using Option&quot;">​</a></h1><p>After all the changes we made in the last chapter, your <code>CelsiusConverter.re</code> might look something like this:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getValueFromEvent</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (evt)</span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> string </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">React</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Event</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Form</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">target(evt)</span><span style="color:#FDAEB7;">##</span><span style="color:#E1E4E8;">value</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">convert</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> celsius </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">9</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">/.</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">*.</span><span style="color:#E1E4E8;"> celsius </span><span style="color:#FDAEB7;">+.</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">32</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#F97583;">@</span><span style="color:#B392F0;">react</span><span style="color:#F97583;">.</span><span style="color:#79B8FF;">component</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">()</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">celsius</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">setCelsius</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">React</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">useState(</span><span style="color:#79B8FF;">()</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">input</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">value</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">celsius</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">onChange</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{evt </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">newCelsius</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> getValueFromEvent(evt)</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        setCelsius(_ </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> newCelsius)</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      }}</span></span>
<span class="line"><span style="color:#E1E4E8;">    /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#B392F0;">React</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">string(</span><span style="color:#FDAEB7;">{</span><span style="color:#79B8FF;">js</span><span style="color:#FDAEB7;">|</span><span style="color:#DBEDFF;">°C = </span><span style="color:#FDAEB7;">|</span><span style="color:#79B8FF;">js</span><span style="color:#FDAEB7;">}</span><span style="color:#E1E4E8;">)}</span></span>
<span class="line"><span style="color:#E1E4E8;">    {(</span></span>
<span class="line"><span style="color:#E1E4E8;">       celsius </span><span style="color:#FDAEB7;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#FFAB70;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">{</span><span style="color:#79B8FF;">js</span><span style="color:#FDAEB7;">|</span><span style="color:#DBEDFF;">?°F</span><span style="color:#FDAEB7;">|</span><span style="color:#79B8FF;">js</span><span style="color:#FDAEB7;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">             celsius</span></span>
<span class="line"><span style="color:#E1E4E8;">             </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> float_of_string</span></span>
<span class="line"><span style="color:#E1E4E8;">             </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> convert</span></span>
<span class="line"><span style="color:#E1E4E8;">             </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Float</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toFixed(~digits</span><span style="color:#FDAEB7;">=</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">           ) {</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">exception</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">_</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;error&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">fahrenheit</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> fahrenheit </span><span style="color:#FDAEB7;">++</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">{</span><span style="color:#79B8FF;">js</span><span style="color:#FDAEB7;">|</span><span style="color:#DBEDFF;">°F</span><span style="color:#FDAEB7;">|</span><span style="color:#79B8FF;">js</span><span style="color:#FDAEB7;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">           }</span></span>
<span class="line"><span style="color:#E1E4E8;">         )</span></span>
<span class="line"><span style="color:#E1E4E8;">     )</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">React</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">string}</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getValueFromEvent</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (evt)</span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> string </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">React</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Event</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Form</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">target(evt)</span><span style="color:#B31D28;">##</span><span style="color:#24292E;">value</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">convert</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> celsius </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">9</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">/.</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">*.</span><span style="color:#24292E;"> celsius </span><span style="color:#B31D28;">+.</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">32</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">[</span><span style="color:#D73A49;">@</span><span style="color:#6F42C1;">react</span><span style="color:#D73A49;">.</span><span style="color:#005CC5;">component</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">make</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">()</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">celsius</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">setCelsius</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">React</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">useState(</span><span style="color:#005CC5;">()</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">)</span><span style="color:#B31D28;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">input</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">value</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">celsius</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">onChange</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{evt </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">newCelsius</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> getValueFromEvent(evt)</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">        setCelsius(_ </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> newCelsius)</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">      }}</span></span>
<span class="line"><span style="color:#24292E;">    /&gt;</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#6F42C1;">React</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">string(</span><span style="color:#B31D28;">{</span><span style="color:#005CC5;">js</span><span style="color:#B31D28;">|</span><span style="color:#032F62;">°C = </span><span style="color:#B31D28;">|</span><span style="color:#005CC5;">js</span><span style="color:#B31D28;">}</span><span style="color:#24292E;">)}</span></span>
<span class="line"><span style="color:#24292E;">    {(</span></span>
<span class="line"><span style="color:#24292E;">       celsius </span><span style="color:#B31D28;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#E36209;">?</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">{</span><span style="color:#005CC5;">js</span><span style="color:#B31D28;">|</span><span style="color:#032F62;">?°F</span><span style="color:#B31D28;">|</span><span style="color:#005CC5;">js</span><span style="color:#B31D28;">}</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">             celsius</span></span>
<span class="line"><span style="color:#24292E;">             </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> float_of_string</span></span>
<span class="line"><span style="color:#24292E;">             </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> convert</span></span>
<span class="line"><span style="color:#24292E;">             </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Float</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toFixed(~digits</span><span style="color:#B31D28;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">           ) {</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">exception</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">_</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;error&quot;</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">fahrenheit</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> fahrenheit </span><span style="color:#B31D28;">++</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">{</span><span style="color:#005CC5;">js</span><span style="color:#B31D28;">|</span><span style="color:#032F62;">°F</span><span style="color:#B31D28;">|</span><span style="color:#005CC5;">js</span><span style="color:#B31D28;">}</span></span>
<span class="line"><span style="color:#24292E;">           }</span></span>
<span class="line"><span style="color:#24292E;">         )</span></span>
<span class="line"><span style="color:#24292E;">     )</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">React</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">string}</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>What happens if you forget the <code>| exception _</code> branch of your switch expression? Your program will crash when invalid input is entered. The compiler won’t warn you to add an exception branch because it doesn’t keep track of which functions throw exceptions. Next, we’ll show you a better way which completely avoids functions that can fail in unexpected ways.</p><h2 id="float-of-string-opt" tabindex="-1">float_of_string_opt <a class="header-anchor" href="#float-of-string-opt" aria-label="Permalink to &quot;float_of_string_opt&quot;">​</a></h2><p>Refactor the switch expression to use <code>float_of_string_opt</code> instead. This function has the type signature <code>string =&gt; option(float)</code>. It takes a <code>string</code> argument and returns <code>Some(number)</code> if it succeeds and <code>None</code> if it fails—meaning that even if this function fails, no exception is raised.</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (celsius </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> float_of_string_opt) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;error&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">fahrenheit</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    (fahrenheit </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> convert </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Float</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toFixed(~digits</span><span style="color:#FDAEB7;">=</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">)) </span><span style="color:#FDAEB7;">++</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">{</span><span style="color:#79B8FF;">js</span><span style="color:#FDAEB7;">|</span><span style="color:#DBEDFF;">°F</span><span style="color:#FDAEB7;">|</span><span style="color:#79B8FF;">js</span><span style="color:#FDAEB7;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (celsius </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> float_of_string_opt) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;error&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">fahrenheit</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">    (fahrenheit </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> convert </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Float</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toFixed(~digits</span><span style="color:#B31D28;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)) </span><span style="color:#B31D28;">++</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">{</span><span style="color:#005CC5;">js</span><span style="color:#B31D28;">|</span><span style="color:#032F62;">°F</span><span style="color:#B31D28;">|</span><span style="color:#005CC5;">js</span><span style="color:#B31D28;">}</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>In terms of functionality, this does exactly what the previous version did. But a critical difference is that if you comment out the <code>| None</code> branch, the compiler will refuse to accept it:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">File &quot;CelsiusConverter.re&quot;, lines 21-32, characters 11-10:</span></span>
<span class="line"><span style="color:#e1e4e8;">21 | ...........(</span></span>
<span class="line"><span style="color:#e1e4e8;">22 |            switch (celsius |&gt; float_of_string_opt) {</span></span>
<span class="line"><span style="color:#e1e4e8;">23 |            //  | None =&gt; &quot;error&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">24 |            | Some(fahrenheit) =&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">25 |              (</span></span>
<span class="line"><span style="color:#e1e4e8;">...</span></span>
<span class="line"><span style="color:#e1e4e8;">29 |              )</span></span>
<span class="line"><span style="color:#e1e4e8;">30 |              ++ {js| °F|js}</span></span>
<span class="line"><span style="color:#e1e4e8;">31 |            }</span></span>
<span class="line"><span style="color:#e1e4e8;">32 |          )</span></span>
<span class="line"><span style="color:#e1e4e8;">Error (warning 8 [partial-match]): this pattern-matching is not exhaustive.</span></span>
<span class="line"><span style="color:#e1e4e8;">Here is an example of a case that is not matched:</span></span>
<span class="line"><span style="color:#e1e4e8;">None</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">File &quot;CelsiusConverter.re&quot;, lines 21-32, characters 11-10:</span></span>
<span class="line"><span style="color:#24292e;">21 | ...........(</span></span>
<span class="line"><span style="color:#24292e;">22 |            switch (celsius |&gt; float_of_string_opt) {</span></span>
<span class="line"><span style="color:#24292e;">23 |            //  | None =&gt; &quot;error&quot;</span></span>
<span class="line"><span style="color:#24292e;">24 |            | Some(fahrenheit) =&gt;</span></span>
<span class="line"><span style="color:#24292e;">25 |              (</span></span>
<span class="line"><span style="color:#24292e;">...</span></span>
<span class="line"><span style="color:#24292e;">29 |              )</span></span>
<span class="line"><span style="color:#24292e;">30 |              ++ {js| °F|js}</span></span>
<span class="line"><span style="color:#24292e;">31 |            }</span></span>
<span class="line"><span style="color:#24292e;">32 |          )</span></span>
<span class="line"><span style="color:#24292e;">Error (warning 8 [partial-match]): this pattern-matching is not exhaustive.</span></span>
<span class="line"><span style="color:#24292e;">Here is an example of a case that is not matched:</span></span>
<span class="line"><span style="color:#24292e;">None</span></span></code></pre></div><p>You would get a similar error if you left off the <code>| Some(_)</code> branch. Having an <code>option</code> value be the input for a switch expression means that you can’t forget to handle the failure case, much less the success case. There’s another advantage: The <code>| Some(fahrenheit)</code> branch gives you access to the <code>float</code> that was successfully converted from the <code>string</code>, and <em>only this branch</em> has access to that value. So you can be reasonably sure that the success case is handled here and not somewhere else. You are starting to experience the power of <a href="https://reasonml.github.io/docs/en/pattern-matching" target="_blank" rel="noreferrer">pattern matching</a> in OCaml.</p><h2 id="option-map" tabindex="-1"><code>Option.map</code> <a class="header-anchor" href="#option-map" aria-label="Permalink to &quot;\`Option.map\`&quot;">​</a></h2><p>It’s a shame we had to give up the long chain of function calls from when we were still using <code>float_of_string</code>:</p><div class="language-reason vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">reason</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">celsius</span></span>
<span class="line"><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> float_of_string</span></span>
<span class="line"><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> convert</span></span>
<span class="line"><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Float</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toFixed(~digits</span><span style="color:#FDAEB7;">=</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">celsius</span></span>
<span class="line"><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> float_of_string</span></span>
<span class="line"><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> convert</span></span>
<span class="line"><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Float</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toFixed(~digits</span><span style="color:#B31D28;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)</span></span></code></pre></div><p>Actually, we can still use a very similar chain of functions with <code>float_of_string_opt</code> if we make a couple of small additions:</p><div class="language-reason vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">reason</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">celsius</span></span>
<span class="line"><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> float_of_string_opt</span></span>
<span class="line"><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Option</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">map(convert)</span></span>
<span class="line"><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Option</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">map(</span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Float</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toFixed(~digits</span><span style="color:#FDAEB7;">=</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">celsius</span></span>
<span class="line"><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> float_of_string_opt</span></span>
<span class="line"><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Option</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">map(convert)</span></span>
<span class="line"><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Option</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">map(</span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Float</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toFixed(~digits</span><span style="color:#B31D28;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">))</span></span></code></pre></div><p><code>Option.map</code> takes a function and an <code>option</code> value, and only invokes the function if the <code>option</code> was <code>Some(_)</code>. Hovering over it, you can see that its type signature is:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">(&#39;a =&gt; &#39;b, option(&#39;a)) =&gt; option(&#39;b)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">(&#39;a =&gt; &#39;b, option(&#39;a)) =&gt; option(&#39;b)</span></span></code></pre></div><p>Breaking the type signature down:</p><ul><li>The first argument, <code>&#39;a =&gt; &#39;b</code>, is function which accepts a value of type <code>&#39;a</code> (placeholder for any type) and returns a value of type <code>&#39;b</code> (also a placeholder for any type, though it may be a different type than <code>&#39;a</code>).</li><li>The second argument, <code>option(&#39;a)</code>, is an <code>option</code> that wraps around a value of type <code>&#39;a</code>.</li><li>The return type of <code>Option.map</code> is <code>option(&#39;b)</code>, which is an <code>option</code> that wraps around a value of type <code>&#39;b</code>.</li></ul><p>The implementation of <code>Option.map</code> is fairly straightforward, consisting of a single switch expression:</p><div class="language-reason vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">reason</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (func</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> option) </span><span style="color:#FDAEB7;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (option) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">v</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(func(v))</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">map</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (func</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> option) </span><span style="color:#B31D28;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (option) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">v</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(func(v))</span></span>
<span class="line"><span style="color:#24292E;">  }</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>You may be interested in browsing the many other helper functions related to <code>option</code> in the standard library’s <a href="https://melange.re/v4.0.0/api/re/melange/Stdlib/Option/" target="_blank" rel="noreferrer">Option module</a>.</p><p>At this point, your switch expression might look like this:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">    celsius</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> float_of_string_opt</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Option</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">map(convert)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Option</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">map(</span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Float</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toFixed(~digits</span><span style="color:#FDAEB7;">=</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">  ) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;error&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">fahrenheit</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> fahrenheit </span><span style="color:#FDAEB7;">++</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">{</span><span style="color:#79B8FF;">js</span><span style="color:#FDAEB7;">|</span><span style="color:#DBEDFF;">°F</span><span style="color:#FDAEB7;">|</span><span style="color:#79B8FF;">js</span><span style="color:#FDAEB7;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">    celsius</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> float_of_string_opt</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Option</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">map(convert)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Option</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">map(</span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Float</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toFixed(~digits</span><span style="color:#B31D28;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">  ) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;error&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">fahrenheit</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> fahrenheit </span><span style="color:#B31D28;">++</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">{</span><span style="color:#005CC5;">js</span><span style="color:#B31D28;">|</span><span style="color:#032F62;">°F</span><span style="color:#B31D28;">|</span><span style="color:#005CC5;">js</span><span style="color:#B31D28;">}</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h2 id="when-guard" tabindex="-1"><code>when</code> guard <a class="header-anchor" href="#when-guard" aria-label="Permalink to &quot;\`when\` guard&quot;">​</a></h2><p>What if we wanted to render a message of complaint when the temperature goes above 212° F (the boiling point of water) and not even bother to render the converted number? It could look like this:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (celsius </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> float_of_string_opt </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Option</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">map(convert)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;error&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">fahrenheit</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">    fahrenheit </span><span style="color:#FDAEB7;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">212</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">      </span><span style="color:#FDAEB7;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">{</span><span style="color:#79B8FF;">js</span><span style="color:#FDAEB7;">|</span><span style="color:#DBEDFF;">Unreasonably hot🥵</span><span style="color:#FDAEB7;">|</span><span style="color:#79B8FF;">js</span><span style="color:#FDAEB7;">}</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">      </span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Float</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toFixed(fahrenheit</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> ~digits</span><span style="color:#FDAEB7;">=</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">) </span><span style="color:#FDAEB7;">++</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">{</span><span style="color:#79B8FF;">js</span><span style="color:#FDAEB7;">|</span><span style="color:#DBEDFF;"> °F</span><span style="color:#FDAEB7;">|</span><span style="color:#79B8FF;">js</span><span style="color:#FDAEB7;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (celsius </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> float_of_string_opt </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Option</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">map(convert)) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;error&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">fahrenheit</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line highlighted"><span style="color:#24292E;">    fahrenheit </span><span style="color:#B31D28;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">212</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span></span>
<span class="line highlighted"><span style="color:#24292E;">      </span><span style="color:#B31D28;">?</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">{</span><span style="color:#005CC5;">js</span><span style="color:#B31D28;">|</span><span style="color:#032F62;">Unreasonably hot🥵</span><span style="color:#B31D28;">|</span><span style="color:#005CC5;">js</span><span style="color:#B31D28;">}</span></span>
<span class="line highlighted"><span style="color:#24292E;">      </span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Float</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toFixed(fahrenheit</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> ~digits</span><span style="color:#B31D28;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">) </span><span style="color:#B31D28;">++</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">{</span><span style="color:#005CC5;">js</span><span style="color:#B31D28;">|</span><span style="color:#032F62;"> °F</span><span style="color:#B31D28;">|</span><span style="color:#005CC5;">js</span><span style="color:#B31D28;">}</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>This works, but OCaml gives you a construct that allows you to do the float comparison without using a nested ternary expression:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (celsius </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> float_of_string_opt </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Option</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">map(convert)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;error&quot;</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">fahrenheit</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">when</span><span style="color:#E1E4E8;"> fahrenheit </span><span style="color:#FDAEB7;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">212</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">{</span><span style="color:#79B8FF;">js</span><span style="color:#FDAEB7;">|</span><span style="color:#DBEDFF;">Unreasonably hot🥵</span><span style="color:#FDAEB7;">|</span><span style="color:#79B8FF;">js</span><span style="color:#FDAEB7;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">fahrenheit</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Float</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toFixed(fahrenheit</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> ~digits</span><span style="color:#FDAEB7;">=</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">) </span><span style="color:#FDAEB7;">++</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">{</span><span style="color:#79B8FF;">js</span><span style="color:#FDAEB7;">|</span><span style="color:#DBEDFF;"> °F</span><span style="color:#FDAEB7;">|</span><span style="color:#79B8FF;">js</span><span style="color:#FDAEB7;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (celsius </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> float_of_string_opt </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Option</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">map(convert)) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;error&quot;</span></span>
<span class="line highlighted"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">fahrenheit</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">when</span><span style="color:#24292E;"> fahrenheit </span><span style="color:#B31D28;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">212</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">{</span><span style="color:#005CC5;">js</span><span style="color:#B31D28;">|</span><span style="color:#032F62;">Unreasonably hot🥵</span><span style="color:#B31D28;">|</span><span style="color:#005CC5;">js</span><span style="color:#B31D28;">}</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">fahrenheit</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Float</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toFixed(fahrenheit</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> ~digits</span><span style="color:#B31D28;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">) </span><span style="color:#B31D28;">++</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">{</span><span style="color:#005CC5;">js</span><span style="color:#B31D28;">|</span><span style="color:#032F62;"> °F</span><span style="color:#B31D28;">|</span><span style="color:#005CC5;">js</span><span style="color:#B31D28;">}</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>The <a href="https://reasonml.github.io/docs/en/pattern-matching#when" target="_blank" rel="noreferrer">when guard</a> allows you to add extra conditions to a switch expression branch, keeping nesting of conditionals to a minimum and making your code more readable.</p><hr><p>Hooray! Our Celsius converter is finally complete. Later, we’ll see how to <a href="/todo.html">create a component that can convert back and forth between Celsius and Fahrenheit</a>. But first, we’ll explore <a href="https://melange.re/v4.0.0/build-system.html" target="_blank" rel="noreferrer">Dune, the build system</a> used by Melange.</p><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><ul><li>Prefer functions that return <code>option</code> over those that throw exceptions. <ul><li>When the input of a switch expression is <code>option</code>, the compiler can helpfully remind you to handle the error case.</li></ul></li><li><code>Option.map</code> is very useful when chaining functions that return <code>option</code>.</li><li>You can use a <code>when</code> guard to make your switch expression more expressive without nesting conditionals.</li></ul><h2 id="exercises" tabindex="-1">Exercises <a class="header-anchor" href="#exercises" aria-label="Permalink to &quot;Exercises&quot;">​</a></h2><p><b>1.</b> If you enter a space in the input, it’ll unintuitively produce a Fahrenheit value of 32.00 degrees (because <code>float_of_string_opt(&quot; &quot;) == Some(0.)</code>). Handle this case correctly by showing “? °F” instead.</p><details class="details custom-block"><summary>Hint</summary><p>Use the <code>String.trim</code> function.</p></details><details class="details custom-block"><summary>Solution</summary><p>Add a call to <code>String.trim</code> in your render logic:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">(</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">String</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">trim(celsius) </span><span style="color:#FDAEB7;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;&quot;</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">{</span><span style="color:#79B8FF;">js</span><span style="color:#FDAEB7;">|</span><span style="color:#DBEDFF;">?°F</span><span style="color:#FDAEB7;">|</span><span style="color:#79B8FF;">js</span><span style="color:#FDAEB7;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (celsius </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> float_of_string_opt </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Option</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">map(convert)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;error&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">fahrenheit</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">when</span><span style="color:#E1E4E8;"> fahrenheit </span><span style="color:#FDAEB7;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">212</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">{</span><span style="color:#79B8FF;">js</span><span style="color:#FDAEB7;">|</span><span style="color:#DBEDFF;">Unreasonably hot🥵</span><span style="color:#FDAEB7;">|</span><span style="color:#79B8FF;">js</span><span style="color:#FDAEB7;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">fahrenheit</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Float</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toFixed(fahrenheit</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> ~digits</span><span style="color:#FDAEB7;">=</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">) </span><span style="color:#FDAEB7;">++</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">{</span><span style="color:#79B8FF;">js</span><span style="color:#FDAEB7;">|</span><span style="color:#DBEDFF;"> °F</span><span style="color:#FDAEB7;">|</span><span style="color:#79B8FF;">js</span><span style="color:#FDAEB7;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    )</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#24292E;">(</span></span>
<span class="line highlighted"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">String</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">trim(celsius) </span><span style="color:#B31D28;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span></span>
<span class="line highlighted"><span style="color:#24292E;">    </span><span style="color:#E36209;">?</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">{</span><span style="color:#005CC5;">js</span><span style="color:#B31D28;">|</span><span style="color:#032F62;">?°F</span><span style="color:#B31D28;">|</span><span style="color:#005CC5;">js</span><span style="color:#B31D28;">}</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (celsius </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> float_of_string_opt </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Option</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">map(convert)) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;error&quot;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">fahrenheit</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">when</span><span style="color:#24292E;"> fahrenheit </span><span style="color:#B31D28;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">212</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">{</span><span style="color:#005CC5;">js</span><span style="color:#B31D28;">|</span><span style="color:#032F62;">Unreasonably hot🥵</span><span style="color:#B31D28;">|</span><span style="color:#005CC5;">js</span><span style="color:#B31D28;">}</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">fahrenheit</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Float</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toFixed(fahrenheit</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> ~digits</span><span style="color:#B31D28;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">) </span><span style="color:#B31D28;">++</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">{</span><span style="color:#005CC5;">js</span><span style="color:#B31D28;">|</span><span style="color:#032F62;"> °F</span><span style="color:#B31D28;">|</span><span style="color:#005CC5;">js</span><span style="color:#B31D28;">}</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    )</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div></details><p><b>2.</b> Add another branch with a <code>when</code> guard that renders “Unreasonably cold🥶” if the temperature is less than -128.6°F (the lowest temperature ever recorded on Earth).</p><details class="details custom-block"><summary>Solution</summary><p>Add another <code>Some(fahrenheit)</code> branch with a <code>when</code> guard:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (celsius </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> float_of_string_opt </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Option</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">map(convert)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;error&quot;</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">fahrenheit</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">when</span><span style="color:#E1E4E8;"> fahrenheit </span><span style="color:#FDAEB7;">&lt;</span><span style="color:#E1E4E8;"> (</span><span style="color:#FDAEB7;">-</span><span style="color:#79B8FF;">128</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">{</span><span style="color:#79B8FF;">js</span><span style="color:#FDAEB7;">|</span><span style="color:#DBEDFF;">Unreasonably cold🥶</span><span style="color:#FDAEB7;">|</span><span style="color:#79B8FF;">js</span><span style="color:#FDAEB7;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">fahrenheit</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">when</span><span style="color:#E1E4E8;"> fahrenheit </span><span style="color:#FDAEB7;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">212</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">{</span><span style="color:#79B8FF;">js</span><span style="color:#FDAEB7;">|</span><span style="color:#DBEDFF;">Unreasonably hot🥵</span><span style="color:#FDAEB7;">|</span><span style="color:#79B8FF;">js</span><span style="color:#FDAEB7;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">fahrenheit</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Float</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toFixed(fahrenheit</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> ~digits</span><span style="color:#FDAEB7;">=</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">) </span><span style="color:#FDAEB7;">++</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">{</span><span style="color:#79B8FF;">js</span><span style="color:#FDAEB7;">|</span><span style="color:#DBEDFF;">°F</span><span style="color:#FDAEB7;">|</span><span style="color:#79B8FF;">js</span><span style="color:#FDAEB7;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (celsius </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> float_of_string_opt </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Option</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">map(convert)) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;error&quot;</span></span>
<span class="line highlighted"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">fahrenheit</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">when</span><span style="color:#24292E;"> fahrenheit </span><span style="color:#B31D28;">&lt;</span><span style="color:#24292E;"> (</span><span style="color:#B31D28;">-</span><span style="color:#005CC5;">128</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">{</span><span style="color:#005CC5;">js</span><span style="color:#B31D28;">|</span><span style="color:#032F62;">Unreasonably cold🥶</span><span style="color:#B31D28;">|</span><span style="color:#005CC5;">js</span><span style="color:#B31D28;">}</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">fahrenheit</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">when</span><span style="color:#24292E;"> fahrenheit </span><span style="color:#B31D28;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">212</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">{</span><span style="color:#005CC5;">js</span><span style="color:#B31D28;">|</span><span style="color:#032F62;">Unreasonably hot🥵</span><span style="color:#B31D28;">|</span><span style="color:#005CC5;">js</span><span style="color:#B31D28;">}</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">fahrenheit</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Float</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toFixed(fahrenheit</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> ~digits</span><span style="color:#B31D28;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">) </span><span style="color:#B31D28;">++</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">{</span><span style="color:#005CC5;">js</span><span style="color:#B31D28;">|</span><span style="color:#032F62;">°F</span><span style="color:#B31D28;">|</span><span style="color:#005CC5;">js</span><span style="color:#B31D28;">}</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div></details><p><b>3.</b> Use <a href="https://melange.re/v4.0.0/api/re/melange/Js/Float/#val-fromString" target="_blank" rel="noreferrer">Js.Float.fromString</a> instead of <code>float_of_string_opt</code> to parse a string to float. Note that <code>Js.Float.fromString</code> does not return <code>None</code> if it fails to parse a string to a valid float.</p><details class="details custom-block"><summary>Hint</summary><p>Use <a href="https://melange.re/v4.0.0/api/re/melange/Js/Float/#val-isNaN" target="_blank" rel="noreferrer">Js.Float.isNaN</a>.</p></details><details class="details custom-block"><summary>Solution</summary><p>Define a new helper function that takes a <code>string</code> and returns <code>option</code>:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">floatFromString</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> text </span><span style="color:#FDAEB7;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Float</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">fromString(text)</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Float</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">isNaN(value) </span><span style="color:#FDAEB7;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(value)</span><span style="color:#FDAEB7;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#FDAEB7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">floatFromString</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> text </span><span style="color:#B31D28;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Float</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">fromString(text)</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Float</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">isNaN(value) </span><span style="color:#B31D28;">?</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(value)</span><span style="color:#B31D28;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#B31D28;">;</span></span></code></pre></div><p>Then substitute <code>float_of_string_opt</code> with <code>floatFromString</code> in your switch expression:</p><div class="language-re vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">re</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">(</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (celsius </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> floatFromString </span><span style="color:#FDAEB7;">|&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Option</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">map(convert)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">&quot;error&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">fahrenheit</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">when</span><span style="color:#E1E4E8;"> fahrenheit </span><span style="color:#FDAEB7;">&lt;</span><span style="color:#E1E4E8;"> (</span><span style="color:#FDAEB7;">-</span><span style="color:#79B8FF;">128</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">{</span><span style="color:#79B8FF;">js</span><span style="color:#FDAEB7;">|</span><span style="color:#DBEDFF;">Unreasonably cold🥶</span><span style="color:#FDAEB7;">|</span><span style="color:#79B8FF;">js</span><span style="color:#FDAEB7;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">fahrenheit</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">when</span><span style="color:#E1E4E8;"> fahrenheit </span><span style="color:#FDAEB7;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">212</span><span style="color:#FDAEB7;">.</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">{</span><span style="color:#79B8FF;">js</span><span style="color:#FDAEB7;">|</span><span style="color:#DBEDFF;">Unreasonably hot🥵</span><span style="color:#FDAEB7;">|</span><span style="color:#79B8FF;">js</span><span style="color:#FDAEB7;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Some</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">fahrenheit</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Js</span><span style="color:#FDAEB7;">.</span><span style="color:#B392F0;">Float</span><span style="color:#FDAEB7;">.</span><span style="color:#E1E4E8;">toFixed(fahrenheit</span><span style="color:#FDAEB7;">,</span><span style="color:#E1E4E8;"> ~digits</span><span style="color:#FDAEB7;">=</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">) </span><span style="color:#FDAEB7;">++</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;">{</span><span style="color:#79B8FF;">js</span><span style="color:#FDAEB7;">|</span><span style="color:#DBEDFF;">°F</span><span style="color:#FDAEB7;">|</span><span style="color:#79B8FF;">js</span><span style="color:#FDAEB7;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#24292E;">(</span></span>
<span class="line highlighted"><span style="color:#24292E;">  </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (celsius </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> floatFromString </span><span style="color:#B31D28;">|&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Option</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">map(convert)) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;error&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">fahrenheit</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">when</span><span style="color:#24292E;"> fahrenheit </span><span style="color:#B31D28;">&lt;</span><span style="color:#24292E;"> (</span><span style="color:#B31D28;">-</span><span style="color:#005CC5;">128</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">{</span><span style="color:#005CC5;">js</span><span style="color:#B31D28;">|</span><span style="color:#032F62;">Unreasonably cold🥶</span><span style="color:#B31D28;">|</span><span style="color:#005CC5;">js</span><span style="color:#B31D28;">}</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">fahrenheit</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">when</span><span style="color:#24292E;"> fahrenheit </span><span style="color:#B31D28;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">212</span><span style="color:#B31D28;">.</span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">{</span><span style="color:#005CC5;">js</span><span style="color:#B31D28;">|</span><span style="color:#032F62;">Unreasonably hot🥵</span><span style="color:#B31D28;">|</span><span style="color:#005CC5;">js</span><span style="color:#B31D28;">}</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Some</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">fahrenheit</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Js</span><span style="color:#B31D28;">.</span><span style="color:#6F42C1;">Float</span><span style="color:#B31D28;">.</span><span style="color:#24292E;">toFixed(fahrenheit</span><span style="color:#B31D28;">,</span><span style="color:#24292E;"> ~digits</span><span style="color:#B31D28;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">) </span><span style="color:#B31D28;">++</span><span style="color:#24292E;"> </span><span style="color:#B31D28;">{</span><span style="color:#005CC5;">js</span><span style="color:#B31D28;">|</span><span style="color:#032F62;">°F</span><span style="color:#B31D28;">|</span><span style="color:#005CC5;">js</span><span style="color:#B31D28;">}</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div></details><hr><p>View <a href="https://github.com/melange-re/melange-for-react-devs/blob/main/src/celsius-converter-option/" target="_blank" rel="noreferrer">source code</a> and <a href="https://react-book.melange.re/demo/src/celsius-converter-option/" target="_blank" rel="noreferrer">demo</a> for this chapter.</p>`,45),e=[p];function t(c,r,y,E,i,F){return n(),a("div",null,e)}const h=s(o,[["render",t]]);export{D as __pageData,h as default};
